program(1.0)
[buildInfo = dict<tensor<string, []>, tensor<string, []>>({{"coremlc-component-MIL", "5.16.0"}, {"coremlc-version", "1649.0.0"}})]
{
    func main<ios17>(tensor<fp32, [1, 29, 80]> feat, tensor<fp32, [2, 128, 8, 64]> ph_att_key_cache_in, tensor<fp32, [2, 64, 8, 128]> ph_att_value_cache_in, tensor<fp32, [2, 512, 1, 7]> ph_cnn_cache_in, tensor<fp32, [1, 1, 128]> ph_masks_in, tensor<fp32, [128]> ph_offset_in, tensor<fp32, [2, 128, 8, 64]> wp_att_key_cache_in, tensor<fp32, [12, 64, 8, 128]> wp_att_value_cache_in, tensor<fp32, [2, 128]> wp_c_cache_in, tensor<fp32, [12, 512, 1, 7]> wp_cnn_cache_in, tensor<fp32, [1, 1000, 64]> wp_ctx_emb, tensor<fp32, [1, 1, 1000]> wp_ctx_emb_mask, tensor<fp32, [2, 128]> wp_h_cache_in, tensor<fp32, [1, 1, 128]> wp_masks_in, tensor<fp32, [128]> wp_offset_in) [E5_FlagsEir = dict<tensor<string, []>, tensor<string, []>>({{"allowSoftmaxApproximation", "1"}, {"early_arch_conv_w_int8_no_bloat", "1"}, {"early_arch_extended_reshape", "1"}, {"experimental.ane.early_arch_transposes", "1"}, {"experimental.ane.enable_rsqrt", "1"}})] {
            tensor<int32, [1]> var_180_axes_0 = const()[name = tensor<string, []>("op_180_axes_0"), val = tensor<int32, [1]>([1])];
            tensor<string, []> ph_offset_in_to_fp16_dtype_0 = const()[name = tensor<string, []>("ph_offset_in_to_fp16_dtype_0"), val = tensor<string, []>("fp16")];
            tensor<fp16, [128]> cast_63 = cast(dtype = ph_offset_in_to_fp16_dtype_0, x = ph_offset_in);
            tensor<fp16, [128, 1]> var_180_cast = expand_dims(axes = var_180_axes_0, x = cast_63);
            tensor<fp16, []> var_181_promoted_to_fp16 = const()[name = tensor<string, []>("op_181_promoted_to_fp16"), val = tensor<fp16, []>(-120)];
            tensor<fp16, [128, 1]> offset_1_cast = add(x = var_180_cast, y = var_181_promoted_to_fp16);
            tensor<fp16, [512, 1]> x_1_weight_0_to_fp16 = const()[name = tensor<string, []>("x_1_weight_0_to_fp16"), val = tensor<fp16, [512, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(64)))];
            tensor<fp16, [512]> x_1_bias_0_to_fp16 = const()[name = tensor<string, []>("x_1_bias_0_to_fp16"), val = tensor<fp16, [512]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(1152)))];
            tensor<fp16, [128, 512]> x_1_cast = linear(bias = x_1_bias_0_to_fp16, weight = x_1_weight_0_to_fp16, x = offset_1_cast);
            tensor<fp16, [128, 512]> var_185_cast = sin(x = x_1_cast);
            tensor<int32, [1]> pos_emb_1_axes_0 = const()[name = tensor<string, []>("pos_emb_1_axes_0"), val = tensor<int32, [1]>([0])];
            tensor<fp16, [1, 128, 512]> pos_emb_1_cast = expand_dims(axes = pos_emb_1_axes_0, x = var_185_cast);
            tensor<string, []> feat_to_fp16_dtype_0 = const()[name = tensor<string, []>("feat_to_fp16_dtype_0"), val = tensor<string, []>("fp16")];
            tensor<fp16, [80]> secondary_encoder_global_cmvn_mean_to_fp16 = const()[name = tensor<string, []>("secondary_encoder_global_cmvn_mean_to_fp16"), val = tensor<fp16, [80]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(2240)))];
            tensor<fp16, [1, 29, 80]> cast_62 = cast(dtype = feat_to_fp16_dtype_0, x = feat);
            tensor<fp16, [1, 29, 80]> x_3_cast = sub(x = cast_62, y = secondary_encoder_global_cmvn_mean_to_fp16);
            tensor<fp16, [80]> secondary_encoder_global_cmvn_istd_to_fp16 = const()[name = tensor<string, []>("secondary_encoder_global_cmvn_istd_to_fp16"), val = tensor<fp16, [80]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(2496)))];
            tensor<fp16, [1, 29, 80]> xs_3_cast = mul(x = x_3_cast, y = secondary_encoder_global_cmvn_istd_to_fp16);
            tensor<int32, [1]> var_194_axes_0 = const()[name = tensor<string, []>("op_194_axes_0"), val = tensor<int32, [1]>([2])];
            tensor<fp16, [1, 128, 1, 512]> var_194_cast = expand_dims(axes = var_194_axes_0, x = pos_emb_1_cast);
            tensor<int32, [4]> var_199 = const()[name = tensor<string, []>("op_199"), val = tensor<int32, [4]>([1, -1, 1, 1])];
            tensor<string, []> ph_masks_in_to_fp16_dtype_0 = const()[name = tensor<string, []>("ph_masks_in_to_fp16_dtype_0"), val = tensor<string, []>("fp16")];
            tensor<fp16, [1, 1, 128]> cast_61 = cast(dtype = ph_masks_in_to_fp16_dtype_0, x = ph_masks_in);
            tensor<fp16, [1, 128, 1, 1]> mask_1_cast = reshape(shape = var_199, x = cast_61);
            tensor<int32, []> var_226 = const()[name = tensor<string, []>("op_226"), val = tensor<int32, []>(-1)];
            tensor<bool, []> var_227_interleave_0 = const()[name = tensor<string, []>("op_227_interleave_0"), val = tensor<bool, []>(false)];
            tensor<fp16, [2, 512, 1, 25]> op_224_to_fp16_affine_quantized = constexpr_affine_dequantize()[axis = tensor<int32, []>(0), name = tensor<string, []>("op_224_to_fp16_affine_quantized"), quantized_data = tensor<int8, [2, 512, 1, 25]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(2752))), scale = tensor<fp16, [2]>([0.00787353516, 0.00787353516]), zero_point = tensor<int8, [2]>([0, 0])];
            tensor<string, []> ph_cnn_cache_in_to_fp16_dtype_0 = const()[name = tensor<string, []>("ph_cnn_cache_in_to_fp16_dtype_0"), val = tensor<string, []>("fp16")];
            tensor<fp16, [2, 512, 1, 7]> cast_60 = cast(dtype = ph_cnn_cache_in_to_fp16_dtype_0, x = ph_cnn_cache_in);
            tensor<fp16, [2, 512, 1, 32]> var_227_cast = concat(axis = var_226, interleave = var_227_interleave_0, values = (op_224_to_fp16_affine_quantized, cast_60));
            tensor<int32, [2]> tile_0 = const()[name = tensor<string, []>("tile_0"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, []> var_230_axis_0 = const()[name = tensor<string, []>("op_230_axis_0"), val = tensor<int32, []>(0)];
            tensor<fp16, [1, 512, 1, 32]> var_230_cast_0, tensor<fp16, [1, 512, 1, 32]> var_230_cast_1 = split(axis = var_230_axis_0, split_sizes = tile_0, x = var_227_cast);
            tensor<int32, [2]> tile_1 = const()[name = tensor<string, []>("tile_1"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, []> var_235_axis_0 = const()[name = tensor<string, []>("op_235_axis_0"), val = tensor<int32, []>(0)];
            tensor<string, []> ph_att_key_cache_in_to_fp16_dtype_0 = const()[name = tensor<string, []>("ph_att_key_cache_in_to_fp16_dtype_0"), val = tensor<string, []>("fp16")];
            tensor<fp16, [2, 128, 8, 64]> cast_59 = cast(dtype = ph_att_key_cache_in_to_fp16_dtype_0, x = ph_att_key_cache_in);
            tensor<fp16, [1, 128, 8, 64]> var_235_cast_0, tensor<fp16, [1, 128, 8, 64]> var_235_cast_1 = split(axis = var_235_axis_0, split_sizes = tile_1, x = cast_59);
            tensor<int32, [2]> tile_2 = const()[name = tensor<string, []>("tile_2"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, []> var_240_axis_0 = const()[name = tensor<string, []>("op_240_axis_0"), val = tensor<int32, []>(0)];
            tensor<string, []> ph_att_value_cache_in_to_fp16_dtype_0 = const()[name = tensor<string, []>("ph_att_value_cache_in_to_fp16_dtype_0"), val = tensor<string, []>("fp16")];
            tensor<fp16, [2, 64, 8, 128]> cast_58 = cast(dtype = ph_att_value_cache_in_to_fp16_dtype_0, x = ph_att_value_cache_in);
            tensor<fp16, [1, 64, 8, 128]> var_240_cast_0, tensor<fp16, [1, 64, 8, 128]> var_240_cast_1 = split(axis = var_240_axis_0, split_sizes = tile_2, x = cast_58);
            tensor<int32, [3]> var_245_perm_0 = const()[name = tensor<string, []>("op_245_perm_0"), val = tensor<int32, [3]>([0, 2, 1])];
            tensor<int32, [1]> x_9_axes_0 = const()[name = tensor<string, []>("x_9_axes_0"), val = tensor<int32, [1]>([1])];
            tensor<fp16, [1, 80, 29]> transpose_25 = transpose(perm = var_245_perm_0, x = xs_3_cast);
            tensor<fp16, [1, 1, 80, 29]> x_9_cast = expand_dims(axes = x_9_axes_0, x = transpose_25);
            tensor<int32, [1]> var_251_axes_0 = const()[name = tensor<string, []>("op_251_axes_0"), val = tensor<int32, [1]>([1])];
            tensor<string, []> wp_offset_in_to_fp16_dtype_0 = const()[name = tensor<string, []>("wp_offset_in_to_fp16_dtype_0"), val = tensor<string, []>("fp16")];
            tensor<fp16, [128]> cast_57 = cast(dtype = wp_offset_in_to_fp16_dtype_0, x = wp_offset_in);
            tensor<fp16, [128, 1]> var_251_cast = expand_dims(axes = var_251_axes_0, x = cast_57);
            tensor<fp16, []> var_252_promoted_to_fp16 = const()[name = tensor<string, []>("op_252_promoted_to_fp16"), val = tensor<fp16, []>(-124)];
            tensor<fp16, [128, 1]> offset_cast = add(x = var_251_cast, y = var_252_promoted_to_fp16);
            tensor<fp16, [512, 1]> x_5_weight_0_to_fp16 = const()[name = tensor<string, []>("x_5_weight_0_to_fp16"), val = tensor<fp16, [512, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(28416)))];
            tensor<fp16, [512]> x_5_bias_0_to_fp16 = const()[name = tensor<string, []>("x_5_bias_0_to_fp16"), val = tensor<fp16, [512]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(29504)))];
            tensor<fp16, [128, 512]> x_5_cast = linear(bias = x_5_bias_0_to_fp16, weight = x_5_weight_0_to_fp16, x = offset_cast);
            tensor<fp16, [128, 512]> var_256_cast = sin(x = x_5_cast);
            tensor<int32, [1]> pos_emb_axes_0 = const()[name = tensor<string, []>("pos_emb_axes_0"), val = tensor<int32, [1]>([0])];
            tensor<fp16, [1, 128, 512]> pos_emb_cast = expand_dims(axes = pos_emb_axes_0, x = var_256_cast);
            tensor<fp16, [80]> primary_encoder_global_cmvn_mean_to_fp16 = const()[name = tensor<string, []>("primary_encoder_global_cmvn_mean_to_fp16"), val = tensor<fp16, [80]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(30592)))];
            tensor<fp16, [1, 29, 80]> x_7_cast = sub(x = cast_62, y = primary_encoder_global_cmvn_mean_to_fp16);
            tensor<fp16, [80]> primary_encoder_global_cmvn_istd_to_fp16 = const()[name = tensor<string, []>("primary_encoder_global_cmvn_istd_to_fp16"), val = tensor<fp16, [80]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(30848)))];
            tensor<fp16, [1, 29, 80]> xs_5_cast = mul(x = x_7_cast, y = primary_encoder_global_cmvn_istd_to_fp16);
            tensor<int32, [1]> var_265_axes_0 = const()[name = tensor<string, []>("op_265_axes_0"), val = tensor<int32, [1]>([2])];
            tensor<fp16, [1, 128, 1, 512]> var_265_cast = expand_dims(axes = var_265_axes_0, x = pos_emb_cast);
            tensor<int32, [4]> var_270 = const()[name = tensor<string, []>("op_270"), val = tensor<int32, [4]>([1, -1, 1, 1])];
            tensor<string, []> wp_masks_in_to_fp16_dtype_0 = const()[name = tensor<string, []>("wp_masks_in_to_fp16_dtype_0"), val = tensor<string, []>("fp16")];
            tensor<fp16, [1, 1, 128]> cast_56 = cast(dtype = wp_masks_in_to_fp16_dtype_0, x = wp_masks_in);
            tensor<fp16, [1, 128, 1, 1]> mask_3_cast = reshape(shape = var_270, x = cast_56);
            tensor<int32, []> var_297 = const()[name = tensor<string, []>("op_297"), val = tensor<int32, []>(-1)];
            tensor<bool, []> var_298_interleave_0 = const()[name = tensor<string, []>("op_298_interleave_0"), val = tensor<bool, []>(false)];
            tensor<fp16, [12, 512, 1, 25]> op_295_to_fp16_affine_quantized = constexpr_affine_dequantize()[axis = tensor<int32, []>(0), name = tensor<string, []>("op_295_to_fp16_affine_quantized"), quantized_data = tensor<int8, [12, 512, 1, 25]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(31104))), scale = tensor<fp16, [12]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(184896))), zero_point = tensor<int8, [12]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(184768)))];
            tensor<string, []> wp_cnn_cache_in_to_fp16_dtype_0 = const()[name = tensor<string, []>("wp_cnn_cache_in_to_fp16_dtype_0"), val = tensor<string, []>("fp16")];
            tensor<fp16, [12, 512, 1, 7]> cast_55 = cast(dtype = wp_cnn_cache_in_to_fp16_dtype_0, x = wp_cnn_cache_in);
            tensor<fp16, [12, 512, 1, 32]> var_298_cast = concat(axis = var_297, interleave = var_298_interleave_0, values = (op_295_to_fp16_affine_quantized, cast_55));
            tensor<int32, [12]> tile_3 = const()[name = tensor<string, []>("tile_3"), val = tensor<int32, [12]>([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])];
            tensor<int32, []> var_301_axis_0 = const()[name = tensor<string, []>("op_301_axis_0"), val = tensor<int32, []>(0)];
            tensor<fp16, [1, 512, 1, 32]> var_301_cast_0, tensor<fp16, [1, 512, 1, 32]> var_301_cast_1, tensor<fp16, [1, 512, 1, 32]> var_301_cast_2, tensor<fp16, [1, 512, 1, 32]> var_301_cast_3, tensor<fp16, [1, 512, 1, 32]> var_301_cast_4, tensor<fp16, [1, 512, 1, 32]> var_301_cast_5, tensor<fp16, [1, 512, 1, 32]> var_301_cast_6, tensor<fp16, [1, 512, 1, 32]> var_301_cast_7, tensor<fp16, [1, 512, 1, 32]> var_301_cast_8, tensor<fp16, [1, 512, 1, 32]> var_301_cast_9, tensor<fp16, [1, 512, 1, 32]> var_301_cast_10, tensor<fp16, [1, 512, 1, 32]> var_301_cast_11 = split(axis = var_301_axis_0, split_sizes = tile_3, x = var_298_cast);
            tensor<int32, [2]> tile_4 = const()[name = tensor<string, []>("tile_4"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, []> var_316_axis_0 = const()[name = tensor<string, []>("op_316_axis_0"), val = tensor<int32, []>(0)];
            tensor<string, []> wp_att_key_cache_in_to_fp16_dtype_0 = const()[name = tensor<string, []>("wp_att_key_cache_in_to_fp16_dtype_0"), val = tensor<string, []>("fp16")];
            tensor<fp16, [2, 128, 8, 64]> cast_54 = cast(dtype = wp_att_key_cache_in_to_fp16_dtype_0, x = wp_att_key_cache_in);
            tensor<fp16, [1, 128, 8, 64]> var_316_cast_0, tensor<fp16, [1, 128, 8, 64]> var_316_cast_1 = split(axis = var_316_axis_0, split_sizes = tile_4, x = cast_54);
            tensor<int32, [12]> tile_5 = const()[name = tensor<string, []>("tile_5"), val = tensor<int32, [12]>([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])];
            tensor<int32, []> var_321_axis_0 = const()[name = tensor<string, []>("op_321_axis_0"), val = tensor<int32, []>(0)];
            tensor<string, []> wp_att_value_cache_in_to_fp16_dtype_0 = const()[name = tensor<string, []>("wp_att_value_cache_in_to_fp16_dtype_0"), val = tensor<string, []>("fp16")];
            tensor<fp16, [12, 64, 8, 128]> cast_53 = cast(dtype = wp_att_value_cache_in_to_fp16_dtype_0, x = wp_att_value_cache_in);
            tensor<fp16, [1, 64, 8, 128]> var_321_cast_0, tensor<fp16, [1, 64, 8, 128]> var_321_cast_1, tensor<fp16, [1, 64, 8, 128]> var_321_cast_2, tensor<fp16, [1, 64, 8, 128]> var_321_cast_3, tensor<fp16, [1, 64, 8, 128]> var_321_cast_4, tensor<fp16, [1, 64, 8, 128]> var_321_cast_5, tensor<fp16, [1, 64, 8, 128]> var_321_cast_6, tensor<fp16, [1, 64, 8, 128]> var_321_cast_7, tensor<fp16, [1, 64, 8, 128]> var_321_cast_8, tensor<fp16, [1, 64, 8, 128]> var_321_cast_9, tensor<fp16, [1, 64, 8, 128]> var_321_cast_10, tensor<fp16, [1, 64, 8, 128]> var_321_cast_11 = split(axis = var_321_axis_0, split_sizes = tile_5, x = cast_53);
            tensor<int32, [3]> var_336_perm_0 = const()[name = tensor<string, []>("op_336_perm_0"), val = tensor<int32, [3]>([0, 2, 1])];
            tensor<int32, [1]> x_129_axes_0 = const()[name = tensor<string, []>("x_129_axes_0"), val = tensor<int32, [1]>([1])];
            tensor<fp16, [1, 80, 29]> transpose_24 = transpose(perm = var_336_perm_0, x = xs_5_cast);
            tensor<fp16, [1, 1, 80, 29]> x_129_cast = expand_dims(axes = x_129_axes_0, x = transpose_24);
            tensor<int32, [3]> var_341_perm_0 = const()[name = tensor<string, []>("op_341_perm_0"), val = tensor<int32, [3]>([0, 2, 1])];
            tensor<string, []> wp_ctx_emb_to_fp16_dtype_0 = const()[name = tensor<string, []>("wp_ctx_emb_to_fp16_dtype_0"), val = tensor<string, []>("fp16")];
            tensor<int32, [1]> x_797_axes_0 = const()[name = tensor<string, []>("x_797_axes_0"), val = tensor<int32, [1]>([2])];
            tensor<fp16, [1, 1000, 64]> cast_52 = cast(dtype = wp_ctx_emb_to_fp16_dtype_0, x = wp_ctx_emb);
            tensor<fp16, [1, 64, 1000]> transpose_23 = transpose(perm = var_341_perm_0, x = cast_52);
            tensor<fp16, [1, 64, 1, 1000]> x_797_cast = expand_dims(axes = x_797_axes_0, x = transpose_23);
            tensor<int32, [4]> var_348 = const()[name = tensor<string, []>("op_348"), val = tensor<int32, [4]>([1, -1, 1, 1])];
            tensor<string, []> wp_ctx_emb_mask_to_fp16_dtype_0 = const()[name = tensor<string, []>("wp_ctx_emb_mask_to_fp16_dtype_0"), val = tensor<string, []>("fp16")];
            tensor<fp16, [1, 1, 1000]> cast_51 = cast(dtype = wp_ctx_emb_mask_to_fp16_dtype_0, x = wp_ctx_emb_mask);
            tensor<fp16, [1, 1000, 1, 1]> mask_cast = reshape(shape = var_348, x = cast_51);
            tensor<int32, [1]> var_361_axes_0 = const()[name = tensor<string, []>("op_361_axes_0"), val = tensor<int32, [1]>([2])];
            tensor<string, []> wp_h_cache_in_to_fp16_dtype_0 = const()[name = tensor<string, []>("wp_h_cache_in_to_fp16_dtype_0"), val = tensor<string, []>("fp16")];
            tensor<fp16, [2, 128]> cast_50 = cast(dtype = wp_h_cache_in_to_fp16_dtype_0, x = wp_h_cache_in);
            tensor<fp16, [2, 128, 1]> var_361_cast = expand_dims(axes = var_361_axes_0, x = cast_50);
            tensor<int32, [1]> var_363_axes_0 = const()[name = tensor<string, []>("op_363_axes_0"), val = tensor<int32, [1]>([3])];
            tensor<fp16, [2, 128, 1, 1]> var_363_cast = expand_dims(axes = var_363_axes_0, x = var_361_cast);
            tensor<int32, [2]> tile_6 = const()[name = tensor<string, []>("tile_6"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, []> var_366_axis_0 = const()[name = tensor<string, []>("op_366_axis_0"), val = tensor<int32, []>(0)];
            tensor<fp16, [1, 128, 1, 1]> var_366_cast_0, tensor<fp16, [1, 128, 1, 1]> var_366_cast_1 = split(axis = var_366_axis_0, split_sizes = tile_6, x = var_363_cast);
            tensor<int32, [1]> var_380_axes_0 = const()[name = tensor<string, []>("op_380_axes_0"), val = tensor<int32, [1]>([2])];
            tensor<string, []> wp_c_cache_in_to_fp16_dtype_0 = const()[name = tensor<string, []>("wp_c_cache_in_to_fp16_dtype_0"), val = tensor<string, []>("fp16")];
            tensor<fp16, [2, 128]> cast_49 = cast(dtype = wp_c_cache_in_to_fp16_dtype_0, x = wp_c_cache_in);
            tensor<fp16, [2, 128, 1]> var_380_cast = expand_dims(axes = var_380_axes_0, x = cast_49);
            tensor<int32, [1]> var_382_axes_0 = const()[name = tensor<string, []>("op_382_axes_0"), val = tensor<int32, [1]>([3])];
            tensor<fp16, [2, 128, 1, 1]> var_382_cast = expand_dims(axes = var_382_axes_0, x = var_380_cast);
            tensor<int32, [2]> tile_7 = const()[name = tensor<string, []>("tile_7"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, []> var_385_axis_0 = const()[name = tensor<string, []>("op_385_axis_0"), val = tensor<int32, []>(0)];
            tensor<fp16, [1, 128, 1, 1]> var_385_cast_0, tensor<fp16, [1, 128, 1, 1]> var_385_cast_1 = split(axis = var_385_axis_0, split_sizes = tile_7, x = var_382_cast);
            tensor<int32, []> var_393 = const()[name = tensor<string, []>("op_393"), val = tensor<int32, []>(1)];
            tensor<int32, [4]> input_1_perm_0 = const()[name = tensor<string, []>("input_1_perm_0"), val = tensor<int32, [4]>([0, 2, 1, 3])];
            tensor<int32, [2]> var_398 = const()[name = tensor<string, []>("op_398"), val = tensor<int32, [2]>([1, 3])];
            tensor<int32, [2]> var_400 = const()[name = tensor<string, []>("op_400"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> x_11_pad_type_0 = const()[name = tensor<string, []>("x_11_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> x_11_pad_0 = const()[name = tensor<string, []>("x_11_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [512, 80, 1, 7]> secondary_encoder_embed_out_weight_to_fp16_affine_quantized = constexpr_affine_dequantize()[axis = tensor<int32, []>(0), name = tensor<string, []>("secondary_encoder_embed_out_weight_to_fp16_affine_quantized"), quantized_data = tensor<int8, [512, 80, 1, 7]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(185024))), scale = tensor<fp16, [512]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(472384))), zero_point = tensor<int8, [512]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(471808)))];
            tensor<fp16, [512]> secondary_encoder_embed_out_bias_to_fp16 = const()[name = tensor<string, []>("secondary_encoder_embed_out_bias_to_fp16"), val = tensor<fp16, [512]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(473472)))];
            tensor<fp16, [1, 80, 1, 29]> transpose_22 = transpose(perm = input_1_perm_0, x = x_9_cast);
            tensor<fp16, [1, 512, 1, 8]> x_11_cast = conv(bias = secondary_encoder_embed_out_bias_to_fp16, dilations = var_400, groups = var_393, pad = x_11_pad_0, pad_type = x_11_pad_type_0, strides = var_398, weight = secondary_encoder_embed_out_weight_to_fp16_affine_quantized, x = transpose_22);
            tensor<int32, []> var_408 = const()[name = tensor<string, []>("op_408"), val = tensor<int32, []>(512)];
            tensor<int32, []> var_415 = const()[name = tensor<string, []>("op_415"), val = tensor<int32, []>(2)];
            tensor<int32, []> var_418 = const()[name = tensor<string, []>("op_418"), val = tensor<int32, []>(-1)];
            tensor<bool, []> var_420 = const()[name = tensor<string, []>("op_420"), val = tensor<bool, []>(true)];
            tensor<int32, []> var_421 = const()[name = tensor<string, []>("op_421"), val = tensor<int32, []>(1)];
            tensor<fp16, [1, 512, 1, 8]> var_468_cast = abs(x = x_11_cast);
            tensor<fp16, []> var_469_to_fp16 = const()[name = tensor<string, []>("op_469_to_fp16"), val = tensor<fp16, []>(0.001953125)];
            tensor<fp16, [1, 512, 1, 8]> var_470_cast = mul(x = var_468_cast, y = var_469_to_fp16);
            tensor<int32, [1]> var_471 = const()[name = tensor<string, []>("op_471"), val = tensor<int32, [1]>([1])];
            tensor<fp16, [1, 1, 1, 8]> scale_1_cast = reduce_sum(axes = var_471, keep_dims = var_420, x = var_470_cast);
            tensor<fp16, []> scale_3_epsilon_0_to_fp16 = const()[name = tensor<string, []>("scale_3_epsilon_0_to_fp16"), val = tensor<fp16, []>(5.96046448e-08)];
            tensor<fp16, [1, 1, 1, 8]> scale_3_cast = rsqrt(epsilon = scale_3_epsilon_0_to_fp16, x = scale_1_cast);
            tensor<fp16, [1, 1, 1, 8]> scale_5_cast = mul(x = scale_3_cast, y = scale_3_cast);
            tensor<fp16, [1, 512, 1, 8]> x_13_cast = mul(x = x_11_cast, y = scale_5_cast);
            tensor<fp16, []> var_476_to_fp16 = const()[name = tensor<string, []>("op_476_to_fp16"), val = tensor<fp16, []>(-0.001953125)];
            tensor<fp16, [1, 512, 1, 8]> var_477_cast = mul(x = x_13_cast, y = var_476_to_fp16);
            tensor<int32, [1]> var_478 = const()[name = tensor<string, []>("op_478"), val = tensor<int32, [1]>([1])];
            tensor<fp16, [1, 1, 1, 8]> x_mean_1_cast = reduce_sum(axes = var_478, keep_dims = var_420, x = var_477_cast);
            tensor<fp16, [1, 512, 1, 8]> x_zero_mean_1_cast = add(x = x_13_cast, y = x_mean_1_cast);
            tensor<fp16, []> var_481_to_fp16 = const()[name = tensor<string, []>("op_481_to_fp16"), val = tensor<fp16, []>(0.001953125)];
            tensor<fp16, [1, 512, 1, 8]> var_482_cast = mul(x = x_zero_mean_1_cast, y = var_481_to_fp16);
            tensor<fp16, [1, 512, 1, 8]> var_483_cast = mul(x = var_482_cast, y = x_zero_mean_1_cast);
            tensor<int32, [1]> var_484 = const()[name = tensor<string, []>("op_484"), val = tensor<int32, [1]>([1])];
            tensor<fp16, [1, 1, 1, 8]> x_var_1_cast = reduce_sum(axes = var_484, keep_dims = var_420, x = var_483_cast);
            tensor<fp16, []> var_486_to_fp16 = const()[name = tensor<string, []>("op_486_to_fp16"), val = tensor<fp16, []>(1.00135803e-05)];
            tensor<fp16, [1, 1, 1, 8]> var_487_cast = add(x = x_var_1_cast, y = var_486_to_fp16);
            tensor<fp16, []> var_488_epsilon_0_to_fp16 = const()[name = tensor<string, []>("op_488_epsilon_0_to_fp16"), val = tensor<fp16, []>(5.96046448e-08)];
            tensor<fp16, [1, 1, 1, 8]> var_488_cast = rsqrt(epsilon = var_488_epsilon_0_to_fp16, x = var_487_cast);
            tensor<fp16, [1, 512, 1, 8]> var_489_cast = mul(x = x_zero_mean_1_cast, y = var_488_cast);
            tensor<fp16, [512]> x_15_mean_0_to_fp16 = const()[name = tensor<string, []>("x_15_mean_0_to_fp16"), val = tensor<fp16, [512]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(474560)))];
            tensor<fp16, [512]> x_15_variance_0_to_fp16 = const()[name = tensor<string, []>("x_15_variance_0_to_fp16"), val = tensor<fp16, [512]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(475648)))];
            tensor<fp16, [512]> x_15_gamma_0_to_fp16 = const()[name = tensor<string, []>("x_15_gamma_0_to_fp16"), val = tensor<fp16, [512]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(476736)))];
            tensor<fp16, [512]> x_15_beta_0_to_fp16 = const()[name = tensor<string, []>("x_15_beta_0_to_fp16"), val = tensor<fp16, [512]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(477824)))];
            tensor<fp16, []> x_15_epsilon_0_to_fp16 = const()[name = tensor<string, []>("x_15_epsilon_0_to_fp16"), val = tensor<fp16, []>(1.00135803e-05)];
            tensor<fp16, [1, 512, 1, 8]> x_15_cast = batch_norm(beta = x_15_beta_0_to_fp16, epsilon = x_15_epsilon_0_to_fp16, gamma = x_15_gamma_0_to_fp16, mean = x_15_mean_0_to_fp16, variance = x_15_variance_0_to_fp16, x = var_489_cast);
            tensor<int32, [2]> var_500 = const()[name = tensor<string, []>("op_500"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_502 = const()[name = tensor<string, []>("op_502"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> input_3_pad_type_0 = const()[name = tensor<string, []>("input_3_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> input_3_pad_0 = const()[name = tensor<string, []>("input_3_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [2048, 512, 1, 1]> op_499_to_fp16_affine_quantized = constexpr_affine_dequantize()[axis = tensor<int32, []>(0), name = tensor<string, []>("op_499_to_fp16_affine_quantized"), quantized_data = tensor<int8, [2048, 512, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(478912))), scale = tensor<fp16, [2048]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(1529664))), zero_point = tensor<int8, [2048]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(1527552)))];
            tensor<fp16, [2048]> secondary_encoder_encoders_0_feed_forward_macaron_w_1_bias_to_fp16 = const()[name = tensor<string, []>("secondary_encoder_encoders_0_feed_forward_macaron_w_1_bias_to_fp16"), val = tensor<fp16, [2048]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(1533824)))];
            tensor<fp16, [1, 2048, 1, 8]> input_3_cast = conv(bias = secondary_encoder_encoders_0_feed_forward_macaron_w_1_bias_to_fp16, dilations = var_502, groups = var_421, pad = input_3_pad_0, pad_type = input_3_pad_type_0, strides = var_500, weight = op_499_to_fp16_affine_quantized, x = x_15_cast);
            tensor<fp16, [1, 2048, 1, 8]> input_5_cast = silu(x = input_3_cast);
            tensor<int32, [2]> var_511 = const()[name = tensor<string, []>("op_511"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_513 = const()[name = tensor<string, []>("op_513"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> input_7_pad_type_0 = const()[name = tensor<string, []>("input_7_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> input_7_pad_0 = const()[name = tensor<string, []>("input_7_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [512, 2048, 1, 1]> op_518_weight_0_to_fp16_affine_quantized = constexpr_affine_dequantize()[axis = tensor<int32, []>(0), name = tensor<string, []>("op_518_weight_0_to_fp16_affine_quantized"), quantized_data = tensor<int8, [512, 2048, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(1537984))), scale = tensor<fp16, [512]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(2587200))), zero_point = tensor<int8, [512]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(2586624)))];
            tensor<fp16, [512]> var_518_bias_0_to_fp16 = const()[name = tensor<string, []>("op_518_bias_0_to_fp16"), val = tensor<fp16, [512]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(2588288)))];
            tensor<fp16, [1, 512, 1, 8]> var_518_cast = conv(bias = var_518_bias_0_to_fp16, dilations = var_513, groups = var_421, pad = input_7_pad_0, pad_type = input_7_pad_type_0, strides = var_511, weight = op_518_weight_0_to_fp16_affine_quantized, x = input_5_cast);
            tensor<fp16, [1, 512, 1, 8]> x_21_cast = add(x = x_11_cast, y = var_518_cast);
            tensor<fp16, [1, 512, 1, 8]> var_520_cast = abs(x = x_21_cast);
            tensor<fp16, []> var_521_to_fp16 = const()[name = tensor<string, []>("op_521_to_fp16"), val = tensor<fp16, []>(0.001953125)];
            tensor<fp16, [1, 512, 1, 8]> var_522_cast = mul(x = var_520_cast, y = var_521_to_fp16);
            tensor<int32, [1]> var_523 = const()[name = tensor<string, []>("op_523"), val = tensor<int32, [1]>([1])];
            tensor<fp16, [1, 1, 1, 8]> scale_7_cast = reduce_sum(axes = var_523, keep_dims = var_420, x = var_522_cast);
            tensor<fp16, []> scale_9_epsilon_0_to_fp16 = const()[name = tensor<string, []>("scale_9_epsilon_0_to_fp16"), val = tensor<fp16, []>(5.96046448e-08)];
            tensor<fp16, [1, 1, 1, 8]> scale_9_cast = rsqrt(epsilon = scale_9_epsilon_0_to_fp16, x = scale_7_cast);
            tensor<fp16, [1, 1, 1, 8]> scale_11_cast = mul(x = scale_9_cast, y = scale_9_cast);
            tensor<fp16, [1, 512, 1, 8]> x_23_cast = mul(x = x_21_cast, y = scale_11_cast);
            tensor<fp16, []> var_528_to_fp16 = const()[name = tensor<string, []>("op_528_to_fp16"), val = tensor<fp16, []>(-0.001953125)];
            tensor<fp16, [1, 512, 1, 8]> var_529_cast = mul(x = x_23_cast, y = var_528_to_fp16);
            tensor<int32, [1]> var_530 = const()[name = tensor<string, []>("op_530"), val = tensor<int32, [1]>([1])];
            tensor<fp16, [1, 1, 1, 8]> x_mean_3_cast = reduce_sum(axes = var_530, keep_dims = var_420, x = var_529_cast);
            tensor<fp16, [1, 512, 1, 8]> x_zero_mean_3_cast = add(x = x_23_cast, y = x_mean_3_cast);
            tensor<fp16, []> var_533_to_fp16 = const()[name = tensor<string, []>("op_533_to_fp16"), val = tensor<fp16, []>(0.001953125)];
            tensor<fp16, [1, 512, 1, 8]> var_534_cast = mul(x = x_zero_mean_3_cast, y = var_533_to_fp16);
            tensor<fp16, [1, 512, 1, 8]> var_535_cast = mul(x = var_534_cast, y = x_zero_mean_3_cast);
            tensor<int32, [1]> var_536 = const()[name = tensor<string, []>("op_536"), val = tensor<int32, [1]>([1])];
            tensor<fp16, [1, 1, 1, 8]> x_var_3_cast = reduce_sum(axes = var_536, keep_dims = var_420, x = var_535_cast);
            tensor<fp16, []> var_538_to_fp16 = const()[name = tensor<string, []>("op_538_to_fp16"), val = tensor<fp16, []>(1.00135803e-05)];
            tensor<fp16, [1, 1, 1, 8]> var_539_cast = add(x = x_var_3_cast, y = var_538_to_fp16);
            tensor<fp16, []> var_540_epsilon_0_to_fp16 = const()[name = tensor<string, []>("op_540_epsilon_0_to_fp16"), val = tensor<fp16, []>(5.96046448e-08)];
            tensor<fp16, [1, 1, 1, 8]> var_540_cast = rsqrt(epsilon = var_540_epsilon_0_to_fp16, x = var_539_cast);
            tensor<fp16, [1, 512, 1, 8]> var_541_cast = mul(x = x_zero_mean_3_cast, y = var_540_cast);
            tensor<fp16, [512]> x_25_mean_0_to_fp16 = const()[name = tensor<string, []>("x_25_mean_0_to_fp16"), val = tensor<fp16, [512]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(2589376)))];
            tensor<fp16, [512]> x_25_variance_0_to_fp16 = const()[name = tensor<string, []>("x_25_variance_0_to_fp16"), val = tensor<fp16, [512]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(2590464)))];
            tensor<fp16, [512]> x_25_gamma_0_to_fp16 = const()[name = tensor<string, []>("x_25_gamma_0_to_fp16"), val = tensor<fp16, [512]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(2591552)))];
            tensor<fp16, [512]> x_25_beta_0_to_fp16 = const()[name = tensor<string, []>("x_25_beta_0_to_fp16"), val = tensor<fp16, [512]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(2592640)))];
            tensor<fp16, []> x_25_epsilon_0_to_fp16 = const()[name = tensor<string, []>("x_25_epsilon_0_to_fp16"), val = tensor<fp16, []>(1.00135803e-05)];
            tensor<fp16, [1, 512, 1, 8]> x_25_cast = batch_norm(beta = x_25_beta_0_to_fp16, epsilon = x_25_epsilon_0_to_fp16, gamma = x_25_gamma_0_to_fp16, mean = x_25_mean_0_to_fp16, variance = x_25_variance_0_to_fp16, x = var_541_cast);
            tensor<int32, [2]> var_572 = const()[name = tensor<string, []>("op_572"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_574 = const()[name = tensor<string, []>("op_574"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> y_1_pad_type_0 = const()[name = tensor<string, []>("y_1_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> y_1_pad_0 = const()[name = tensor<string, []>("y_1_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [512, 512, 1, 1]> op_578_weight_0_to_fp16_affine_quantized = constexpr_affine_dequantize()[axis = tensor<int32, []>(0), name = tensor<string, []>("op_578_weight_0_to_fp16_affine_quantized"), quantized_data = tensor<int8, [512, 512, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(2593728))), scale = tensor<fp16, [512]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(2856512))), zero_point = tensor<int8, [512]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(2855936)))];
            tensor<fp16, [512]> var_578_bias_0_to_fp16 = const()[name = tensor<string, []>("op_578_bias_0_to_fp16"), val = tensor<fp16, [512]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(2857600)))];
            tensor<fp16, [1, 512, 1, 8]> var_578_cast = conv(bias = var_578_bias_0_to_fp16, dilations = var_574, groups = var_421, pad = y_1_pad_0, pad_type = y_1_pad_type_0, strides = var_572, weight = op_578_weight_0_to_fp16_affine_quantized, x = x_25_cast);
            tensor<int32, [8]> tile_8 = const()[name = tensor<string, []>("tile_8"), val = tensor<int32, [8]>([64, 64, 64, 64, 64, 64, 64, 64])];
            tensor<int32, []> var_579_axis_0 = const()[name = tensor<string, []>("op_579_axis_0"), val = tensor<int32, []>(1)];
            tensor<fp16, [1, 64, 1, 8]> var_579_cast_0, tensor<fp16, [1, 64, 1, 8]> var_579_cast_1, tensor<fp16, [1, 64, 1, 8]> var_579_cast_2, tensor<fp16, [1, 64, 1, 8]> var_579_cast_3, tensor<fp16, [1, 64, 1, 8]> var_579_cast_4, tensor<fp16, [1, 64, 1, 8]> var_579_cast_5, tensor<fp16, [1, 64, 1, 8]> var_579_cast_6, tensor<fp16, [1, 64, 1, 8]> var_579_cast_7 = split(axis = var_579_axis_0, split_sizes = tile_8, x = var_578_cast);
            tensor<int32, [2]> var_592 = const()[name = tensor<string, []>("op_592"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_594 = const()[name = tensor<string, []>("op_594"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> var_596_pad_type_0 = const()[name = tensor<string, []>("op_596_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> var_596_pad_0 = const()[name = tensor<string, []>("op_596_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [512, 512, 1, 1]> op_591_to_fp16_affine_quantized = constexpr_affine_dequantize()[axis = tensor<int32, []>(0), name = tensor<string, []>("op_591_to_fp16_affine_quantized"), quantized_data = tensor<int8, [512, 512, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(2858688))), scale = tensor<fp16, [512]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(3121472))), zero_point = tensor<int8, [512]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(3120896)))];
            tensor<fp16, [512]> secondary_encoder_encoders_0_self_attn_linear_v_bias_to_fp16 = const()[name = tensor<string, []>("secondary_encoder_encoders_0_self_attn_linear_v_bias_to_fp16"), val = tensor<fp16, [512]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(3122560)))];
            tensor<fp16, [1, 512, 1, 8]> var_596_cast = conv(bias = secondary_encoder_encoders_0_self_attn_linear_v_bias_to_fp16, dilations = var_594, groups = var_421, pad = var_596_pad_0, pad_type = var_596_pad_type_0, strides = var_592, weight = op_591_to_fp16_affine_quantized, x = x_25_cast);
            tensor<int32, [8]> tile_9 = const()[name = tensor<string, []>("tile_9"), val = tensor<int32, [8]>([64, 64, 64, 64, 64, 64, 64, 64])];
            tensor<int32, []> var_597_axis_0 = const()[name = tensor<string, []>("op_597_axis_0"), val = tensor<int32, []>(1)];
            tensor<fp16, [1, 64, 1, 8]> var_597_cast_0, tensor<fp16, [1, 64, 1, 8]> var_597_cast_1, tensor<fp16, [1, 64, 1, 8]> var_597_cast_2, tensor<fp16, [1, 64, 1, 8]> var_597_cast_3, tensor<fp16, [1, 64, 1, 8]> var_597_cast_4, tensor<fp16, [1, 64, 1, 8]> var_597_cast_5, tensor<fp16, [1, 64, 1, 8]> var_597_cast_6, tensor<fp16, [1, 64, 1, 8]> var_597_cast_7 = split(axis = var_597_axis_0, split_sizes = tile_9, x = var_596_cast);
            tensor<int32, [4]> var_606_perm_0 = const()[name = tensor<string, []>("op_606_perm_0"), val = tensor<int32, [4]>([0, 3, 2, 1])];
            tensor<string, []> var_613_equation_0 = const()[name = tensor<string, []>("op_613_equation_0"), val = tensor<string, []>("bnhd,bdhm->bnhm")];
            tensor<fp16, [1, 512, 1, 512]> op_610_to_fp16_affine_quantized = constexpr_affine_dequantize()[axis = tensor<int32, []>(0), name = tensor<string, []>("op_610_to_fp16_affine_quantized"), quantized_data = tensor<int8, [1, 512, 1, 512]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(3123648))), scale = tensor<fp16, []>(0.0186920166), zero_point = tensor<int8, []>(0)];
            tensor<fp16, [1, 8, 1, 512]> transpose_21 = transpose(perm = var_606_perm_0, x = x_25_cast);
            tensor<fp16, [1, 8, 1, 512]> var_613_cast = einsum(equation = var_613_equation_0, values = (transpose_21, op_610_to_fp16_affine_quantized));
            tensor<fp16, [512]> secondary_encoder_encoders_0_self_attn_linear_k_bias_to_fp16 = const()[name = tensor<string, []>("secondary_encoder_encoders_0_self_attn_linear_k_bias_to_fp16"), val = tensor<fp16, [512]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(3385856)))];
            tensor<fp16, [1, 8, 1, 512]> var_614_cast = add(x = var_613_cast, y = secondary_encoder_encoders_0_self_attn_linear_k_bias_to_fp16);
            tensor<int32, [8]> tile_10 = const()[name = tensor<string, []>("tile_10"), val = tensor<int32, [8]>([64, 64, 64, 64, 64, 64, 64, 64])];
            tensor<int32, []> var_615_axis_0 = const()[name = tensor<string, []>("op_615_axis_0"), val = tensor<int32, []>(-1)];
            tensor<fp16, [1, 8, 1, 64]> var_615_cast_0, tensor<fp16, [1, 8, 1, 64]> var_615_cast_1, tensor<fp16, [1, 8, 1, 64]> var_615_cast_2, tensor<fp16, [1, 8, 1, 64]> var_615_cast_3, tensor<fp16, [1, 8, 1, 64]> var_615_cast_4, tensor<fp16, [1, 8, 1, 64]> var_615_cast_5, tensor<fp16, [1, 8, 1, 64]> var_615_cast_6, tensor<fp16, [1, 8, 1, 64]> var_615_cast_7 = split(axis = var_615_axis_0, split_sizes = tile_10, x = var_614_cast);
            tensor<int32, [8]> tile_11 = const()[name = tensor<string, []>("tile_11"), val = tensor<int32, [8]>([1, 1, 1, 1, 1, 1, 1, 1])];
            tensor<int32, []> var_625_axis_0 = const()[name = tensor<string, []>("op_625_axis_0"), val = tensor<int32, []>(2)];
            tensor<fp16, [1, 128, 1, 64]> var_625_cast_0, tensor<fp16, [1, 128, 1, 64]> var_625_cast_1, tensor<fp16, [1, 128, 1, 64]> var_625_cast_2, tensor<fp16, [1, 128, 1, 64]> var_625_cast_3, tensor<fp16, [1, 128, 1, 64]> var_625_cast_4, tensor<fp16, [1, 128, 1, 64]> var_625_cast_5, tensor<fp16, [1, 128, 1, 64]> var_625_cast_6, tensor<fp16, [1, 128, 1, 64]> var_625_cast_7 = split(axis = var_625_axis_0, split_sizes = tile_11, x = var_235_cast_0);
            tensor<int32, [8]> tile_12 = const()[name = tensor<string, []>("tile_12"), val = tensor<int32, [8]>([1, 1, 1, 1, 1, 1, 1, 1])];
            tensor<int32, []> var_634_axis_0 = const()[name = tensor<string, []>("op_634_axis_0"), val = tensor<int32, []>(2)];
            tensor<fp16, [1, 64, 1, 128]> var_634_cast_0, tensor<fp16, [1, 64, 1, 128]> var_634_cast_1, tensor<fp16, [1, 64, 1, 128]> var_634_cast_2, tensor<fp16, [1, 64, 1, 128]> var_634_cast_3, tensor<fp16, [1, 64, 1, 128]> var_634_cast_4, tensor<fp16, [1, 64, 1, 128]> var_634_cast_5, tensor<fp16, [1, 64, 1, 128]> var_634_cast_6, tensor<fp16, [1, 64, 1, 128]> var_634_cast_7 = split(axis = var_634_axis_0, split_sizes = tile_12, x = var_240_cast_0);
            tensor<bool, []> var_644_interleave_0 = const()[name = tensor<string, []>("op_644_interleave_0"), val = tensor<bool, []>(false)];
            tensor<fp16, [1, 136, 1, 64]> var_644_cast = concat(axis = var_421, interleave = var_644_interleave_0, values = (var_625_cast_0, var_615_cast_0));
            tensor<int32, [4]> var_646_begin_0 = const()[name = tensor<string, []>("op_646_begin_0"), val = tensor<int32, [4]>([0, 8, 0, 0])];
            tensor<int32, [4]> var_646_end_0 = const()[name = tensor<string, []>("op_646_end_0"), val = tensor<int32, [4]>([1, 136, 1, 64])];
            tensor<bool, [4]> var_646_end_mask_0 = const()[name = tensor<string, []>("op_646_end_mask_0"), val = tensor<bool, [4]>([true, true, true, true])];
            tensor<fp16, [1, 128, 1, 64]> var_646_cast = slice_by_index(begin = var_646_begin_0, end = var_646_end_0, end_mask = var_646_end_mask_0, x = var_644_cast);
            tensor<bool, []> var_650_interleave_0 = const()[name = tensor<string, []>("op_650_interleave_0"), val = tensor<bool, []>(false)];
            tensor<fp16, [1, 136, 1, 64]> var_650_cast = concat(axis = var_421, interleave = var_650_interleave_0, values = (var_625_cast_1, var_615_cast_1));
            tensor<int32, [4]> var_652_begin_0 = const()[name = tensor<string, []>("op_652_begin_0"), val = tensor<int32, [4]>([0, 8, 0, 0])];
            tensor<int32, [4]> var_652_end_0 = const()[name = tensor<string, []>("op_652_end_0"), val = tensor<int32, [4]>([1, 136, 1, 64])];
            tensor<bool, [4]> var_652_end_mask_0 = const()[name = tensor<string, []>("op_652_end_mask_0"), val = tensor<bool, [4]>([true, true, true, true])];
            tensor<fp16, [1, 128, 1, 64]> var_652_cast = slice_by_index(begin = var_652_begin_0, end = var_652_end_0, end_mask = var_652_end_mask_0, x = var_650_cast);
            tensor<bool, []> var_656_interleave_0 = const()[name = tensor<string, []>("op_656_interleave_0"), val = tensor<bool, []>(false)];
            tensor<fp16, [1, 136, 1, 64]> var_656_cast = concat(axis = var_421, interleave = var_656_interleave_0, values = (var_625_cast_2, var_615_cast_2));
            tensor<int32, [4]> var_658_begin_0 = const()[name = tensor<string, []>("op_658_begin_0"), val = tensor<int32, [4]>([0, 8, 0, 0])];
            tensor<int32, [4]> var_658_end_0 = const()[name = tensor<string, []>("op_658_end_0"), val = tensor<int32, [4]>([1, 136, 1, 64])];
            tensor<bool, [4]> var_658_end_mask_0 = const()[name = tensor<string, []>("op_658_end_mask_0"), val = tensor<bool, [4]>([true, true, true, true])];
            tensor<fp16, [1, 128, 1, 64]> var_658_cast = slice_by_index(begin = var_658_begin_0, end = var_658_end_0, end_mask = var_658_end_mask_0, x = var_656_cast);
            tensor<bool, []> var_662_interleave_0 = const()[name = tensor<string, []>("op_662_interleave_0"), val = tensor<bool, []>(false)];
            tensor<fp16, [1, 136, 1, 64]> var_662_cast = concat(axis = var_421, interleave = var_662_interleave_0, values = (var_625_cast_3, var_615_cast_3));
            tensor<int32, [4]> var_664_begin_0 = const()[name = tensor<string, []>("op_664_begin_0"), val = tensor<int32, [4]>([0, 8, 0, 0])];
            tensor<int32, [4]> var_664_end_0 = const()[name = tensor<string, []>("op_664_end_0"), val = tensor<int32, [4]>([1, 136, 1, 64])];
            tensor<bool, [4]> var_664_end_mask_0 = const()[name = tensor<string, []>("op_664_end_mask_0"), val = tensor<bool, [4]>([true, true, true, true])];
            tensor<fp16, [1, 128, 1, 64]> var_664_cast = slice_by_index(begin = var_664_begin_0, end = var_664_end_0, end_mask = var_664_end_mask_0, x = var_662_cast);
            tensor<bool, []> var_668_interleave_0 = const()[name = tensor<string, []>("op_668_interleave_0"), val = tensor<bool, []>(false)];
            tensor<fp16, [1, 136, 1, 64]> var_668_cast = concat(axis = var_421, interleave = var_668_interleave_0, values = (var_625_cast_4, var_615_cast_4));
            tensor<int32, [4]> var_670_begin_0 = const()[name = tensor<string, []>("op_670_begin_0"), val = tensor<int32, [4]>([0, 8, 0, 0])];
            tensor<int32, [4]> var_670_end_0 = const()[name = tensor<string, []>("op_670_end_0"), val = tensor<int32, [4]>([1, 136, 1, 64])];
            tensor<bool, [4]> var_670_end_mask_0 = const()[name = tensor<string, []>("op_670_end_mask_0"), val = tensor<bool, [4]>([true, true, true, true])];
            tensor<fp16, [1, 128, 1, 64]> var_670_cast = slice_by_index(begin = var_670_begin_0, end = var_670_end_0, end_mask = var_670_end_mask_0, x = var_668_cast);
            tensor<bool, []> var_674_interleave_0 = const()[name = tensor<string, []>("op_674_interleave_0"), val = tensor<bool, []>(false)];
            tensor<fp16, [1, 136, 1, 64]> var_674_cast = concat(axis = var_421, interleave = var_674_interleave_0, values = (var_625_cast_5, var_615_cast_5));
            tensor<int32, [4]> var_676_begin_0 = const()[name = tensor<string, []>("op_676_begin_0"), val = tensor<int32, [4]>([0, 8, 0, 0])];
            tensor<int32, [4]> var_676_end_0 = const()[name = tensor<string, []>("op_676_end_0"), val = tensor<int32, [4]>([1, 136, 1, 64])];
            tensor<bool, [4]> var_676_end_mask_0 = const()[name = tensor<string, []>("op_676_end_mask_0"), val = tensor<bool, [4]>([true, true, true, true])];
            tensor<fp16, [1, 128, 1, 64]> var_676_cast = slice_by_index(begin = var_676_begin_0, end = var_676_end_0, end_mask = var_676_end_mask_0, x = var_674_cast);
            tensor<bool, []> var_680_interleave_0 = const()[name = tensor<string, []>("op_680_interleave_0"), val = tensor<bool, []>(false)];
            tensor<fp16, [1, 136, 1, 64]> var_680_cast = concat(axis = var_421, interleave = var_680_interleave_0, values = (var_625_cast_6, var_615_cast_6));
            tensor<int32, [4]> var_682_begin_0 = const()[name = tensor<string, []>("op_682_begin_0"), val = tensor<int32, [4]>([0, 8, 0, 0])];
            tensor<int32, [4]> var_682_end_0 = const()[name = tensor<string, []>("op_682_end_0"), val = tensor<int32, [4]>([1, 136, 1, 64])];
            tensor<bool, [4]> var_682_end_mask_0 = const()[name = tensor<string, []>("op_682_end_mask_0"), val = tensor<bool, [4]>([true, true, true, true])];
            tensor<fp16, [1, 128, 1, 64]> var_682_cast = slice_by_index(begin = var_682_begin_0, end = var_682_end_0, end_mask = var_682_end_mask_0, x = var_680_cast);
            tensor<bool, []> var_686_interleave_0 = const()[name = tensor<string, []>("op_686_interleave_0"), val = tensor<bool, []>(false)];
            tensor<fp16, [1, 136, 1, 64]> var_686_cast = concat(axis = var_421, interleave = var_686_interleave_0, values = (var_625_cast_7, var_615_cast_7));
            tensor<int32, [4]> var_688_begin_0 = const()[name = tensor<string, []>("op_688_begin_0"), val = tensor<int32, [4]>([0, 8, 0, 0])];
            tensor<int32, [4]> var_688_end_0 = const()[name = tensor<string, []>("op_688_end_0"), val = tensor<int32, [4]>([1, 136, 1, 64])];
            tensor<bool, [4]> var_688_end_mask_0 = const()[name = tensor<string, []>("op_688_end_mask_0"), val = tensor<bool, [4]>([true, true, true, true])];
            tensor<fp16, [1, 128, 1, 64]> var_688_cast = slice_by_index(begin = var_688_begin_0, end = var_688_end_0, end_mask = var_688_end_mask_0, x = var_686_cast);
            tensor<bool, []> var_692_interleave_0 = const()[name = tensor<string, []>("op_692_interleave_0"), val = tensor<bool, []>(false)];
            tensor<fp16, [1, 64, 1, 136]> var_692_cast = concat(axis = var_418, interleave = var_692_interleave_0, values = (var_634_cast_0, var_597_cast_0));
            tensor<int32, [4]> var_696_begin_0 = const()[name = tensor<string, []>("op_696_begin_0"), val = tensor<int32, [4]>([0, 0, 0, 8])];
            tensor<int32, [4]> var_696_end_0 = const()[name = tensor<string, []>("op_696_end_0"), val = tensor<int32, [4]>([1, 64, 1, 136])];
            tensor<bool, [4]> var_696_end_mask_0 = const()[name = tensor<string, []>("op_696_end_mask_0"), val = tensor<bool, [4]>([true, true, true, true])];
            tensor<fp16, [1, 64, 1, 128]> var_696_cast = slice_by_index(begin = var_696_begin_0, end = var_696_end_0, end_mask = var_696_end_mask_0, x = var_692_cast);
            tensor<bool, []> var_698_interleave_0 = const()[name = tensor<string, []>("op_698_interleave_0"), val = tensor<bool, []>(false)];
            tensor<fp16, [1, 64, 1, 136]> var_698_cast = concat(axis = var_418, interleave = var_698_interleave_0, values = (var_634_cast_1, var_597_cast_1));
            tensor<int32, [4]> var_702_begin_0 = const()[name = tensor<string, []>("op_702_begin_0"), val = tensor<int32, [4]>([0, 0, 0, 8])];
            tensor<int32, [4]> var_702_end_0 = const()[name = tensor<string, []>("op_702_end_0"), val = tensor<int32, [4]>([1, 64, 1, 136])];
            tensor<bool, [4]> var_702_end_mask_0 = const()[name = tensor<string, []>("op_702_end_mask_0"), val = tensor<bool, [4]>([true, true, true, true])];
            tensor<fp16, [1, 64, 1, 128]> var_702_cast = slice_by_index(begin = var_702_begin_0, end = var_702_end_0, end_mask = var_702_end_mask_0, x = var_698_cast);
            tensor<bool, []> var_704_interleave_0 = const()[name = tensor<string, []>("op_704_interleave_0"), val = tensor<bool, []>(false)];
            tensor<fp16, [1, 64, 1, 136]> var_704_cast = concat(axis = var_418, interleave = var_704_interleave_0, values = (var_634_cast_2, var_597_cast_2));
            tensor<int32, [4]> var_708_begin_0 = const()[name = tensor<string, []>("op_708_begin_0"), val = tensor<int32, [4]>([0, 0, 0, 8])];
            tensor<int32, [4]> var_708_end_0 = const()[name = tensor<string, []>("op_708_end_0"), val = tensor<int32, [4]>([1, 64, 1, 136])];
            tensor<bool, [4]> var_708_end_mask_0 = const()[name = tensor<string, []>("op_708_end_mask_0"), val = tensor<bool, [4]>([true, true, true, true])];
            tensor<fp16, [1, 64, 1, 128]> var_708_cast = slice_by_index(begin = var_708_begin_0, end = var_708_end_0, end_mask = var_708_end_mask_0, x = var_704_cast);
            tensor<bool, []> var_710_interleave_0 = const()[name = tensor<string, []>("op_710_interleave_0"), val = tensor<bool, []>(false)];
            tensor<fp16, [1, 64, 1, 136]> var_710_cast = concat(axis = var_418, interleave = var_710_interleave_0, values = (var_634_cast_3, var_597_cast_3));
            tensor<int32, [4]> var_714_begin_0 = const()[name = tensor<string, []>("op_714_begin_0"), val = tensor<int32, [4]>([0, 0, 0, 8])];
            tensor<int32, [4]> var_714_end_0 = const()[name = tensor<string, []>("op_714_end_0"), val = tensor<int32, [4]>([1, 64, 1, 136])];
            tensor<bool, [4]> var_714_end_mask_0 = const()[name = tensor<string, []>("op_714_end_mask_0"), val = tensor<bool, [4]>([true, true, true, true])];
            tensor<fp16, [1, 64, 1, 128]> var_714_cast = slice_by_index(begin = var_714_begin_0, end = var_714_end_0, end_mask = var_714_end_mask_0, x = var_710_cast);
            tensor<bool, []> var_716_interleave_0 = const()[name = tensor<string, []>("op_716_interleave_0"), val = tensor<bool, []>(false)];
            tensor<fp16, [1, 64, 1, 136]> var_716_cast = concat(axis = var_418, interleave = var_716_interleave_0, values = (var_634_cast_4, var_597_cast_4));
            tensor<int32, [4]> var_720_begin_0 = const()[name = tensor<string, []>("op_720_begin_0"), val = tensor<int32, [4]>([0, 0, 0, 8])];
            tensor<int32, [4]> var_720_end_0 = const()[name = tensor<string, []>("op_720_end_0"), val = tensor<int32, [4]>([1, 64, 1, 136])];
            tensor<bool, [4]> var_720_end_mask_0 = const()[name = tensor<string, []>("op_720_end_mask_0"), val = tensor<bool, [4]>([true, true, true, true])];
            tensor<fp16, [1, 64, 1, 128]> var_720_cast = slice_by_index(begin = var_720_begin_0, end = var_720_end_0, end_mask = var_720_end_mask_0, x = var_716_cast);
            tensor<bool, []> var_722_interleave_0 = const()[name = tensor<string, []>("op_722_interleave_0"), val = tensor<bool, []>(false)];
            tensor<fp16, [1, 64, 1, 136]> var_722_cast = concat(axis = var_418, interleave = var_722_interleave_0, values = (var_634_cast_5, var_597_cast_5));
            tensor<int32, [4]> var_726_begin_0 = const()[name = tensor<string, []>("op_726_begin_0"), val = tensor<int32, [4]>([0, 0, 0, 8])];
            tensor<int32, [4]> var_726_end_0 = const()[name = tensor<string, []>("op_726_end_0"), val = tensor<int32, [4]>([1, 64, 1, 136])];
            tensor<bool, [4]> var_726_end_mask_0 = const()[name = tensor<string, []>("op_726_end_mask_0"), val = tensor<bool, [4]>([true, true, true, true])];
            tensor<fp16, [1, 64, 1, 128]> var_726_cast = slice_by_index(begin = var_726_begin_0, end = var_726_end_0, end_mask = var_726_end_mask_0, x = var_722_cast);
            tensor<bool, []> var_728_interleave_0 = const()[name = tensor<string, []>("op_728_interleave_0"), val = tensor<bool, []>(false)];
            tensor<fp16, [1, 64, 1, 136]> var_728_cast = concat(axis = var_418, interleave = var_728_interleave_0, values = (var_634_cast_6, var_597_cast_6));
            tensor<int32, [4]> var_732_begin_0 = const()[name = tensor<string, []>("op_732_begin_0"), val = tensor<int32, [4]>([0, 0, 0, 8])];
            tensor<int32, [4]> var_732_end_0 = const()[name = tensor<string, []>("op_732_end_0"), val = tensor<int32, [4]>([1, 64, 1, 136])];
            tensor<bool, [4]> var_732_end_mask_0 = const()[name = tensor<string, []>("op_732_end_mask_0"), val = tensor<bool, [4]>([true, true, true, true])];
            tensor<fp16, [1, 64, 1, 128]> var_732_cast = slice_by_index(begin = var_732_begin_0, end = var_732_end_0, end_mask = var_732_end_mask_0, x = var_728_cast);
            tensor<bool, []> var_734_interleave_0 = const()[name = tensor<string, []>("op_734_interleave_0"), val = tensor<bool, []>(false)];
            tensor<fp16, [1, 64, 1, 136]> var_734_cast = concat(axis = var_418, interleave = var_734_interleave_0, values = (var_634_cast_7, var_597_cast_7));
            tensor<int32, [4]> var_738_begin_0 = const()[name = tensor<string, []>("op_738_begin_0"), val = tensor<int32, [4]>([0, 0, 0, 8])];
            tensor<int32, [4]> var_738_end_0 = const()[name = tensor<string, []>("op_738_end_0"), val = tensor<int32, [4]>([1, 64, 1, 136])];
            tensor<bool, [4]> var_738_end_mask_0 = const()[name = tensor<string, []>("op_738_end_mask_0"), val = tensor<bool, [4]>([true, true, true, true])];
            tensor<fp16, [1, 64, 1, 128]> var_738_cast = slice_by_index(begin = var_738_begin_0, end = var_738_end_0, end_mask = var_738_end_mask_0, x = var_734_cast);
            tensor<bool, []> var_740_interleave_0 = const()[name = tensor<string, []>("op_740_interleave_0"), val = tensor<bool, []>(false)];
            tensor<fp16, [1, 128, 8, 64]> var_740_cast = concat(axis = var_415, interleave = var_740_interleave_0, values = (var_646_cast, var_652_cast, var_658_cast, var_664_cast, var_670_cast, var_676_cast, var_682_cast, var_688_cast));
            tensor<bool, []> var_742_interleave_0 = const()[name = tensor<string, []>("op_742_interleave_0"), val = tensor<bool, []>(false)];
            tensor<fp16, [1, 64, 8, 128]> var_742_cast = concat(axis = var_415, interleave = var_742_interleave_0, values = (var_696_cast, var_702_cast, var_708_cast, var_714_cast, var_720_cast, var_726_cast, var_732_cast, var_738_cast));
            tensor<string, []> var_749_equation_0 = const()[name = tensor<string, []>("op_749_equation_0"), val = tensor<string, []>("bnhd,bdhm->bnhm")];
            tensor<fp16, [1, 512, 1, 512]> op_746_to_fp16_affine_quantized = constexpr_affine_dequantize()[axis = tensor<int32, []>(0), name = tensor<string, []>("op_746_to_fp16_affine_quantized"), quantized_data = tensor<int8, [1, 512, 1, 512]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(3386944))), scale = tensor<fp16, []>(0.0596313477), zero_point = tensor<int8, []>(0)];
            tensor<fp16, [1, 128, 1, 512]> var_749_cast = einsum(equation = var_749_equation_0, values = (var_194_cast, op_746_to_fp16_affine_quantized));
            tensor<int32, [8]> tile_13 = const()[name = tensor<string, []>("tile_13"), val = tensor<int32, [8]>([64, 64, 64, 64, 64, 64, 64, 64])];
            tensor<int32, []> var_750_axis_0 = const()[name = tensor<string, []>("op_750_axis_0"), val = tensor<int32, []>(-1)];
            tensor<fp16, [1, 128, 1, 64]> var_750_cast_0, tensor<fp16, [1, 128, 1, 64]> var_750_cast_1, tensor<fp16, [1, 128, 1, 64]> var_750_cast_2, tensor<fp16, [1, 128, 1, 64]> var_750_cast_3, tensor<fp16, [1, 128, 1, 64]> var_750_cast_4, tensor<fp16, [1, 128, 1, 64]> var_750_cast_5, tensor<fp16, [1, 128, 1, 64]> var_750_cast_6, tensor<fp16, [1, 128, 1, 64]> var_750_cast_7 = split(axis = var_750_axis_0, split_sizes = tile_13, x = var_749_cast);
            tensor<fp16, [1, 64, 1, 1]> var_771_to_fp16 = const()[name = tensor<string, []>("op_771_to_fp16"), val = tensor<fp16, [1, 64, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(3649152)))];
            tensor<fp16, [1, 64, 1, 8]> var_772_cast = add(x = var_579_cast_0, y = var_771_to_fp16);
            tensor<fp16, [1, 64, 1, 1]> var_774_to_fp16 = const()[name = tensor<string, []>("op_774_to_fp16"), val = tensor<fp16, [1, 64, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(3649344)))];
            tensor<fp16, [1, 64, 1, 8]> var_775_cast = add(x = var_579_cast_1, y = var_774_to_fp16);
            tensor<fp16, [1, 64, 1, 1]> var_777_to_fp16 = const()[name = tensor<string, []>("op_777_to_fp16"), val = tensor<fp16, [1, 64, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(3649536)))];
            tensor<fp16, [1, 64, 1, 8]> var_778_cast = add(x = var_579_cast_2, y = var_777_to_fp16);
            tensor<fp16, [1, 64, 1, 1]> var_780_to_fp16 = const()[name = tensor<string, []>("op_780_to_fp16"), val = tensor<fp16, [1, 64, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(3649728)))];
            tensor<fp16, [1, 64, 1, 8]> var_781_cast = add(x = var_579_cast_3, y = var_780_to_fp16);
            tensor<fp16, [1, 64, 1, 1]> var_783_to_fp16 = const()[name = tensor<string, []>("op_783_to_fp16"), val = tensor<fp16, [1, 64, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(3649920)))];
            tensor<fp16, [1, 64, 1, 8]> var_784_cast = add(x = var_579_cast_4, y = var_783_to_fp16);
            tensor<fp16, [1, 64, 1, 1]> var_786_to_fp16 = const()[name = tensor<string, []>("op_786_to_fp16"), val = tensor<fp16, [1, 64, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(3650112)))];
            tensor<fp16, [1, 64, 1, 8]> var_787_cast = add(x = var_579_cast_5, y = var_786_to_fp16);
            tensor<fp16, [1, 64, 1, 1]> var_789_to_fp16 = const()[name = tensor<string, []>("op_789_to_fp16"), val = tensor<fp16, [1, 64, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(3650304)))];
            tensor<fp16, [1, 64, 1, 8]> var_790_cast = add(x = var_579_cast_6, y = var_789_to_fp16);
            tensor<fp16, [1, 64, 1, 1]> var_792_to_fp16 = const()[name = tensor<string, []>("op_792_to_fp16"), val = tensor<fp16, [1, 64, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(3650496)))];
            tensor<fp16, [1, 64, 1, 8]> var_793_cast = add(x = var_579_cast_7, y = var_792_to_fp16);
            tensor<fp16, [1, 64, 1, 1]> var_806_to_fp16 = const()[name = tensor<string, []>("op_806_to_fp16"), val = tensor<fp16, [1, 64, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(3650688)))];
            tensor<fp16, [1, 64, 1, 8]> var_807_cast = add(x = var_579_cast_0, y = var_806_to_fp16);
            tensor<fp16, [1, 64, 1, 1]> var_809_to_fp16 = const()[name = tensor<string, []>("op_809_to_fp16"), val = tensor<fp16, [1, 64, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(3650880)))];
            tensor<fp16, [1, 64, 1, 8]> var_810_cast = add(x = var_579_cast_1, y = var_809_to_fp16);
            tensor<fp16, [1, 64, 1, 1]> var_812_to_fp16 = const()[name = tensor<string, []>("op_812_to_fp16"), val = tensor<fp16, [1, 64, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(3651072)))];
            tensor<fp16, [1, 64, 1, 8]> var_813_cast = add(x = var_579_cast_2, y = var_812_to_fp16);
            tensor<fp16, [1, 64, 1, 1]> var_815_to_fp16 = const()[name = tensor<string, []>("op_815_to_fp16"), val = tensor<fp16, [1, 64, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(3651264)))];
            tensor<fp16, [1, 64, 1, 8]> var_816_cast = add(x = var_579_cast_3, y = var_815_to_fp16);
            tensor<fp16, [1, 64, 1, 1]> var_818_to_fp16 = const()[name = tensor<string, []>("op_818_to_fp16"), val = tensor<fp16, [1, 64, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(3651456)))];
            tensor<fp16, [1, 64, 1, 8]> var_819_cast = add(x = var_579_cast_4, y = var_818_to_fp16);
            tensor<fp16, [1, 64, 1, 1]> var_821_to_fp16 = const()[name = tensor<string, []>("op_821_to_fp16"), val = tensor<fp16, [1, 64, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(3651648)))];
            tensor<fp16, [1, 64, 1, 8]> var_822_cast = add(x = var_579_cast_5, y = var_821_to_fp16);
            tensor<fp16, [1, 64, 1, 1]> var_824_to_fp16 = const()[name = tensor<string, []>("op_824_to_fp16"), val = tensor<fp16, [1, 64, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(3651840)))];
            tensor<fp16, [1, 64, 1, 8]> var_825_cast = add(x = var_579_cast_6, y = var_824_to_fp16);
            tensor<fp16, [1, 64, 1, 1]> var_827_to_fp16 = const()[name = tensor<string, []>("op_827_to_fp16"), val = tensor<fp16, [1, 64, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(3652032)))];
            tensor<fp16, [1, 64, 1, 8]> var_828_cast = add(x = var_579_cast_7, y = var_827_to_fp16);
            tensor<string, []> ac_1_equation_0 = const()[name = tensor<string, []>("ac_1_equation_0"), val = tensor<string, []>("bnhd,bdhm->bnhm")];
            tensor<fp16, [1, 128, 1, 8]> ac_1_cast = einsum(equation = ac_1_equation_0, values = (var_646_cast, var_772_cast));
            tensor<string, []> ac_3_equation_0 = const()[name = tensor<string, []>("ac_3_equation_0"), val = tensor<string, []>("bnhd,bdhm->bnhm")];
            tensor<fp16, [1, 128, 1, 8]> ac_3_cast = einsum(equation = ac_3_equation_0, values = (var_652_cast, var_775_cast));
            tensor<string, []> ac_5_equation_0 = const()[name = tensor<string, []>("ac_5_equation_0"), val = tensor<string, []>("bnhd,bdhm->bnhm")];
            tensor<fp16, [1, 128, 1, 8]> ac_5_cast = einsum(equation = ac_5_equation_0, values = (var_658_cast, var_778_cast));
            tensor<string, []> ac_7_equation_0 = const()[name = tensor<string, []>("ac_7_equation_0"), val = tensor<string, []>("bnhd,bdhm->bnhm")];
            tensor<fp16, [1, 128, 1, 8]> ac_7_cast = einsum(equation = ac_7_equation_0, values = (var_664_cast, var_781_cast));
            tensor<string, []> ac_9_equation_0 = const()[name = tensor<string, []>("ac_9_equation_0"), val = tensor<string, []>("bnhd,bdhm->bnhm")];
            tensor<fp16, [1, 128, 1, 8]> ac_9_cast = einsum(equation = ac_9_equation_0, values = (var_670_cast, var_784_cast));
            tensor<string, []> ac_11_equation_0 = const()[name = tensor<string, []>("ac_11_equation_0"), val = tensor<string, []>("bnhd,bdhm->bnhm")];
            tensor<fp16, [1, 128, 1, 8]> ac_11_cast = einsum(equation = ac_11_equation_0, values = (var_676_cast, var_787_cast));
            tensor<string, []> ac_13_equation_0 = const()[name = tensor<string, []>("ac_13_equation_0"), val = tensor<string, []>("bnhd,bdhm->bnhm")];
            tensor<fp16, [1, 128, 1, 8]> ac_13_cast = einsum(equation = ac_13_equation_0, values = (var_682_cast, var_790_cast));
            tensor<string, []> ac_15_equation_0 = const()[name = tensor<string, []>("ac_15_equation_0"), val = tensor<string, []>("bnhd,bdhm->bnhm")];
            tensor<fp16, [1, 128, 1, 8]> ac_15_cast = einsum(equation = ac_15_equation_0, values = (var_688_cast, var_793_cast));
            tensor<string, []> bd_1_equation_0 = const()[name = tensor<string, []>("bd_1_equation_0"), val = tensor<string, []>("bnhd,bdhm->bnhm")];
            tensor<fp16, [1, 128, 1, 8]> bd_1_cast = einsum(equation = bd_1_equation_0, values = (var_750_cast_0, var_807_cast));
            tensor<string, []> bd_3_equation_0 = const()[name = tensor<string, []>("bd_3_equation_0"), val = tensor<string, []>("bnhd,bdhm->bnhm")];
            tensor<fp16, [1, 128, 1, 8]> bd_3_cast = einsum(equation = bd_3_equation_0, values = (var_750_cast_1, var_810_cast));
            tensor<string, []> bd_5_equation_0 = const()[name = tensor<string, []>("bd_5_equation_0"), val = tensor<string, []>("bnhd,bdhm->bnhm")];
            tensor<fp16, [1, 128, 1, 8]> bd_5_cast = einsum(equation = bd_5_equation_0, values = (var_750_cast_2, var_813_cast));
            tensor<string, []> bd_7_equation_0 = const()[name = tensor<string, []>("bd_7_equation_0"), val = tensor<string, []>("bnhd,bdhm->bnhm")];
            tensor<fp16, [1, 128, 1, 8]> bd_7_cast = einsum(equation = bd_7_equation_0, values = (var_750_cast_3, var_816_cast));
            tensor<string, []> bd_9_equation_0 = const()[name = tensor<string, []>("bd_9_equation_0"), val = tensor<string, []>("bnhd,bdhm->bnhm")];
            tensor<fp16, [1, 128, 1, 8]> bd_9_cast = einsum(equation = bd_9_equation_0, values = (var_750_cast_4, var_819_cast));
            tensor<string, []> bd_11_equation_0 = const()[name = tensor<string, []>("bd_11_equation_0"), val = tensor<string, []>("bnhd,bdhm->bnhm")];
            tensor<fp16, [1, 128, 1, 8]> bd_11_cast = einsum(equation = bd_11_equation_0, values = (var_750_cast_5, var_822_cast));
            tensor<string, []> bd_13_equation_0 = const()[name = tensor<string, []>("bd_13_equation_0"), val = tensor<string, []>("bnhd,bdhm->bnhm")];
            tensor<fp16, [1, 128, 1, 8]> bd_13_cast = einsum(equation = bd_13_equation_0, values = (var_750_cast_6, var_825_cast));
            tensor<string, []> bd_15_equation_0 = const()[name = tensor<string, []>("bd_15_equation_0"), val = tensor<string, []>("bnhd,bdhm->bnhm")];
            tensor<fp16, [1, 128, 1, 8]> bd_15_cast = einsum(equation = bd_15_equation_0, values = (var_750_cast_7, var_828_cast));
            tensor<fp16, []> var_861_promoted_to_fp16 = const()[name = tensor<string, []>("op_861_promoted_to_fp16"), val = tensor<fp16, []>(1)];
            tensor<fp16, [1, 128, 1, 1]> var_862_cast = sub(x = mask_1_cast, y = var_861_promoted_to_fp16);
            tensor<fp16, []> var_863_to_fp16 = const()[name = tensor<string, []>("op_863_to_fp16"), val = tensor<fp16, []>(32096)];
            tensor<fp16, [1, 128, 1, 1]> inf_mask_1_cast = mul(x = var_862_cast, y = var_863_to_fp16);
            tensor<fp16, [1, 128, 1, 8]> s_1_cast = add(x = ac_1_cast, y = bd_1_cast);
            tensor<fp16, [1, 128, 1, 8]> s_3_cast = add(x = ac_3_cast, y = bd_3_cast);
            tensor<fp16, [1, 128, 1, 8]> s_5_cast = add(x = ac_5_cast, y = bd_5_cast);
            tensor<fp16, [1, 128, 1, 8]> s_7_cast = add(x = ac_7_cast, y = bd_7_cast);
            tensor<fp16, [1, 128, 1, 8]> s_9_cast = add(x = ac_9_cast, y = bd_9_cast);
            tensor<fp16, [1, 128, 1, 8]> s_11_cast = add(x = ac_11_cast, y = bd_11_cast);
            tensor<fp16, [1, 128, 1, 8]> s_13_cast = add(x = ac_13_cast, y = bd_13_cast);
            tensor<fp16, [1, 128, 1, 8]> s_15_cast = add(x = ac_15_cast, y = bd_15_cast);
            tensor<fp16, [1, 128, 1, 8]> s_17_cast = add(x = inf_mask_1_cast, y = s_1_cast);
            tensor<fp16, [1, 128, 1, 8]> s_19_cast = add(x = inf_mask_1_cast, y = s_3_cast);
            tensor<fp16, [1, 128, 1, 8]> s_21_cast = add(x = inf_mask_1_cast, y = s_5_cast);
            tensor<fp16, [1, 128, 1, 8]> s_23_cast = add(x = inf_mask_1_cast, y = s_7_cast);
            tensor<fp16, [1, 128, 1, 8]> s_25_cast = add(x = inf_mask_1_cast, y = s_9_cast);
            tensor<fp16, [1, 128, 1, 8]> s_27_cast = add(x = inf_mask_1_cast, y = s_11_cast);
            tensor<fp16, [1, 128, 1, 8]> s_29_cast = add(x = inf_mask_1_cast, y = s_13_cast);
            tensor<fp16, [1, 128, 1, 8]> s_31_cast = add(x = inf_mask_1_cast, y = s_15_cast);
            tensor<fp16, [1, 128, 1, 8]> input_9_cast = softmax(axis = var_421, x = s_17_cast);
            tensor<fp16, [1, 128, 1, 8]> input_11_cast = softmax(axis = var_421, x = s_19_cast);
            tensor<fp16, [1, 128, 1, 8]> input_13_cast = softmax(axis = var_421, x = s_21_cast);
            tensor<fp16, [1, 128, 1, 8]> input_15_cast = softmax(axis = var_421, x = s_23_cast);
            tensor<fp16, [1, 128, 1, 8]> input_17_cast = softmax(axis = var_421, x = s_25_cast);
            tensor<fp16, [1, 128, 1, 8]> input_19_cast = softmax(axis = var_421, x = s_27_cast);
            tensor<fp16, [1, 128, 1, 8]> input_21_cast = softmax(axis = var_421, x = s_29_cast);
            tensor<fp16, [1, 128, 1, 8]> input_23_cast = softmax(axis = var_421, x = s_31_cast);
            tensor<string, []> var_898_equation_0 = const()[name = tensor<string, []>("op_898_equation_0"), val = tensor<string, []>("bnhd,bdhm->bnhm")];
            tensor<fp16, [1, 64, 1, 8]> var_898_cast = einsum(equation = var_898_equation_0, values = (var_696_cast, input_9_cast));
            tensor<string, []> var_900_equation_0 = const()[name = tensor<string, []>("op_900_equation_0"), val = tensor<string, []>("bnhd,bdhm->bnhm")];
            tensor<fp16, [1, 64, 1, 8]> var_900_cast = einsum(equation = var_900_equation_0, values = (var_702_cast, input_11_cast));
            tensor<string, []> var_902_equation_0 = const()[name = tensor<string, []>("op_902_equation_0"), val = tensor<string, []>("bnhd,bdhm->bnhm")];
            tensor<fp16, [1, 64, 1, 8]> var_902_cast = einsum(equation = var_902_equation_0, values = (var_708_cast, input_13_cast));
            tensor<string, []> var_904_equation_0 = const()[name = tensor<string, []>("op_904_equation_0"), val = tensor<string, []>("bnhd,bdhm->bnhm")];
            tensor<fp16, [1, 64, 1, 8]> var_904_cast = einsum(equation = var_904_equation_0, values = (var_714_cast, input_15_cast));
            tensor<string, []> var_906_equation_0 = const()[name = tensor<string, []>("op_906_equation_0"), val = tensor<string, []>("bnhd,bdhm->bnhm")];
            tensor<fp16, [1, 64, 1, 8]> var_906_cast = einsum(equation = var_906_equation_0, values = (var_720_cast, input_17_cast));
            tensor<string, []> var_908_equation_0 = const()[name = tensor<string, []>("op_908_equation_0"), val = tensor<string, []>("bnhd,bdhm->bnhm")];
            tensor<fp16, [1, 64, 1, 8]> var_908_cast = einsum(equation = var_908_equation_0, values = (var_726_cast, input_19_cast));
            tensor<string, []> var_910_equation_0 = const()[name = tensor<string, []>("op_910_equation_0"), val = tensor<string, []>("bnhd,bdhm->bnhm")];
            tensor<fp16, [1, 64, 1, 8]> var_910_cast = einsum(equation = var_910_equation_0, values = (var_732_cast, input_21_cast));
            tensor<string, []> var_912_equation_0 = const()[name = tensor<string, []>("op_912_equation_0"), val = tensor<string, []>("bnhd,bdhm->bnhm")];
            tensor<fp16, [1, 64, 1, 8]> var_912_cast = einsum(equation = var_912_equation_0, values = (var_738_cast, input_23_cast));
            tensor<bool, []> y_3_interleave_0 = const()[name = tensor<string, []>("y_3_interleave_0"), val = tensor<bool, []>(false)];
            tensor<fp16, [1, 512, 1, 8]> y_3_cast = concat(axis = var_421, interleave = y_3_interleave_0, values = (var_898_cast, var_900_cast, var_902_cast, var_904_cast, var_906_cast, var_908_cast, var_910_cast, var_912_cast));
            tensor<int32, [2]> var_919 = const()[name = tensor<string, []>("op_919"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_921 = const()[name = tensor<string, []>("op_921"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> input_25_pad_type_0 = const()[name = tensor<string, []>("input_25_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> input_25_pad_0 = const()[name = tensor<string, []>("input_25_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [512, 512, 1, 1]> op_918_to_fp16_affine_quantized = constexpr_affine_dequantize()[axis = tensor<int32, []>(0), name = tensor<string, []>("op_918_to_fp16_affine_quantized"), quantized_data = tensor<int8, [512, 512, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(3652224))), scale = tensor<fp16, [512]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(3915008))), zero_point = tensor<int8, [512]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(3914432)))];
            tensor<fp16, [512]> secondary_encoder_encoders_0_self_attn_linear_out_bias_to_fp16 = const()[name = tensor<string, []>("secondary_encoder_encoders_0_self_attn_linear_out_bias_to_fp16"), val = tensor<fp16, [512]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(3916096)))];
            tensor<fp16, [1, 512, 1, 8]> input_25_cast = conv(bias = secondary_encoder_encoders_0_self_attn_linear_out_bias_to_fp16, dilations = var_921, groups = var_421, pad = input_25_pad_0, pad_type = input_25_pad_type_0, strides = var_919, weight = op_918_to_fp16_affine_quantized, x = y_3_cast);
            tensor<fp16, [1, 512, 1, 8]> x_27_cast = add(x = x_21_cast, y = input_25_cast);
            tensor<fp16, [1, 512, 1, 8]> var_930_cast = abs(x = x_27_cast);
            tensor<fp16, []> var_931_to_fp16 = const()[name = tensor<string, []>("op_931_to_fp16"), val = tensor<fp16, []>(0.001953125)];
            tensor<fp16, [1, 512, 1, 8]> var_932_cast = mul(x = var_930_cast, y = var_931_to_fp16);
            tensor<int32, [1]> var_933 = const()[name = tensor<string, []>("op_933"), val = tensor<int32, [1]>([1])];
            tensor<fp16, [1, 1, 1, 8]> scale_13_cast = reduce_sum(axes = var_933, keep_dims = var_420, x = var_932_cast);
            tensor<fp16, []> scale_15_epsilon_0_to_fp16 = const()[name = tensor<string, []>("scale_15_epsilon_0_to_fp16"), val = tensor<fp16, []>(5.96046448e-08)];
            tensor<fp16, [1, 1, 1, 8]> scale_15_cast = rsqrt(epsilon = scale_15_epsilon_0_to_fp16, x = scale_13_cast);
            tensor<fp16, [1, 1, 1, 8]> scale_17_cast = mul(x = scale_15_cast, y = scale_15_cast);
            tensor<fp16, [1, 512, 1, 8]> x_29_cast = mul(x = x_27_cast, y = scale_17_cast);
            tensor<fp16, []> var_938_to_fp16 = const()[name = tensor<string, []>("op_938_to_fp16"), val = tensor<fp16, []>(-0.001953125)];
            tensor<fp16, [1, 512, 1, 8]> var_939_cast = mul(x = x_29_cast, y = var_938_to_fp16);
            tensor<int32, [1]> var_940 = const()[name = tensor<string, []>("op_940"), val = tensor<int32, [1]>([1])];
            tensor<fp16, [1, 1, 1, 8]> x_mean_5_cast = reduce_sum(axes = var_940, keep_dims = var_420, x = var_939_cast);
            tensor<fp16, [1, 512, 1, 8]> x_zero_mean_5_cast = add(x = x_29_cast, y = x_mean_5_cast);
            tensor<fp16, []> var_943_to_fp16 = const()[name = tensor<string, []>("op_943_to_fp16"), val = tensor<fp16, []>(0.001953125)];
            tensor<fp16, [1, 512, 1, 8]> var_944_cast = mul(x = x_zero_mean_5_cast, y = var_943_to_fp16);
            tensor<fp16, [1, 512, 1, 8]> var_945_cast = mul(x = var_944_cast, y = x_zero_mean_5_cast);
            tensor<int32, [1]> var_946 = const()[name = tensor<string, []>("op_946"), val = tensor<int32, [1]>([1])];
            tensor<fp16, [1, 1, 1, 8]> x_var_5_cast = reduce_sum(axes = var_946, keep_dims = var_420, x = var_945_cast);
            tensor<fp16, []> var_948_to_fp16 = const()[name = tensor<string, []>("op_948_to_fp16"), val = tensor<fp16, []>(1.00135803e-05)];
            tensor<fp16, [1, 1, 1, 8]> var_949_cast = add(x = x_var_5_cast, y = var_948_to_fp16);
            tensor<fp16, []> var_950_epsilon_0_to_fp16 = const()[name = tensor<string, []>("op_950_epsilon_0_to_fp16"), val = tensor<fp16, []>(5.96046448e-08)];
            tensor<fp16, [1, 1, 1, 8]> var_950_cast = rsqrt(epsilon = var_950_epsilon_0_to_fp16, x = var_949_cast);
            tensor<fp16, [1, 512, 1, 8]> var_951_cast = mul(x = x_zero_mean_5_cast, y = var_950_cast);
            tensor<fp16, [512]> x_31_mean_0_to_fp16 = const()[name = tensor<string, []>("x_31_mean_0_to_fp16"), val = tensor<fp16, [512]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(3917184)))];
            tensor<fp16, [512]> x_31_variance_0_to_fp16 = const()[name = tensor<string, []>("x_31_variance_0_to_fp16"), val = tensor<fp16, [512]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(3918272)))];
            tensor<fp16, [512]> x_31_gamma_0_to_fp16 = const()[name = tensor<string, []>("x_31_gamma_0_to_fp16"), val = tensor<fp16, [512]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(3919360)))];
            tensor<fp16, [512]> x_31_beta_0_to_fp16 = const()[name = tensor<string, []>("x_31_beta_0_to_fp16"), val = tensor<fp16, [512]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(3920448)))];
            tensor<fp16, []> x_31_epsilon_0_to_fp16 = const()[name = tensor<string, []>("x_31_epsilon_0_to_fp16"), val = tensor<fp16, []>(1.00135803e-05)];
            tensor<fp16, [1, 512, 1, 8]> x_31_cast = batch_norm(beta = x_31_beta_0_to_fp16, epsilon = x_31_epsilon_0_to_fp16, gamma = x_31_gamma_0_to_fp16, mean = x_31_mean_0_to_fp16, variance = x_31_variance_0_to_fp16, x = var_951_cast);
            tensor<bool, []> x_33_interleave_0 = const()[name = tensor<string, []>("x_33_interleave_0"), val = tensor<bool, []>(false)];
            tensor<fp16, [1, 512, 1, 40]> x_33_cast = concat(axis = var_418, interleave = x_33_interleave_0, values = (var_230_cast_0, x_31_cast));
            tensor<int32, [4]> x_35_begin_0 = const()[name = tensor<string, []>("x_35_begin_0"), val = tensor<int32, [4]>([0, 0, 0, 12])];
            tensor<int32, [4]> x_35_end_0 = const()[name = tensor<string, []>("x_35_end_0"), val = tensor<int32, [4]>([1, 512, 1, 40])];
            tensor<bool, [4]> x_35_end_mask_0 = const()[name = tensor<string, []>("x_35_end_mask_0"), val = tensor<bool, [4]>([true, true, true, true])];
            tensor<fp16, [1, 512, 1, 28]> x_35_cast = slice_by_index(begin = x_35_begin_0, end = x_35_end_0, end_mask = x_35_end_mask_0, x = x_33_cast);
            tensor<int32, [4]> x_37_begin_0 = const()[name = tensor<string, []>("x_37_begin_0"), val = tensor<int32, [4]>([0, 0, 0, 12])];
            tensor<int32, [4]> x_37_end_0 = const()[name = tensor<string, []>("x_37_end_0"), val = tensor<int32, [4]>([1, 512, 1, 28])];
            tensor<bool, [4]> x_37_end_mask_0 = const()[name = tensor<string, []>("x_37_end_mask_0"), val = tensor<bool, [4]>([true, true, true, true])];
            tensor<fp16, [1, 512, 1, 16]> x_37_cast = slice_by_index(begin = x_37_begin_0, end = x_37_end_0, end_mask = x_37_end_mask_0, x = x_35_cast);
            tensor<int32, [4]> x_39_begin_0 = const()[name = tensor<string, []>("x_39_begin_0"), val = tensor<int32, [4]>([0, 0, 0, 1])];
            tensor<int32, [4]> x_39_end_0 = const()[name = tensor<string, []>("x_39_end_0"), val = tensor<int32, [4]>([1, 512, 1, 16])];
            tensor<bool, [4]> x_39_end_mask_0 = const()[name = tensor<string, []>("x_39_end_mask_0"), val = tensor<bool, [4]>([true, true, true, true])];
            tensor<fp16, [1, 512, 1, 15]> x_39_cast = slice_by_index(begin = x_39_begin_0, end = x_39_end_0, end_mask = x_39_end_mask_0, x = x_37_cast);
            tensor<int32, [4]> var_991_begin_0 = const()[name = tensor<string, []>("op_991_begin_0"), val = tensor<int32, [4]>([0, 0, 0, -7])];
            tensor<int32, [4]> var_991_end_0 = const()[name = tensor<string, []>("op_991_end_0"), val = tensor<int32, [4]>([1, 512, 1, 15])];
            tensor<bool, [4]> var_991_end_mask_0 = const()[name = tensor<string, []>("op_991_end_mask_0"), val = tensor<bool, [4]>([true, true, true, true])];
            tensor<fp16, [1, 512, 1, 7]> var_991_cast = slice_by_index(begin = var_991_begin_0, end = var_991_end_0, end_mask = var_991_end_mask_0, x = x_39_cast);
            tensor<int32, [2]> var_993 = const()[name = tensor<string, []>("op_993"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_995 = const()[name = tensor<string, []>("op_995"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> x_41_pad_type_0 = const()[name = tensor<string, []>("x_41_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> x_41_pad_0 = const()[name = tensor<string, []>("x_41_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [1024, 512, 1, 1]> op_992_to_fp16_affine_quantized = constexpr_affine_dequantize()[axis = tensor<int32, []>(0), name = tensor<string, []>("op_992_to_fp16_affine_quantized"), quantized_data = tensor<int8, [1024, 512, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(3921536))), scale = tensor<fp16, [1024]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(4446976))), zero_point = tensor<int8, [1024]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(4445888)))];
            tensor<fp16, [1024]> secondary_encoder_encoders_0_conv_module_pointwise_conv1_bias_to_fp16 = const()[name = tensor<string, []>("secondary_encoder_encoders_0_conv_module_pointwise_conv1_bias_to_fp16"), val = tensor<fp16, [1024]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(4449088)))];
            tensor<fp16, [1, 1024, 1, 15]> x_41_cast = conv(bias = secondary_encoder_encoders_0_conv_module_pointwise_conv1_bias_to_fp16, dilations = var_995, groups = var_421, pad = x_41_pad_0, pad_type = x_41_pad_type_0, strides = var_993, weight = op_992_to_fp16_affine_quantized, x = x_39_cast);
            tensor<int32, [4]> var_1004_begin_0 = const()[name = tensor<string, []>("op_1004_begin_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<int32, [4]> var_1004_end_0 = const()[name = tensor<string, []>("op_1004_end_0"), val = tensor<int32, [4]>([1, 512, 1, 15])];
            tensor<bool, [4]> var_1004_end_mask_0 = const()[name = tensor<string, []>("op_1004_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [1, 512, 1, 15]> var_1004_cast = slice_by_index(begin = var_1004_begin_0, end = var_1004_end_0, end_mask = var_1004_end_mask_0, x = x_41_cast);
            tensor<int32, [4]> var_1008_begin_0 = const()[name = tensor<string, []>("op_1008_begin_0"), val = tensor<int32, [4]>([0, 512, 0, 0])];
            tensor<int32, [4]> var_1008_end_0 = const()[name = tensor<string, []>("op_1008_end_0"), val = tensor<int32, [4]>([1, 1024, 1, 15])];
            tensor<bool, [4]> var_1008_end_mask_0 = const()[name = tensor<string, []>("op_1008_end_mask_0"), val = tensor<bool, [4]>([true, true, true, true])];
            tensor<fp16, [1, 512, 1, 15]> var_1008_cast = slice_by_index(begin = var_1008_begin_0, end = var_1008_end_0, end_mask = var_1008_end_mask_0, x = x_41_cast);
            tensor<fp16, [1, 512, 1, 15]> var_1011_cast = sigmoid(x = var_1008_cast);
            tensor<fp16, [1, 512, 1, 15]> x_43_cast = mul(x = var_1004_cast, y = var_1011_cast);
            tensor<int32, [2]> var_1014 = const()[name = tensor<string, []>("op_1014"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_1016 = const()[name = tensor<string, []>("op_1016"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> x_45_pad_type_0 = const()[name = tensor<string, []>("x_45_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> x_45_pad_0 = const()[name = tensor<string, []>("x_45_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [512, 1, 1, 8]> op_1013_to_fp16_affine_quantized = constexpr_affine_dequantize()[axis = tensor<int32, []>(0), name = tensor<string, []>("op_1013_to_fp16_affine_quantized"), quantized_data = tensor<int8, [512, 1, 1, 8]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(4451200))), scale = tensor<fp16, [512]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(4455936))), zero_point = tensor<int8, [512]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(4455360)))];
            tensor<fp16, [512]> secondary_encoder_encoders_0_conv_module_depthwise_conv_bias_to_fp16 = const()[name = tensor<string, []>("secondary_encoder_encoders_0_conv_module_depthwise_conv_bias_to_fp16"), val = tensor<fp16, [512]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(4457024)))];
            tensor<fp16, [1, 512, 1, 8]> x_45_cast = conv(bias = secondary_encoder_encoders_0_conv_module_depthwise_conv_bias_to_fp16, dilations = var_1016, groups = var_408, pad = x_45_pad_0, pad_type = x_45_pad_type_0, strides = var_1014, weight = op_1013_to_fp16_affine_quantized, x = x_43_cast);
            tensor<fp16, [1, 512, 1, 8]> var_1019_cast = abs(x = x_45_cast);
            tensor<fp16, []> var_1020_to_fp16 = const()[name = tensor<string, []>("op_1020_to_fp16"), val = tensor<fp16, []>(0.001953125)];
            tensor<fp16, [1, 512, 1, 8]> var_1021_cast = mul(x = var_1019_cast, y = var_1020_to_fp16);
            tensor<int32, [1]> var_1022 = const()[name = tensor<string, []>("op_1022"), val = tensor<int32, [1]>([1])];
            tensor<fp16, [1, 1, 1, 8]> scale_19_cast = reduce_sum(axes = var_1022, keep_dims = var_420, x = var_1021_cast);
            tensor<fp16, []> scale_21_epsilon_0_to_fp16 = const()[name = tensor<string, []>("scale_21_epsilon_0_to_fp16"), val = tensor<fp16, []>(5.96046448e-08)];
            tensor<fp16, [1, 1, 1, 8]> scale_21_cast = rsqrt(epsilon = scale_21_epsilon_0_to_fp16, x = scale_19_cast);
            tensor<fp16, [1, 1, 1, 8]> scale_23_cast = mul(x = scale_21_cast, y = scale_21_cast);
            tensor<fp16, [1, 512, 1, 8]> x_47_cast = mul(x = x_45_cast, y = scale_23_cast);
            tensor<fp16, []> var_1027_to_fp16 = const()[name = tensor<string, []>("op_1027_to_fp16"), val = tensor<fp16, []>(-0.001953125)];
            tensor<fp16, [1, 512, 1, 8]> var_1028_cast = mul(x = x_47_cast, y = var_1027_to_fp16);
            tensor<int32, [1]> var_1029 = const()[name = tensor<string, []>("op_1029"), val = tensor<int32, [1]>([1])];
            tensor<fp16, [1, 1, 1, 8]> x_mean_7_cast = reduce_sum(axes = var_1029, keep_dims = var_420, x = var_1028_cast);
            tensor<fp16, [1, 512, 1, 8]> x_zero_mean_7_cast = add(x = x_47_cast, y = x_mean_7_cast);
            tensor<fp16, []> var_1032_to_fp16 = const()[name = tensor<string, []>("op_1032_to_fp16"), val = tensor<fp16, []>(0.001953125)];
            tensor<fp16, [1, 512, 1, 8]> var_1033_cast = mul(x = x_zero_mean_7_cast, y = var_1032_to_fp16);
            tensor<fp16, [1, 512, 1, 8]> var_1034_cast = mul(x = var_1033_cast, y = x_zero_mean_7_cast);
            tensor<int32, [1]> var_1035 = const()[name = tensor<string, []>("op_1035"), val = tensor<int32, [1]>([1])];
            tensor<fp16, [1, 1, 1, 8]> x_var_7_cast = reduce_sum(axes = var_1035, keep_dims = var_420, x = var_1034_cast);
            tensor<fp16, []> var_1037_to_fp16 = const()[name = tensor<string, []>("op_1037_to_fp16"), val = tensor<fp16, []>(1.00135803e-05)];
            tensor<fp16, [1, 1, 1, 8]> var_1038_cast = add(x = x_var_7_cast, y = var_1037_to_fp16);
            tensor<fp16, []> var_1039_epsilon_0_to_fp16 = const()[name = tensor<string, []>("op_1039_epsilon_0_to_fp16"), val = tensor<fp16, []>(5.96046448e-08)];
            tensor<fp16, [1, 1, 1, 8]> var_1039_cast = rsqrt(epsilon = var_1039_epsilon_0_to_fp16, x = var_1038_cast);
            tensor<fp16, [1, 512, 1, 8]> var_1040_cast = mul(x = x_zero_mean_7_cast, y = var_1039_cast);
            tensor<fp16, [512]> input_27_mean_0_to_fp16 = const()[name = tensor<string, []>("input_27_mean_0_to_fp16"), val = tensor<fp16, [512]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(4458112)))];
            tensor<fp16, [512]> input_27_variance_0_to_fp16 = const()[name = tensor<string, []>("input_27_variance_0_to_fp16"), val = tensor<fp16, [512]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(4459200)))];
            tensor<fp16, [512]> input_27_gamma_0_to_fp16 = const()[name = tensor<string, []>("input_27_gamma_0_to_fp16"), val = tensor<fp16, [512]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(4460288)))];
            tensor<fp16, [512]> input_27_beta_0_to_fp16 = const()[name = tensor<string, []>("input_27_beta_0_to_fp16"), val = tensor<fp16, [512]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(4461376)))];
            tensor<fp16, []> input_27_epsilon_0_to_fp16 = const()[name = tensor<string, []>("input_27_epsilon_0_to_fp16"), val = tensor<fp16, []>(1.00135803e-05)];
            tensor<fp16, [1, 512, 1, 8]> input_27_cast = batch_norm(beta = input_27_beta_0_to_fp16, epsilon = input_27_epsilon_0_to_fp16, gamma = input_27_gamma_0_to_fp16, mean = input_27_mean_0_to_fp16, variance = input_27_variance_0_to_fp16, x = var_1040_cast);
            tensor<fp16, [1, 512, 1, 8]> x_49_cast = silu(x = input_27_cast);
            tensor<int32, [2]> var_1049 = const()[name = tensor<string, []>("op_1049"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_1051 = const()[name = tensor<string, []>("op_1051"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> input_29_pad_type_0 = const()[name = tensor<string, []>("input_29_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> input_29_pad_0 = const()[name = tensor<string, []>("input_29_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [512, 512, 1, 1]> op_1048_to_fp16_affine_quantized = constexpr_affine_dequantize()[axis = tensor<int32, []>(0), name = tensor<string, []>("op_1048_to_fp16_affine_quantized"), quantized_data = tensor<int8, [512, 512, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(4462464))), scale = tensor<fp16, [512]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(4725248))), zero_point = tensor<int8, [512]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(4724672)))];
            tensor<fp16, [512]> secondary_encoder_encoders_0_conv_module_pointwise_conv2_bias_to_fp16 = const()[name = tensor<string, []>("secondary_encoder_encoders_0_conv_module_pointwise_conv2_bias_to_fp16"), val = tensor<fp16, [512]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(4726336)))];
            tensor<fp16, [1, 512, 1, 8]> input_29_cast = conv(bias = secondary_encoder_encoders_0_conv_module_pointwise_conv2_bias_to_fp16, dilations = var_1051, groups = var_421, pad = input_29_pad_0, pad_type = input_29_pad_type_0, strides = var_1049, weight = op_1048_to_fp16_affine_quantized, x = x_49_cast);
            tensor<fp16, [1, 512, 1, 8]> x_53_cast = add(x = x_27_cast, y = input_29_cast);
            tensor<fp16, [1, 512, 1, 8]> var_1060_cast = abs(x = x_53_cast);
            tensor<fp16, []> var_1061_to_fp16 = const()[name = tensor<string, []>("op_1061_to_fp16"), val = tensor<fp16, []>(0.001953125)];
            tensor<fp16, [1, 512, 1, 8]> var_1062_cast = mul(x = var_1060_cast, y = var_1061_to_fp16);
            tensor<int32, [1]> var_1063 = const()[name = tensor<string, []>("op_1063"), val = tensor<int32, [1]>([1])];
            tensor<fp16, [1, 1, 1, 8]> scale_25_cast = reduce_sum(axes = var_1063, keep_dims = var_420, x = var_1062_cast);
            tensor<fp16, []> scale_27_epsilon_0_to_fp16 = const()[name = tensor<string, []>("scale_27_epsilon_0_to_fp16"), val = tensor<fp16, []>(5.96046448e-08)];
            tensor<fp16, [1, 1, 1, 8]> scale_27_cast = rsqrt(epsilon = scale_27_epsilon_0_to_fp16, x = scale_25_cast);
            tensor<fp16, [1, 1, 1, 8]> scale_29_cast = mul(x = scale_27_cast, y = scale_27_cast);
            tensor<fp16, [1, 512, 1, 8]> x_55_cast = mul(x = x_53_cast, y = scale_29_cast);
            tensor<fp16, []> var_1068_to_fp16 = const()[name = tensor<string, []>("op_1068_to_fp16"), val = tensor<fp16, []>(-0.001953125)];
            tensor<fp16, [1, 512, 1, 8]> var_1069_cast = mul(x = x_55_cast, y = var_1068_to_fp16);
            tensor<int32, [1]> var_1070 = const()[name = tensor<string, []>("op_1070"), val = tensor<int32, [1]>([1])];
            tensor<fp16, [1, 1, 1, 8]> x_mean_9_cast = reduce_sum(axes = var_1070, keep_dims = var_420, x = var_1069_cast);
            tensor<fp16, [1, 512, 1, 8]> x_zero_mean_9_cast = add(x = x_55_cast, y = x_mean_9_cast);
            tensor<fp16, []> var_1073_to_fp16 = const()[name = tensor<string, []>("op_1073_to_fp16"), val = tensor<fp16, []>(0.001953125)];
            tensor<fp16, [1, 512, 1, 8]> var_1074_cast = mul(x = x_zero_mean_9_cast, y = var_1073_to_fp16);
            tensor<fp16, [1, 512, 1, 8]> var_1075_cast = mul(x = var_1074_cast, y = x_zero_mean_9_cast);
            tensor<int32, [1]> var_1076 = const()[name = tensor<string, []>("op_1076"), val = tensor<int32, [1]>([1])];
            tensor<fp16, [1, 1, 1, 8]> x_var_9_cast = reduce_sum(axes = var_1076, keep_dims = var_420, x = var_1075_cast);
            tensor<fp16, []> var_1078_to_fp16 = const()[name = tensor<string, []>("op_1078_to_fp16"), val = tensor<fp16, []>(1.00135803e-05)];
            tensor<fp16, [1, 1, 1, 8]> var_1079_cast = add(x = x_var_9_cast, y = var_1078_to_fp16);
            tensor<fp16, []> var_1080_epsilon_0_to_fp16 = const()[name = tensor<string, []>("op_1080_epsilon_0_to_fp16"), val = tensor<fp16, []>(5.96046448e-08)];
            tensor<fp16, [1, 1, 1, 8]> var_1080_cast = rsqrt(epsilon = var_1080_epsilon_0_to_fp16, x = var_1079_cast);
            tensor<fp16, [1, 512, 1, 8]> var_1081_cast = mul(x = x_zero_mean_9_cast, y = var_1080_cast);
            tensor<fp16, [512]> x_57_mean_0_to_fp16 = const()[name = tensor<string, []>("x_57_mean_0_to_fp16"), val = tensor<fp16, [512]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(4727424)))];
            tensor<fp16, [512]> x_57_variance_0_to_fp16 = const()[name = tensor<string, []>("x_57_variance_0_to_fp16"), val = tensor<fp16, [512]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(4728512)))];
            tensor<fp16, [512]> x_57_gamma_0_to_fp16 = const()[name = tensor<string, []>("x_57_gamma_0_to_fp16"), val = tensor<fp16, [512]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(4729600)))];
            tensor<fp16, [512]> x_57_beta_0_to_fp16 = const()[name = tensor<string, []>("x_57_beta_0_to_fp16"), val = tensor<fp16, [512]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(4730688)))];
            tensor<fp16, []> x_57_epsilon_0_to_fp16 = const()[name = tensor<string, []>("x_57_epsilon_0_to_fp16"), val = tensor<fp16, []>(1.00135803e-05)];
            tensor<fp16, [1, 512, 1, 8]> x_57_cast = batch_norm(beta = x_57_beta_0_to_fp16, epsilon = x_57_epsilon_0_to_fp16, gamma = x_57_gamma_0_to_fp16, mean = x_57_mean_0_to_fp16, variance = x_57_variance_0_to_fp16, x = var_1081_cast);
            tensor<int32, [2]> var_1092 = const()[name = tensor<string, []>("op_1092"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_1094 = const()[name = tensor<string, []>("op_1094"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> input_31_pad_type_0 = const()[name = tensor<string, []>("input_31_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> input_31_pad_0 = const()[name = tensor<string, []>("input_31_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [2048, 512, 1, 1]> op_1091_to_fp16_affine_quantized = constexpr_affine_dequantize()[axis = tensor<int32, []>(0), name = tensor<string, []>("op_1091_to_fp16_affine_quantized"), quantized_data = tensor<int8, [2048, 512, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(4731776))), scale = tensor<fp16, [2048]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(5782528))), zero_point = tensor<int8, [2048]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(5780416)))];
            tensor<fp16, [2048]> secondary_encoder_encoders_0_feed_forward_w_1_bias_to_fp16 = const()[name = tensor<string, []>("secondary_encoder_encoders_0_feed_forward_w_1_bias_to_fp16"), val = tensor<fp16, [2048]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(5786688)))];
            tensor<fp16, [1, 2048, 1, 8]> input_31_cast = conv(bias = secondary_encoder_encoders_0_feed_forward_w_1_bias_to_fp16, dilations = var_1094, groups = var_421, pad = input_31_pad_0, pad_type = input_31_pad_type_0, strides = var_1092, weight = op_1091_to_fp16_affine_quantized, x = x_57_cast);
            tensor<fp16, [1, 2048, 1, 8]> input_33_cast = silu(x = input_31_cast);
            tensor<int32, [2]> var_1103 = const()[name = tensor<string, []>("op_1103"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_1105 = const()[name = tensor<string, []>("op_1105"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> input_35_pad_type_0 = const()[name = tensor<string, []>("input_35_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> input_35_pad_0 = const()[name = tensor<string, []>("input_35_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [512, 2048, 1, 1]> op_1110_weight_0_to_fp16_affine_quantized = constexpr_affine_dequantize()[axis = tensor<int32, []>(0), name = tensor<string, []>("op_1110_weight_0_to_fp16_affine_quantized"), quantized_data = tensor<int8, [512, 2048, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(5790848))), scale = tensor<fp16, [512]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(6840064))), zero_point = tensor<int8, [512]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(6839488)))];
            tensor<fp16, [512]> var_1110_bias_0_to_fp16 = const()[name = tensor<string, []>("op_1110_bias_0_to_fp16"), val = tensor<fp16, [512]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(6841152)))];
            tensor<fp16, [1, 512, 1, 8]> var_1110_cast = conv(bias = var_1110_bias_0_to_fp16, dilations = var_1105, groups = var_421, pad = input_35_pad_0, pad_type = input_35_pad_type_0, strides = var_1103, weight = op_1110_weight_0_to_fp16_affine_quantized, x = input_33_cast);
            tensor<fp16, [1, 512, 1, 8]> x_63_cast = add(x = x_53_cast, y = var_1110_cast);
            tensor<fp16, [1, 512, 1, 8]> var_1112_cast = abs(x = x_63_cast);
            tensor<fp16, []> var_1113_to_fp16 = const()[name = tensor<string, []>("op_1113_to_fp16"), val = tensor<fp16, []>(0.001953125)];
            tensor<fp16, [1, 512, 1, 8]> var_1114_cast = mul(x = var_1112_cast, y = var_1113_to_fp16);
            tensor<int32, [1]> var_1115 = const()[name = tensor<string, []>("op_1115"), val = tensor<int32, [1]>([1])];
            tensor<fp16, [1, 1, 1, 8]> scale_31_cast = reduce_sum(axes = var_1115, keep_dims = var_420, x = var_1114_cast);
            tensor<fp16, []> scale_33_epsilon_0_to_fp16 = const()[name = tensor<string, []>("scale_33_epsilon_0_to_fp16"), val = tensor<fp16, []>(5.96046448e-08)];
            tensor<fp16, [1, 1, 1, 8]> scale_33_cast = rsqrt(epsilon = scale_33_epsilon_0_to_fp16, x = scale_31_cast);
            tensor<fp16, [1, 1, 1, 8]> scale_35_cast = mul(x = scale_33_cast, y = scale_33_cast);
            tensor<fp16, [1, 512, 1, 8]> x_65_cast = mul(x = x_63_cast, y = scale_35_cast);
            tensor<fp16, []> var_1120_to_fp16 = const()[name = tensor<string, []>("op_1120_to_fp16"), val = tensor<fp16, []>(-0.001953125)];
            tensor<fp16, [1, 512, 1, 8]> var_1121_cast = mul(x = x_65_cast, y = var_1120_to_fp16);
            tensor<int32, [1]> var_1122 = const()[name = tensor<string, []>("op_1122"), val = tensor<int32, [1]>([1])];
            tensor<fp16, [1, 1, 1, 8]> x_mean_11_cast = reduce_sum(axes = var_1122, keep_dims = var_420, x = var_1121_cast);
            tensor<fp16, [1, 512, 1, 8]> x_zero_mean_11_cast = add(x = x_65_cast, y = x_mean_11_cast);
            tensor<fp16, []> var_1125_to_fp16 = const()[name = tensor<string, []>("op_1125_to_fp16"), val = tensor<fp16, []>(0.001953125)];
            tensor<fp16, [1, 512, 1, 8]> var_1126_cast = mul(x = x_zero_mean_11_cast, y = var_1125_to_fp16);
            tensor<fp16, [1, 512, 1, 8]> var_1127_cast = mul(x = var_1126_cast, y = x_zero_mean_11_cast);
            tensor<int32, [1]> var_1128 = const()[name = tensor<string, []>("op_1128"), val = tensor<int32, [1]>([1])];
            tensor<fp16, [1, 1, 1, 8]> x_var_11_cast = reduce_sum(axes = var_1128, keep_dims = var_420, x = var_1127_cast);
            tensor<fp16, []> var_1130_to_fp16 = const()[name = tensor<string, []>("op_1130_to_fp16"), val = tensor<fp16, []>(1.00135803e-05)];
            tensor<fp16, [1, 1, 1, 8]> var_1131_cast = add(x = x_var_11_cast, y = var_1130_to_fp16);
            tensor<fp16, []> var_1132_epsilon_0_to_fp16 = const()[name = tensor<string, []>("op_1132_epsilon_0_to_fp16"), val = tensor<fp16, []>(5.96046448e-08)];
            tensor<fp16, [1, 1, 1, 8]> var_1132_cast = rsqrt(epsilon = var_1132_epsilon_0_to_fp16, x = var_1131_cast);
            tensor<fp16, [1, 512, 1, 8]> var_1133_cast = mul(x = x_zero_mean_11_cast, y = var_1132_cast);
            tensor<fp16, [512]> x_67_mean_0_to_fp16 = const()[name = tensor<string, []>("x_67_mean_0_to_fp16"), val = tensor<fp16, [512]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(6842240)))];
            tensor<fp16, [512]> x_67_variance_0_to_fp16 = const()[name = tensor<string, []>("x_67_variance_0_to_fp16"), val = tensor<fp16, [512]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(6843328)))];
            tensor<fp16, [512]> x_67_gamma_0_to_fp16 = const()[name = tensor<string, []>("x_67_gamma_0_to_fp16"), val = tensor<fp16, [512]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(6844416)))];
            tensor<fp16, [512]> x_67_beta_0_to_fp16 = const()[name = tensor<string, []>("x_67_beta_0_to_fp16"), val = tensor<fp16, [512]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(6845504)))];
            tensor<fp16, []> x_67_epsilon_0_to_fp16 = const()[name = tensor<string, []>("x_67_epsilon_0_to_fp16"), val = tensor<fp16, []>(1.00135803e-05)];
            tensor<fp16, [1, 512, 1, 8]> x_67_cast = batch_norm(beta = x_67_beta_0_to_fp16, epsilon = x_67_epsilon_0_to_fp16, gamma = x_67_gamma_0_to_fp16, mean = x_67_mean_0_to_fp16, variance = x_67_variance_0_to_fp16, x = var_1133_cast);
            tensor<int32, []> var_1150 = const()[name = tensor<string, []>("op_1150"), val = tensor<int32, []>(512)];
            tensor<int32, []> var_1157 = const()[name = tensor<string, []>("op_1157"), val = tensor<int32, []>(2)];
            tensor<int32, []> var_1160 = const()[name = tensor<string, []>("op_1160"), val = tensor<int32, []>(-1)];
            tensor<bool, []> var_1162 = const()[name = tensor<string, []>("op_1162"), val = tensor<bool, []>(true)];
            tensor<int32, []> var_1163 = const()[name = tensor<string, []>("op_1163"), val = tensor<int32, []>(1)];
            tensor<fp16, [1, 512, 1, 8]> var_1210_cast = abs(x = x_67_cast);
            tensor<fp16, []> var_1211_to_fp16 = const()[name = tensor<string, []>("op_1211_to_fp16"), val = tensor<fp16, []>(0.001953125)];
            tensor<fp16, [1, 512, 1, 8]> var_1212_cast = mul(x = var_1210_cast, y = var_1211_to_fp16);
            tensor<int32, [1]> var_1213 = const()[name = tensor<string, []>("op_1213"), val = tensor<int32, [1]>([1])];
            tensor<fp16, [1, 1, 1, 8]> scale_37_cast = reduce_sum(axes = var_1213, keep_dims = var_1162, x = var_1212_cast);
            tensor<fp16, []> scale_39_epsilon_0_to_fp16 = const()[name = tensor<string, []>("scale_39_epsilon_0_to_fp16"), val = tensor<fp16, []>(5.96046448e-08)];
            tensor<fp16, [1, 1, 1, 8]> scale_39_cast = rsqrt(epsilon = scale_39_epsilon_0_to_fp16, x = scale_37_cast);
            tensor<fp16, [1, 1, 1, 8]> scale_41_cast = mul(x = scale_39_cast, y = scale_39_cast);
            tensor<fp16, [1, 512, 1, 8]> x_69_cast = mul(x = x_67_cast, y = scale_41_cast);
            tensor<fp16, []> var_1218_to_fp16 = const()[name = tensor<string, []>("op_1218_to_fp16"), val = tensor<fp16, []>(-0.001953125)];
            tensor<fp16, [1, 512, 1, 8]> var_1219_cast = mul(x = x_69_cast, y = var_1218_to_fp16);
            tensor<int32, [1]> var_1220 = const()[name = tensor<string, []>("op_1220"), val = tensor<int32, [1]>([1])];
            tensor<fp16, [1, 1, 1, 8]> x_mean_13_cast = reduce_sum(axes = var_1220, keep_dims = var_1162, x = var_1219_cast);
            tensor<fp16, [1, 512, 1, 8]> x_zero_mean_13_cast = add(x = x_69_cast, y = x_mean_13_cast);
            tensor<fp16, []> var_1223_to_fp16 = const()[name = tensor<string, []>("op_1223_to_fp16"), val = tensor<fp16, []>(0.001953125)];
            tensor<fp16, [1, 512, 1, 8]> var_1224_cast = mul(x = x_zero_mean_13_cast, y = var_1223_to_fp16);
            tensor<fp16, [1, 512, 1, 8]> var_1225_cast = mul(x = var_1224_cast, y = x_zero_mean_13_cast);
            tensor<int32, [1]> var_1226 = const()[name = tensor<string, []>("op_1226"), val = tensor<int32, [1]>([1])];
            tensor<fp16, [1, 1, 1, 8]> x_var_13_cast = reduce_sum(axes = var_1226, keep_dims = var_1162, x = var_1225_cast);
            tensor<fp16, []> var_1228_to_fp16 = const()[name = tensor<string, []>("op_1228_to_fp16"), val = tensor<fp16, []>(1.00135803e-05)];
            tensor<fp16, [1, 1, 1, 8]> var_1229_cast = add(x = x_var_13_cast, y = var_1228_to_fp16);
            tensor<fp16, []> var_1230_epsilon_0_to_fp16 = const()[name = tensor<string, []>("op_1230_epsilon_0_to_fp16"), val = tensor<fp16, []>(5.96046448e-08)];
            tensor<fp16, [1, 1, 1, 8]> var_1230_cast = rsqrt(epsilon = var_1230_epsilon_0_to_fp16, x = var_1229_cast);
            tensor<fp16, [1, 512, 1, 8]> var_1231_cast = mul(x = x_zero_mean_13_cast, y = var_1230_cast);
            tensor<fp16, [512]> x_71_mean_0_to_fp16 = const()[name = tensor<string, []>("x_71_mean_0_to_fp16"), val = tensor<fp16, [512]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(6846592)))];
            tensor<fp16, [512]> x_71_variance_0_to_fp16 = const()[name = tensor<string, []>("x_71_variance_0_to_fp16"), val = tensor<fp16, [512]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(6847680)))];
            tensor<fp16, [512]> x_71_gamma_0_to_fp16 = const()[name = tensor<string, []>("x_71_gamma_0_to_fp16"), val = tensor<fp16, [512]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(6848768)))];
            tensor<fp16, [512]> x_71_beta_0_to_fp16 = const()[name = tensor<string, []>("x_71_beta_0_to_fp16"), val = tensor<fp16, [512]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(6849856)))];
            tensor<fp16, []> x_71_epsilon_0_to_fp16 = const()[name = tensor<string, []>("x_71_epsilon_0_to_fp16"), val = tensor<fp16, []>(1.00135803e-05)];
            tensor<fp16, [1, 512, 1, 8]> x_71_cast = batch_norm(beta = x_71_beta_0_to_fp16, epsilon = x_71_epsilon_0_to_fp16, gamma = x_71_gamma_0_to_fp16, mean = x_71_mean_0_to_fp16, variance = x_71_variance_0_to_fp16, x = var_1231_cast);
            tensor<int32, [2]> var_1242 = const()[name = tensor<string, []>("op_1242"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_1244 = const()[name = tensor<string, []>("op_1244"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> input_37_pad_type_0 = const()[name = tensor<string, []>("input_37_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> input_37_pad_0 = const()[name = tensor<string, []>("input_37_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [2048, 512, 1, 1]> op_1241_to_fp16_affine_quantized = constexpr_affine_dequantize()[axis = tensor<int32, []>(0), name = tensor<string, []>("op_1241_to_fp16_affine_quantized"), quantized_data = tensor<int8, [2048, 512, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(6850944))), scale = tensor<fp16, [2048]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(7901696))), zero_point = tensor<int8, [2048]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(7899584)))];
            tensor<fp16, [2048]> secondary_encoder_encoders_1_feed_forward_macaron_w_1_bias_to_fp16 = const()[name = tensor<string, []>("secondary_encoder_encoders_1_feed_forward_macaron_w_1_bias_to_fp16"), val = tensor<fp16, [2048]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(7905856)))];
            tensor<fp16, [1, 2048, 1, 8]> input_37_cast = conv(bias = secondary_encoder_encoders_1_feed_forward_macaron_w_1_bias_to_fp16, dilations = var_1244, groups = var_1163, pad = input_37_pad_0, pad_type = input_37_pad_type_0, strides = var_1242, weight = op_1241_to_fp16_affine_quantized, x = x_71_cast);
            tensor<fp16, [1, 2048, 1, 8]> input_39_cast = silu(x = input_37_cast);
            tensor<int32, [2]> var_1253 = const()[name = tensor<string, []>("op_1253"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_1255 = const()[name = tensor<string, []>("op_1255"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> input_41_pad_type_0 = const()[name = tensor<string, []>("input_41_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> input_41_pad_0 = const()[name = tensor<string, []>("input_41_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [512, 2048, 1, 1]> op_1260_weight_0_to_fp16_affine_quantized = constexpr_affine_dequantize()[axis = tensor<int32, []>(0), name = tensor<string, []>("op_1260_weight_0_to_fp16_affine_quantized"), quantized_data = tensor<int8, [512, 2048, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(7910016))), scale = tensor<fp16, [512]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(8959232))), zero_point = tensor<int8, [512]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(8958656)))];
            tensor<fp16, [512]> var_1260_bias_0_to_fp16 = const()[name = tensor<string, []>("op_1260_bias_0_to_fp16"), val = tensor<fp16, [512]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(8960320)))];
            tensor<fp16, [1, 512, 1, 8]> var_1260_cast = conv(bias = var_1260_bias_0_to_fp16, dilations = var_1255, groups = var_1163, pad = input_41_pad_0, pad_type = input_41_pad_type_0, strides = var_1253, weight = op_1260_weight_0_to_fp16_affine_quantized, x = input_39_cast);
            tensor<fp16, [1, 512, 1, 8]> x_77_cast = add(x = x_67_cast, y = var_1260_cast);
            tensor<fp16, [1, 512, 1, 8]> var_1262_cast = abs(x = x_77_cast);
            tensor<fp16, []> var_1263_to_fp16 = const()[name = tensor<string, []>("op_1263_to_fp16"), val = tensor<fp16, []>(0.001953125)];
            tensor<fp16, [1, 512, 1, 8]> var_1264_cast = mul(x = var_1262_cast, y = var_1263_to_fp16);
            tensor<int32, [1]> var_1265 = const()[name = tensor<string, []>("op_1265"), val = tensor<int32, [1]>([1])];
            tensor<fp16, [1, 1, 1, 8]> scale_43_cast = reduce_sum(axes = var_1265, keep_dims = var_1162, x = var_1264_cast);
            tensor<fp16, []> scale_45_epsilon_0_to_fp16 = const()[name = tensor<string, []>("scale_45_epsilon_0_to_fp16"), val = tensor<fp16, []>(5.96046448e-08)];
            tensor<fp16, [1, 1, 1, 8]> scale_45_cast = rsqrt(epsilon = scale_45_epsilon_0_to_fp16, x = scale_43_cast);
            tensor<fp16, [1, 1, 1, 8]> scale_47_cast = mul(x = scale_45_cast, y = scale_45_cast);
            tensor<fp16, [1, 512, 1, 8]> x_79_cast = mul(x = x_77_cast, y = scale_47_cast);
            tensor<fp16, []> var_1270_to_fp16 = const()[name = tensor<string, []>("op_1270_to_fp16"), val = tensor<fp16, []>(-0.001953125)];
            tensor<fp16, [1, 512, 1, 8]> var_1271_cast = mul(x = x_79_cast, y = var_1270_to_fp16);
            tensor<int32, [1]> var_1272 = const()[name = tensor<string, []>("op_1272"), val = tensor<int32, [1]>([1])];
            tensor<fp16, [1, 1, 1, 8]> x_mean_15_cast = reduce_sum(axes = var_1272, keep_dims = var_1162, x = var_1271_cast);
            tensor<fp16, [1, 512, 1, 8]> x_zero_mean_15_cast = add(x = x_79_cast, y = x_mean_15_cast);
            tensor<fp16, []> var_1275_to_fp16 = const()[name = tensor<string, []>("op_1275_to_fp16"), val = tensor<fp16, []>(0.001953125)];
            tensor<fp16, [1, 512, 1, 8]> var_1276_cast = mul(x = x_zero_mean_15_cast, y = var_1275_to_fp16);
            tensor<fp16, [1, 512, 1, 8]> var_1277_cast = mul(x = var_1276_cast, y = x_zero_mean_15_cast);
            tensor<int32, [1]> var_1278 = const()[name = tensor<string, []>("op_1278"), val = tensor<int32, [1]>([1])];
            tensor<fp16, [1, 1, 1, 8]> x_var_15_cast = reduce_sum(axes = var_1278, keep_dims = var_1162, x = var_1277_cast);
            tensor<fp16, []> var_1280_to_fp16 = const()[name = tensor<string, []>("op_1280_to_fp16"), val = tensor<fp16, []>(1.00135803e-05)];
            tensor<fp16, [1, 1, 1, 8]> var_1281_cast = add(x = x_var_15_cast, y = var_1280_to_fp16);
            tensor<fp16, []> var_1282_epsilon_0_to_fp16 = const()[name = tensor<string, []>("op_1282_epsilon_0_to_fp16"), val = tensor<fp16, []>(5.96046448e-08)];
            tensor<fp16, [1, 1, 1, 8]> var_1282_cast = rsqrt(epsilon = var_1282_epsilon_0_to_fp16, x = var_1281_cast);
            tensor<fp16, [1, 512, 1, 8]> var_1283_cast = mul(x = x_zero_mean_15_cast, y = var_1282_cast);
            tensor<fp16, [512]> x_81_mean_0_to_fp16 = const()[name = tensor<string, []>("x_81_mean_0_to_fp16"), val = tensor<fp16, [512]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(8961408)))];
            tensor<fp16, [512]> x_81_variance_0_to_fp16 = const()[name = tensor<string, []>("x_81_variance_0_to_fp16"), val = tensor<fp16, [512]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(8962496)))];
            tensor<fp16, [512]> x_81_gamma_0_to_fp16 = const()[name = tensor<string, []>("x_81_gamma_0_to_fp16"), val = tensor<fp16, [512]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(8963584)))];
            tensor<fp16, [512]> x_81_beta_0_to_fp16 = const()[name = tensor<string, []>("x_81_beta_0_to_fp16"), val = tensor<fp16, [512]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(8964672)))];
            tensor<fp16, []> x_81_epsilon_0_to_fp16 = const()[name = tensor<string, []>("x_81_epsilon_0_to_fp16"), val = tensor<fp16, []>(1.00135803e-05)];
            tensor<fp16, [1, 512, 1, 8]> x_81_cast = batch_norm(beta = x_81_beta_0_to_fp16, epsilon = x_81_epsilon_0_to_fp16, gamma = x_81_gamma_0_to_fp16, mean = x_81_mean_0_to_fp16, variance = x_81_variance_0_to_fp16, x = var_1283_cast);
            tensor<int32, [2]> var_1314 = const()[name = tensor<string, []>("op_1314"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_1316 = const()[name = tensor<string, []>("op_1316"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> y_5_pad_type_0 = const()[name = tensor<string, []>("y_5_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> y_5_pad_0 = const()[name = tensor<string, []>("y_5_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [512, 512, 1, 1]> op_1320_weight_0_to_fp16_affine_quantized = constexpr_affine_dequantize()[axis = tensor<int32, []>(0), name = tensor<string, []>("op_1320_weight_0_to_fp16_affine_quantized"), quantized_data = tensor<int8, [512, 512, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(8965760))), scale = tensor<fp16, [512]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(9228544))), zero_point = tensor<int8, [512]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(9227968)))];
            tensor<fp16, [512]> var_1320_bias_0_to_fp16 = const()[name = tensor<string, []>("op_1320_bias_0_to_fp16"), val = tensor<fp16, [512]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(9229632)))];
            tensor<fp16, [1, 512, 1, 8]> var_1320_cast = conv(bias = var_1320_bias_0_to_fp16, dilations = var_1316, groups = var_1163, pad = y_5_pad_0, pad_type = y_5_pad_type_0, strides = var_1314, weight = op_1320_weight_0_to_fp16_affine_quantized, x = x_81_cast);
            tensor<int32, [8]> tile_14 = const()[name = tensor<string, []>("tile_14"), val = tensor<int32, [8]>([64, 64, 64, 64, 64, 64, 64, 64])];
            tensor<int32, []> var_1321_axis_0 = const()[name = tensor<string, []>("op_1321_axis_0"), val = tensor<int32, []>(1)];
            tensor<fp16, [1, 64, 1, 8]> var_1321_cast_0, tensor<fp16, [1, 64, 1, 8]> var_1321_cast_1, tensor<fp16, [1, 64, 1, 8]> var_1321_cast_2, tensor<fp16, [1, 64, 1, 8]> var_1321_cast_3, tensor<fp16, [1, 64, 1, 8]> var_1321_cast_4, tensor<fp16, [1, 64, 1, 8]> var_1321_cast_5, tensor<fp16, [1, 64, 1, 8]> var_1321_cast_6, tensor<fp16, [1, 64, 1, 8]> var_1321_cast_7 = split(axis = var_1321_axis_0, split_sizes = tile_14, x = var_1320_cast);
            tensor<int32, [2]> var_1334 = const()[name = tensor<string, []>("op_1334"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_1336 = const()[name = tensor<string, []>("op_1336"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> var_1338_pad_type_0 = const()[name = tensor<string, []>("op_1338_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> var_1338_pad_0 = const()[name = tensor<string, []>("op_1338_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [512, 512, 1, 1]> op_1333_to_fp16_affine_quantized = constexpr_affine_dequantize()[axis = tensor<int32, []>(0), name = tensor<string, []>("op_1333_to_fp16_affine_quantized"), quantized_data = tensor<int8, [512, 512, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(9230720))), scale = tensor<fp16, [512]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(9493504))), zero_point = tensor<int8, [512]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(9492928)))];
            tensor<fp16, [512]> secondary_encoder_encoders_1_self_attn_linear_v_bias_to_fp16 = const()[name = tensor<string, []>("secondary_encoder_encoders_1_self_attn_linear_v_bias_to_fp16"), val = tensor<fp16, [512]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(9494592)))];
            tensor<fp16, [1, 512, 1, 8]> var_1338_cast = conv(bias = secondary_encoder_encoders_1_self_attn_linear_v_bias_to_fp16, dilations = var_1336, groups = var_1163, pad = var_1338_pad_0, pad_type = var_1338_pad_type_0, strides = var_1334, weight = op_1333_to_fp16_affine_quantized, x = x_81_cast);
            tensor<int32, [8]> tile_15 = const()[name = tensor<string, []>("tile_15"), val = tensor<int32, [8]>([64, 64, 64, 64, 64, 64, 64, 64])];
            tensor<int32, []> var_1339_axis_0 = const()[name = tensor<string, []>("op_1339_axis_0"), val = tensor<int32, []>(1)];
            tensor<fp16, [1, 64, 1, 8]> var_1339_cast_0, tensor<fp16, [1, 64, 1, 8]> var_1339_cast_1, tensor<fp16, [1, 64, 1, 8]> var_1339_cast_2, tensor<fp16, [1, 64, 1, 8]> var_1339_cast_3, tensor<fp16, [1, 64, 1, 8]> var_1339_cast_4, tensor<fp16, [1, 64, 1, 8]> var_1339_cast_5, tensor<fp16, [1, 64, 1, 8]> var_1339_cast_6, tensor<fp16, [1, 64, 1, 8]> var_1339_cast_7 = split(axis = var_1339_axis_0, split_sizes = tile_15, x = var_1338_cast);
            tensor<int32, [4]> var_1348_perm_0 = const()[name = tensor<string, []>("op_1348_perm_0"), val = tensor<int32, [4]>([0, 3, 2, 1])];
            tensor<string, []> var_1355_equation_0 = const()[name = tensor<string, []>("op_1355_equation_0"), val = tensor<string, []>("bnhd,bdhm->bnhm")];
            tensor<fp16, [1, 512, 1, 512]> op_1352_to_fp16_affine_quantized = constexpr_affine_dequantize()[axis = tensor<int32, []>(0), name = tensor<string, []>("op_1352_to_fp16_affine_quantized"), quantized_data = tensor<int8, [1, 512, 1, 512]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(9495680))), scale = tensor<fp16, []>(0.016418457), zero_point = tensor<int8, []>(0)];
            tensor<fp16, [1, 8, 1, 512]> transpose_20 = transpose(perm = var_1348_perm_0, x = x_81_cast);
            tensor<fp16, [1, 8, 1, 512]> var_1355_cast = einsum(equation = var_1355_equation_0, values = (transpose_20, op_1352_to_fp16_affine_quantized));
            tensor<fp16, [512]> secondary_encoder_encoders_1_self_attn_linear_k_bias_to_fp16 = const()[name = tensor<string, []>("secondary_encoder_encoders_1_self_attn_linear_k_bias_to_fp16"), val = tensor<fp16, [512]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(9757888)))];
            tensor<fp16, [1, 8, 1, 512]> var_1356_cast = add(x = var_1355_cast, y = secondary_encoder_encoders_1_self_attn_linear_k_bias_to_fp16);
            tensor<int32, [8]> tile_16 = const()[name = tensor<string, []>("tile_16"), val = tensor<int32, [8]>([64, 64, 64, 64, 64, 64, 64, 64])];
            tensor<int32, []> var_1357_axis_0 = const()[name = tensor<string, []>("op_1357_axis_0"), val = tensor<int32, []>(-1)];
            tensor<fp16, [1, 8, 1, 64]> var_1357_cast_0, tensor<fp16, [1, 8, 1, 64]> var_1357_cast_1, tensor<fp16, [1, 8, 1, 64]> var_1357_cast_2, tensor<fp16, [1, 8, 1, 64]> var_1357_cast_3, tensor<fp16, [1, 8, 1, 64]> var_1357_cast_4, tensor<fp16, [1, 8, 1, 64]> var_1357_cast_5, tensor<fp16, [1, 8, 1, 64]> var_1357_cast_6, tensor<fp16, [1, 8, 1, 64]> var_1357_cast_7 = split(axis = var_1357_axis_0, split_sizes = tile_16, x = var_1356_cast);
            tensor<int32, [8]> tile_17 = const()[name = tensor<string, []>("tile_17"), val = tensor<int32, [8]>([1, 1, 1, 1, 1, 1, 1, 1])];
            tensor<int32, []> var_1367_axis_0 = const()[name = tensor<string, []>("op_1367_axis_0"), val = tensor<int32, []>(2)];
            tensor<fp16, [1, 128, 1, 64]> var_1367_cast_0, tensor<fp16, [1, 128, 1, 64]> var_1367_cast_1, tensor<fp16, [1, 128, 1, 64]> var_1367_cast_2, tensor<fp16, [1, 128, 1, 64]> var_1367_cast_3, tensor<fp16, [1, 128, 1, 64]> var_1367_cast_4, tensor<fp16, [1, 128, 1, 64]> var_1367_cast_5, tensor<fp16, [1, 128, 1, 64]> var_1367_cast_6, tensor<fp16, [1, 128, 1, 64]> var_1367_cast_7 = split(axis = var_1367_axis_0, split_sizes = tile_17, x = var_235_cast_1);
            tensor<int32, [8]> tile_18 = const()[name = tensor<string, []>("tile_18"), val = tensor<int32, [8]>([1, 1, 1, 1, 1, 1, 1, 1])];
            tensor<int32, []> var_1376_axis_0 = const()[name = tensor<string, []>("op_1376_axis_0"), val = tensor<int32, []>(2)];
            tensor<fp16, [1, 64, 1, 128]> var_1376_cast_0, tensor<fp16, [1, 64, 1, 128]> var_1376_cast_1, tensor<fp16, [1, 64, 1, 128]> var_1376_cast_2, tensor<fp16, [1, 64, 1, 128]> var_1376_cast_3, tensor<fp16, [1, 64, 1, 128]> var_1376_cast_4, tensor<fp16, [1, 64, 1, 128]> var_1376_cast_5, tensor<fp16, [1, 64, 1, 128]> var_1376_cast_6, tensor<fp16, [1, 64, 1, 128]> var_1376_cast_7 = split(axis = var_1376_axis_0, split_sizes = tile_18, x = var_240_cast_1);
            tensor<bool, []> var_1386_interleave_0 = const()[name = tensor<string, []>("op_1386_interleave_0"), val = tensor<bool, []>(false)];
            tensor<fp16, [1, 136, 1, 64]> var_1386_cast = concat(axis = var_1163, interleave = var_1386_interleave_0, values = (var_1367_cast_0, var_1357_cast_0));
            tensor<int32, [4]> var_1388_begin_0 = const()[name = tensor<string, []>("op_1388_begin_0"), val = tensor<int32, [4]>([0, 8, 0, 0])];
            tensor<int32, [4]> var_1388_end_0 = const()[name = tensor<string, []>("op_1388_end_0"), val = tensor<int32, [4]>([1, 136, 1, 64])];
            tensor<bool, [4]> var_1388_end_mask_0 = const()[name = tensor<string, []>("op_1388_end_mask_0"), val = tensor<bool, [4]>([true, true, true, true])];
            tensor<fp16, [1, 128, 1, 64]> var_1388_cast = slice_by_index(begin = var_1388_begin_0, end = var_1388_end_0, end_mask = var_1388_end_mask_0, x = var_1386_cast);
            tensor<bool, []> var_1392_interleave_0 = const()[name = tensor<string, []>("op_1392_interleave_0"), val = tensor<bool, []>(false)];
            tensor<fp16, [1, 136, 1, 64]> var_1392_cast = concat(axis = var_1163, interleave = var_1392_interleave_0, values = (var_1367_cast_1, var_1357_cast_1));
            tensor<int32, [4]> var_1394_begin_0 = const()[name = tensor<string, []>("op_1394_begin_0"), val = tensor<int32, [4]>([0, 8, 0, 0])];
            tensor<int32, [4]> var_1394_end_0 = const()[name = tensor<string, []>("op_1394_end_0"), val = tensor<int32, [4]>([1, 136, 1, 64])];
            tensor<bool, [4]> var_1394_end_mask_0 = const()[name = tensor<string, []>("op_1394_end_mask_0"), val = tensor<bool, [4]>([true, true, true, true])];
            tensor<fp16, [1, 128, 1, 64]> var_1394_cast = slice_by_index(begin = var_1394_begin_0, end = var_1394_end_0, end_mask = var_1394_end_mask_0, x = var_1392_cast);
            tensor<bool, []> var_1398_interleave_0 = const()[name = tensor<string, []>("op_1398_interleave_0"), val = tensor<bool, []>(false)];
            tensor<fp16, [1, 136, 1, 64]> var_1398_cast = concat(axis = var_1163, interleave = var_1398_interleave_0, values = (var_1367_cast_2, var_1357_cast_2));
            tensor<int32, [4]> var_1400_begin_0 = const()[name = tensor<string, []>("op_1400_begin_0"), val = tensor<int32, [4]>([0, 8, 0, 0])];
            tensor<int32, [4]> var_1400_end_0 = const()[name = tensor<string, []>("op_1400_end_0"), val = tensor<int32, [4]>([1, 136, 1, 64])];
            tensor<bool, [4]> var_1400_end_mask_0 = const()[name = tensor<string, []>("op_1400_end_mask_0"), val = tensor<bool, [4]>([true, true, true, true])];
            tensor<fp16, [1, 128, 1, 64]> var_1400_cast = slice_by_index(begin = var_1400_begin_0, end = var_1400_end_0, end_mask = var_1400_end_mask_0, x = var_1398_cast);
            tensor<bool, []> var_1404_interleave_0 = const()[name = tensor<string, []>("op_1404_interleave_0"), val = tensor<bool, []>(false)];
            tensor<fp16, [1, 136, 1, 64]> var_1404_cast = concat(axis = var_1163, interleave = var_1404_interleave_0, values = (var_1367_cast_3, var_1357_cast_3));
            tensor<int32, [4]> var_1406_begin_0 = const()[name = tensor<string, []>("op_1406_begin_0"), val = tensor<int32, [4]>([0, 8, 0, 0])];
            tensor<int32, [4]> var_1406_end_0 = const()[name = tensor<string, []>("op_1406_end_0"), val = tensor<int32, [4]>([1, 136, 1, 64])];
            tensor<bool, [4]> var_1406_end_mask_0 = const()[name = tensor<string, []>("op_1406_end_mask_0"), val = tensor<bool, [4]>([true, true, true, true])];
            tensor<fp16, [1, 128, 1, 64]> var_1406_cast = slice_by_index(begin = var_1406_begin_0, end = var_1406_end_0, end_mask = var_1406_end_mask_0, x = var_1404_cast);
            tensor<bool, []> var_1410_interleave_0 = const()[name = tensor<string, []>("op_1410_interleave_0"), val = tensor<bool, []>(false)];
            tensor<fp16, [1, 136, 1, 64]> var_1410_cast = concat(axis = var_1163, interleave = var_1410_interleave_0, values = (var_1367_cast_4, var_1357_cast_4));
            tensor<int32, [4]> var_1412_begin_0 = const()[name = tensor<string, []>("op_1412_begin_0"), val = tensor<int32, [4]>([0, 8, 0, 0])];
            tensor<int32, [4]> var_1412_end_0 = const()[name = tensor<string, []>("op_1412_end_0"), val = tensor<int32, [4]>([1, 136, 1, 64])];
            tensor<bool, [4]> var_1412_end_mask_0 = const()[name = tensor<string, []>("op_1412_end_mask_0"), val = tensor<bool, [4]>([true, true, true, true])];
            tensor<fp16, [1, 128, 1, 64]> var_1412_cast = slice_by_index(begin = var_1412_begin_0, end = var_1412_end_0, end_mask = var_1412_end_mask_0, x = var_1410_cast);
            tensor<bool, []> var_1416_interleave_0 = const()[name = tensor<string, []>("op_1416_interleave_0"), val = tensor<bool, []>(false)];
            tensor<fp16, [1, 136, 1, 64]> var_1416_cast = concat(axis = var_1163, interleave = var_1416_interleave_0, values = (var_1367_cast_5, var_1357_cast_5));
            tensor<int32, [4]> var_1418_begin_0 = const()[name = tensor<string, []>("op_1418_begin_0"), val = tensor<int32, [4]>([0, 8, 0, 0])];
            tensor<int32, [4]> var_1418_end_0 = const()[name = tensor<string, []>("op_1418_end_0"), val = tensor<int32, [4]>([1, 136, 1, 64])];
            tensor<bool, [4]> var_1418_end_mask_0 = const()[name = tensor<string, []>("op_1418_end_mask_0"), val = tensor<bool, [4]>([true, true, true, true])];
            tensor<fp16, [1, 128, 1, 64]> var_1418_cast = slice_by_index(begin = var_1418_begin_0, end = var_1418_end_0, end_mask = var_1418_end_mask_0, x = var_1416_cast);
            tensor<bool, []> var_1422_interleave_0 = const()[name = tensor<string, []>("op_1422_interleave_0"), val = tensor<bool, []>(false)];
            tensor<fp16, [1, 136, 1, 64]> var_1422_cast = concat(axis = var_1163, interleave = var_1422_interleave_0, values = (var_1367_cast_6, var_1357_cast_6));
            tensor<int32, [4]> var_1424_begin_0 = const()[name = tensor<string, []>("op_1424_begin_0"), val = tensor<int32, [4]>([0, 8, 0, 0])];
            tensor<int32, [4]> var_1424_end_0 = const()[name = tensor<string, []>("op_1424_end_0"), val = tensor<int32, [4]>([1, 136, 1, 64])];
            tensor<bool, [4]> var_1424_end_mask_0 = const()[name = tensor<string, []>("op_1424_end_mask_0"), val = tensor<bool, [4]>([true, true, true, true])];
            tensor<fp16, [1, 128, 1, 64]> var_1424_cast = slice_by_index(begin = var_1424_begin_0, end = var_1424_end_0, end_mask = var_1424_end_mask_0, x = var_1422_cast);
            tensor<bool, []> var_1428_interleave_0 = const()[name = tensor<string, []>("op_1428_interleave_0"), val = tensor<bool, []>(false)];
            tensor<fp16, [1, 136, 1, 64]> var_1428_cast = concat(axis = var_1163, interleave = var_1428_interleave_0, values = (var_1367_cast_7, var_1357_cast_7));
            tensor<int32, [4]> var_1430_begin_0 = const()[name = tensor<string, []>("op_1430_begin_0"), val = tensor<int32, [4]>([0, 8, 0, 0])];
            tensor<int32, [4]> var_1430_end_0 = const()[name = tensor<string, []>("op_1430_end_0"), val = tensor<int32, [4]>([1, 136, 1, 64])];
            tensor<bool, [4]> var_1430_end_mask_0 = const()[name = tensor<string, []>("op_1430_end_mask_0"), val = tensor<bool, [4]>([true, true, true, true])];
            tensor<fp16, [1, 128, 1, 64]> var_1430_cast = slice_by_index(begin = var_1430_begin_0, end = var_1430_end_0, end_mask = var_1430_end_mask_0, x = var_1428_cast);
            tensor<bool, []> var_1434_interleave_0 = const()[name = tensor<string, []>("op_1434_interleave_0"), val = tensor<bool, []>(false)];
            tensor<fp16, [1, 64, 1, 136]> var_1434_cast = concat(axis = var_1160, interleave = var_1434_interleave_0, values = (var_1376_cast_0, var_1339_cast_0));
            tensor<int32, [4]> var_1438_begin_0 = const()[name = tensor<string, []>("op_1438_begin_0"), val = tensor<int32, [4]>([0, 0, 0, 8])];
            tensor<int32, [4]> var_1438_end_0 = const()[name = tensor<string, []>("op_1438_end_0"), val = tensor<int32, [4]>([1, 64, 1, 136])];
            tensor<bool, [4]> var_1438_end_mask_0 = const()[name = tensor<string, []>("op_1438_end_mask_0"), val = tensor<bool, [4]>([true, true, true, true])];
            tensor<fp16, [1, 64, 1, 128]> var_1438_cast = slice_by_index(begin = var_1438_begin_0, end = var_1438_end_0, end_mask = var_1438_end_mask_0, x = var_1434_cast);
            tensor<bool, []> var_1440_interleave_0 = const()[name = tensor<string, []>("op_1440_interleave_0"), val = tensor<bool, []>(false)];
            tensor<fp16, [1, 64, 1, 136]> var_1440_cast = concat(axis = var_1160, interleave = var_1440_interleave_0, values = (var_1376_cast_1, var_1339_cast_1));
            tensor<int32, [4]> var_1444_begin_0 = const()[name = tensor<string, []>("op_1444_begin_0"), val = tensor<int32, [4]>([0, 0, 0, 8])];
            tensor<int32, [4]> var_1444_end_0 = const()[name = tensor<string, []>("op_1444_end_0"), val = tensor<int32, [4]>([1, 64, 1, 136])];
            tensor<bool, [4]> var_1444_end_mask_0 = const()[name = tensor<string, []>("op_1444_end_mask_0"), val = tensor<bool, [4]>([true, true, true, true])];
            tensor<fp16, [1, 64, 1, 128]> var_1444_cast = slice_by_index(begin = var_1444_begin_0, end = var_1444_end_0, end_mask = var_1444_end_mask_0, x = var_1440_cast);
            tensor<bool, []> var_1446_interleave_0 = const()[name = tensor<string, []>("op_1446_interleave_0"), val = tensor<bool, []>(false)];
            tensor<fp16, [1, 64, 1, 136]> var_1446_cast = concat(axis = var_1160, interleave = var_1446_interleave_0, values = (var_1376_cast_2, var_1339_cast_2));
            tensor<int32, [4]> var_1450_begin_0 = const()[name = tensor<string, []>("op_1450_begin_0"), val = tensor<int32, [4]>([0, 0, 0, 8])];
            tensor<int32, [4]> var_1450_end_0 = const()[name = tensor<string, []>("op_1450_end_0"), val = tensor<int32, [4]>([1, 64, 1, 136])];
            tensor<bool, [4]> var_1450_end_mask_0 = const()[name = tensor<string, []>("op_1450_end_mask_0"), val = tensor<bool, [4]>([true, true, true, true])];
            tensor<fp16, [1, 64, 1, 128]> var_1450_cast = slice_by_index(begin = var_1450_begin_0, end = var_1450_end_0, end_mask = var_1450_end_mask_0, x = var_1446_cast);
            tensor<bool, []> var_1452_interleave_0 = const()[name = tensor<string, []>("op_1452_interleave_0"), val = tensor<bool, []>(false)];
            tensor<fp16, [1, 64, 1, 136]> var_1452_cast = concat(axis = var_1160, interleave = var_1452_interleave_0, values = (var_1376_cast_3, var_1339_cast_3));
            tensor<int32, [4]> var_1456_begin_0 = const()[name = tensor<string, []>("op_1456_begin_0"), val = tensor<int32, [4]>([0, 0, 0, 8])];
            tensor<int32, [4]> var_1456_end_0 = const()[name = tensor<string, []>("op_1456_end_0"), val = tensor<int32, [4]>([1, 64, 1, 136])];
            tensor<bool, [4]> var_1456_end_mask_0 = const()[name = tensor<string, []>("op_1456_end_mask_0"), val = tensor<bool, [4]>([true, true, true, true])];
            tensor<fp16, [1, 64, 1, 128]> var_1456_cast = slice_by_index(begin = var_1456_begin_0, end = var_1456_end_0, end_mask = var_1456_end_mask_0, x = var_1452_cast);
            tensor<bool, []> var_1458_interleave_0 = const()[name = tensor<string, []>("op_1458_interleave_0"), val = tensor<bool, []>(false)];
            tensor<fp16, [1, 64, 1, 136]> var_1458_cast = concat(axis = var_1160, interleave = var_1458_interleave_0, values = (var_1376_cast_4, var_1339_cast_4));
            tensor<int32, [4]> var_1462_begin_0 = const()[name = tensor<string, []>("op_1462_begin_0"), val = tensor<int32, [4]>([0, 0, 0, 8])];
            tensor<int32, [4]> var_1462_end_0 = const()[name = tensor<string, []>("op_1462_end_0"), val = tensor<int32, [4]>([1, 64, 1, 136])];
            tensor<bool, [4]> var_1462_end_mask_0 = const()[name = tensor<string, []>("op_1462_end_mask_0"), val = tensor<bool, [4]>([true, true, true, true])];
            tensor<fp16, [1, 64, 1, 128]> var_1462_cast = slice_by_index(begin = var_1462_begin_0, end = var_1462_end_0, end_mask = var_1462_end_mask_0, x = var_1458_cast);
            tensor<bool, []> var_1464_interleave_0 = const()[name = tensor<string, []>("op_1464_interleave_0"), val = tensor<bool, []>(false)];
            tensor<fp16, [1, 64, 1, 136]> var_1464_cast = concat(axis = var_1160, interleave = var_1464_interleave_0, values = (var_1376_cast_5, var_1339_cast_5));
            tensor<int32, [4]> var_1468_begin_0 = const()[name = tensor<string, []>("op_1468_begin_0"), val = tensor<int32, [4]>([0, 0, 0, 8])];
            tensor<int32, [4]> var_1468_end_0 = const()[name = tensor<string, []>("op_1468_end_0"), val = tensor<int32, [4]>([1, 64, 1, 136])];
            tensor<bool, [4]> var_1468_end_mask_0 = const()[name = tensor<string, []>("op_1468_end_mask_0"), val = tensor<bool, [4]>([true, true, true, true])];
            tensor<fp16, [1, 64, 1, 128]> var_1468_cast = slice_by_index(begin = var_1468_begin_0, end = var_1468_end_0, end_mask = var_1468_end_mask_0, x = var_1464_cast);
            tensor<bool, []> var_1470_interleave_0 = const()[name = tensor<string, []>("op_1470_interleave_0"), val = tensor<bool, []>(false)];
            tensor<fp16, [1, 64, 1, 136]> var_1470_cast = concat(axis = var_1160, interleave = var_1470_interleave_0, values = (var_1376_cast_6, var_1339_cast_6));
            tensor<int32, [4]> var_1474_begin_0 = const()[name = tensor<string, []>("op_1474_begin_0"), val = tensor<int32, [4]>([0, 0, 0, 8])];
            tensor<int32, [4]> var_1474_end_0 = const()[name = tensor<string, []>("op_1474_end_0"), val = tensor<int32, [4]>([1, 64, 1, 136])];
            tensor<bool, [4]> var_1474_end_mask_0 = const()[name = tensor<string, []>("op_1474_end_mask_0"), val = tensor<bool, [4]>([true, true, true, true])];
            tensor<fp16, [1, 64, 1, 128]> var_1474_cast = slice_by_index(begin = var_1474_begin_0, end = var_1474_end_0, end_mask = var_1474_end_mask_0, x = var_1470_cast);
            tensor<bool, []> var_1476_interleave_0 = const()[name = tensor<string, []>("op_1476_interleave_0"), val = tensor<bool, []>(false)];
            tensor<fp16, [1, 64, 1, 136]> var_1476_cast = concat(axis = var_1160, interleave = var_1476_interleave_0, values = (var_1376_cast_7, var_1339_cast_7));
            tensor<int32, [4]> var_1480_begin_0 = const()[name = tensor<string, []>("op_1480_begin_0"), val = tensor<int32, [4]>([0, 0, 0, 8])];
            tensor<int32, [4]> var_1480_end_0 = const()[name = tensor<string, []>("op_1480_end_0"), val = tensor<int32, [4]>([1, 64, 1, 136])];
            tensor<bool, [4]> var_1480_end_mask_0 = const()[name = tensor<string, []>("op_1480_end_mask_0"), val = tensor<bool, [4]>([true, true, true, true])];
            tensor<fp16, [1, 64, 1, 128]> var_1480_cast = slice_by_index(begin = var_1480_begin_0, end = var_1480_end_0, end_mask = var_1480_end_mask_0, x = var_1476_cast);
            tensor<bool, []> var_1482_interleave_0 = const()[name = tensor<string, []>("op_1482_interleave_0"), val = tensor<bool, []>(false)];
            tensor<fp16, [1, 128, 8, 64]> var_1482_cast = concat(axis = var_1157, interleave = var_1482_interleave_0, values = (var_1388_cast, var_1394_cast, var_1400_cast, var_1406_cast, var_1412_cast, var_1418_cast, var_1424_cast, var_1430_cast));
            tensor<bool, []> var_1484_interleave_0 = const()[name = tensor<string, []>("op_1484_interleave_0"), val = tensor<bool, []>(false)];
            tensor<fp16, [1, 64, 8, 128]> var_1484_cast = concat(axis = var_1157, interleave = var_1484_interleave_0, values = (var_1438_cast, var_1444_cast, var_1450_cast, var_1456_cast, var_1462_cast, var_1468_cast, var_1474_cast, var_1480_cast));
            tensor<string, []> var_1491_equation_0 = const()[name = tensor<string, []>("op_1491_equation_0"), val = tensor<string, []>("bnhd,bdhm->bnhm")];
            tensor<fp16, [1, 512, 1, 512]> op_1488_to_fp16_affine_quantized = constexpr_affine_dequantize()[axis = tensor<int32, []>(0), name = tensor<string, []>("op_1488_to_fp16_affine_quantized"), quantized_data = tensor<int8, [1, 512, 1, 512]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(9758976))), scale = tensor<fp16, []>(0.0516357422), zero_point = tensor<int8, []>(0)];
            tensor<fp16, [1, 128, 1, 512]> var_1491_cast = einsum(equation = var_1491_equation_0, values = (var_194_cast, op_1488_to_fp16_affine_quantized));
            tensor<int32, [8]> tile_19 = const()[name = tensor<string, []>("tile_19"), val = tensor<int32, [8]>([64, 64, 64, 64, 64, 64, 64, 64])];
            tensor<int32, []> var_1492_axis_0 = const()[name = tensor<string, []>("op_1492_axis_0"), val = tensor<int32, []>(-1)];
            tensor<fp16, [1, 128, 1, 64]> var_1492_cast_0, tensor<fp16, [1, 128, 1, 64]> var_1492_cast_1, tensor<fp16, [1, 128, 1, 64]> var_1492_cast_2, tensor<fp16, [1, 128, 1, 64]> var_1492_cast_3, tensor<fp16, [1, 128, 1, 64]> var_1492_cast_4, tensor<fp16, [1, 128, 1, 64]> var_1492_cast_5, tensor<fp16, [1, 128, 1, 64]> var_1492_cast_6, tensor<fp16, [1, 128, 1, 64]> var_1492_cast_7 = split(axis = var_1492_axis_0, split_sizes = tile_19, x = var_1491_cast);
            tensor<fp16, [1, 64, 1, 1]> var_1513_to_fp16 = const()[name = tensor<string, []>("op_1513_to_fp16"), val = tensor<fp16, [1, 64, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(10021184)))];
            tensor<fp16, [1, 64, 1, 8]> var_1514_cast = add(x = var_1321_cast_0, y = var_1513_to_fp16);
            tensor<fp16, [1, 64, 1, 1]> var_1516_to_fp16 = const()[name = tensor<string, []>("op_1516_to_fp16"), val = tensor<fp16, [1, 64, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(10021376)))];
            tensor<fp16, [1, 64, 1, 8]> var_1517_cast = add(x = var_1321_cast_1, y = var_1516_to_fp16);
            tensor<fp16, [1, 64, 1, 1]> var_1519_to_fp16 = const()[name = tensor<string, []>("op_1519_to_fp16"), val = tensor<fp16, [1, 64, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(10021568)))];
            tensor<fp16, [1, 64, 1, 8]> var_1520_cast = add(x = var_1321_cast_2, y = var_1519_to_fp16);
            tensor<fp16, [1, 64, 1, 1]> var_1522_to_fp16 = const()[name = tensor<string, []>("op_1522_to_fp16"), val = tensor<fp16, [1, 64, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(10021760)))];
            tensor<fp16, [1, 64, 1, 8]> var_1523_cast = add(x = var_1321_cast_3, y = var_1522_to_fp16);
            tensor<fp16, [1, 64, 1, 1]> var_1525_to_fp16 = const()[name = tensor<string, []>("op_1525_to_fp16"), val = tensor<fp16, [1, 64, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(10021952)))];
            tensor<fp16, [1, 64, 1, 8]> var_1526_cast = add(x = var_1321_cast_4, y = var_1525_to_fp16);
            tensor<fp16, [1, 64, 1, 1]> var_1528_to_fp16 = const()[name = tensor<string, []>("op_1528_to_fp16"), val = tensor<fp16, [1, 64, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(10022144)))];
            tensor<fp16, [1, 64, 1, 8]> var_1529_cast = add(x = var_1321_cast_5, y = var_1528_to_fp16);
            tensor<fp16, [1, 64, 1, 1]> var_1531_to_fp16 = const()[name = tensor<string, []>("op_1531_to_fp16"), val = tensor<fp16, [1, 64, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(10022336)))];
            tensor<fp16, [1, 64, 1, 8]> var_1532_cast = add(x = var_1321_cast_6, y = var_1531_to_fp16);
            tensor<fp16, [1, 64, 1, 1]> var_1534_to_fp16 = const()[name = tensor<string, []>("op_1534_to_fp16"), val = tensor<fp16, [1, 64, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(10022528)))];
            tensor<fp16, [1, 64, 1, 8]> var_1535_cast = add(x = var_1321_cast_7, y = var_1534_to_fp16);
            tensor<fp16, [1, 64, 1, 1]> var_1548_to_fp16 = const()[name = tensor<string, []>("op_1548_to_fp16"), val = tensor<fp16, [1, 64, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(10022720)))];
            tensor<fp16, [1, 64, 1, 8]> var_1549_cast = add(x = var_1321_cast_0, y = var_1548_to_fp16);
            tensor<fp16, [1, 64, 1, 1]> var_1551_to_fp16 = const()[name = tensor<string, []>("op_1551_to_fp16"), val = tensor<fp16, [1, 64, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(10022912)))];
            tensor<fp16, [1, 64, 1, 8]> var_1552_cast = add(x = var_1321_cast_1, y = var_1551_to_fp16);
            tensor<fp16, [1, 64, 1, 1]> var_1554_to_fp16 = const()[name = tensor<string, []>("op_1554_to_fp16"), val = tensor<fp16, [1, 64, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(10023104)))];
            tensor<fp16, [1, 64, 1, 8]> var_1555_cast = add(x = var_1321_cast_2, y = var_1554_to_fp16);
            tensor<fp16, [1, 64, 1, 1]> var_1557_to_fp16 = const()[name = tensor<string, []>("op_1557_to_fp16"), val = tensor<fp16, [1, 64, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(10023296)))];
            tensor<fp16, [1, 64, 1, 8]> var_1558_cast = add(x = var_1321_cast_3, y = var_1557_to_fp16);
            tensor<fp16, [1, 64, 1, 1]> var_1560_to_fp16 = const()[name = tensor<string, []>("op_1560_to_fp16"), val = tensor<fp16, [1, 64, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(10023488)))];
            tensor<fp16, [1, 64, 1, 8]> var_1561_cast = add(x = var_1321_cast_4, y = var_1560_to_fp16);
            tensor<fp16, [1, 64, 1, 1]> var_1563_to_fp16 = const()[name = tensor<string, []>("op_1563_to_fp16"), val = tensor<fp16, [1, 64, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(10023680)))];
            tensor<fp16, [1, 64, 1, 8]> var_1564_cast = add(x = var_1321_cast_5, y = var_1563_to_fp16);
            tensor<fp16, [1, 64, 1, 1]> var_1566_to_fp16 = const()[name = tensor<string, []>("op_1566_to_fp16"), val = tensor<fp16, [1, 64, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(10023872)))];
            tensor<fp16, [1, 64, 1, 8]> var_1567_cast = add(x = var_1321_cast_6, y = var_1566_to_fp16);
            tensor<fp16, [1, 64, 1, 1]> var_1569_to_fp16 = const()[name = tensor<string, []>("op_1569_to_fp16"), val = tensor<fp16, [1, 64, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(10024064)))];
            tensor<fp16, [1, 64, 1, 8]> var_1570_cast = add(x = var_1321_cast_7, y = var_1569_to_fp16);
            tensor<string, []> ac_17_equation_0 = const()[name = tensor<string, []>("ac_17_equation_0"), val = tensor<string, []>("bnhd,bdhm->bnhm")];
            tensor<fp16, [1, 128, 1, 8]> ac_17_cast = einsum(equation = ac_17_equation_0, values = (var_1388_cast, var_1514_cast));
            tensor<string, []> ac_19_equation_0 = const()[name = tensor<string, []>("ac_19_equation_0"), val = tensor<string, []>("bnhd,bdhm->bnhm")];
            tensor<fp16, [1, 128, 1, 8]> ac_19_cast = einsum(equation = ac_19_equation_0, values = (var_1394_cast, var_1517_cast));
            tensor<string, []> ac_21_equation_0 = const()[name = tensor<string, []>("ac_21_equation_0"), val = tensor<string, []>("bnhd,bdhm->bnhm")];
            tensor<fp16, [1, 128, 1, 8]> ac_21_cast = einsum(equation = ac_21_equation_0, values = (var_1400_cast, var_1520_cast));
            tensor<string, []> ac_23_equation_0 = const()[name = tensor<string, []>("ac_23_equation_0"), val = tensor<string, []>("bnhd,bdhm->bnhm")];
            tensor<fp16, [1, 128, 1, 8]> ac_23_cast = einsum(equation = ac_23_equation_0, values = (var_1406_cast, var_1523_cast));
            tensor<string, []> ac_25_equation_0 = const()[name = tensor<string, []>("ac_25_equation_0"), val = tensor<string, []>("bnhd,bdhm->bnhm")];
            tensor<fp16, [1, 128, 1, 8]> ac_25_cast = einsum(equation = ac_25_equation_0, values = (var_1412_cast, var_1526_cast));
            tensor<string, []> ac_27_equation_0 = const()[name = tensor<string, []>("ac_27_equation_0"), val = tensor<string, []>("bnhd,bdhm->bnhm")];
            tensor<fp16, [1, 128, 1, 8]> ac_27_cast = einsum(equation = ac_27_equation_0, values = (var_1418_cast, var_1529_cast));
            tensor<string, []> ac_29_equation_0 = const()[name = tensor<string, []>("ac_29_equation_0"), val = tensor<string, []>("bnhd,bdhm->bnhm")];
            tensor<fp16, [1, 128, 1, 8]> ac_29_cast = einsum(equation = ac_29_equation_0, values = (var_1424_cast, var_1532_cast));
            tensor<string, []> ac_31_equation_0 = const()[name = tensor<string, []>("ac_31_equation_0"), val = tensor<string, []>("bnhd,bdhm->bnhm")];
            tensor<fp16, [1, 128, 1, 8]> ac_31_cast = einsum(equation = ac_31_equation_0, values = (var_1430_cast, var_1535_cast));
            tensor<string, []> bd_17_equation_0 = const()[name = tensor<string, []>("bd_17_equation_0"), val = tensor<string, []>("bnhd,bdhm->bnhm")];
            tensor<fp16, [1, 128, 1, 8]> bd_17_cast = einsum(equation = bd_17_equation_0, values = (var_1492_cast_0, var_1549_cast));
            tensor<string, []> bd_19_equation_0 = const()[name = tensor<string, []>("bd_19_equation_0"), val = tensor<string, []>("bnhd,bdhm->bnhm")];
            tensor<fp16, [1, 128, 1, 8]> bd_19_cast = einsum(equation = bd_19_equation_0, values = (var_1492_cast_1, var_1552_cast));
            tensor<string, []> bd_21_equation_0 = const()[name = tensor<string, []>("bd_21_equation_0"), val = tensor<string, []>("bnhd,bdhm->bnhm")];
            tensor<fp16, [1, 128, 1, 8]> bd_21_cast = einsum(equation = bd_21_equation_0, values = (var_1492_cast_2, var_1555_cast));
            tensor<string, []> bd_23_equation_0 = const()[name = tensor<string, []>("bd_23_equation_0"), val = tensor<string, []>("bnhd,bdhm->bnhm")];
            tensor<fp16, [1, 128, 1, 8]> bd_23_cast = einsum(equation = bd_23_equation_0, values = (var_1492_cast_3, var_1558_cast));
            tensor<string, []> bd_25_equation_0 = const()[name = tensor<string, []>("bd_25_equation_0"), val = tensor<string, []>("bnhd,bdhm->bnhm")];
            tensor<fp16, [1, 128, 1, 8]> bd_25_cast = einsum(equation = bd_25_equation_0, values = (var_1492_cast_4, var_1561_cast));
            tensor<string, []> bd_27_equation_0 = const()[name = tensor<string, []>("bd_27_equation_0"), val = tensor<string, []>("bnhd,bdhm->bnhm")];
            tensor<fp16, [1, 128, 1, 8]> bd_27_cast = einsum(equation = bd_27_equation_0, values = (var_1492_cast_5, var_1564_cast));
            tensor<string, []> bd_29_equation_0 = const()[name = tensor<string, []>("bd_29_equation_0"), val = tensor<string, []>("bnhd,bdhm->bnhm")];
            tensor<fp16, [1, 128, 1, 8]> bd_29_cast = einsum(equation = bd_29_equation_0, values = (var_1492_cast_6, var_1567_cast));
            tensor<string, []> bd_31_equation_0 = const()[name = tensor<string, []>("bd_31_equation_0"), val = tensor<string, []>("bnhd,bdhm->bnhm")];
            tensor<fp16, [1, 128, 1, 8]> bd_31_cast = einsum(equation = bd_31_equation_0, values = (var_1492_cast_7, var_1570_cast));
            tensor<fp16, [1, 128, 1, 8]> s_33_cast = add(x = ac_17_cast, y = bd_17_cast);
            tensor<fp16, [1, 128, 1, 8]> s_35_cast = add(x = ac_19_cast, y = bd_19_cast);
            tensor<fp16, [1, 128, 1, 8]> s_37_cast = add(x = ac_21_cast, y = bd_21_cast);
            tensor<fp16, [1, 128, 1, 8]> s_39_cast = add(x = ac_23_cast, y = bd_23_cast);
            tensor<fp16, [1, 128, 1, 8]> s_41_cast = add(x = ac_25_cast, y = bd_25_cast);
            tensor<fp16, [1, 128, 1, 8]> s_43_cast = add(x = ac_27_cast, y = bd_27_cast);
            tensor<fp16, [1, 128, 1, 8]> s_45_cast = add(x = ac_29_cast, y = bd_29_cast);
            tensor<fp16, [1, 128, 1, 8]> s_47_cast = add(x = ac_31_cast, y = bd_31_cast);
            tensor<fp16, [1, 128, 1, 8]> s_49_cast = add(x = inf_mask_1_cast, y = s_33_cast);
            tensor<fp16, [1, 128, 1, 8]> s_51_cast = add(x = inf_mask_1_cast, y = s_35_cast);
            tensor<fp16, [1, 128, 1, 8]> s_53_cast = add(x = inf_mask_1_cast, y = s_37_cast);
            tensor<fp16, [1, 128, 1, 8]> s_55_cast = add(x = inf_mask_1_cast, y = s_39_cast);
            tensor<fp16, [1, 128, 1, 8]> s_57_cast = add(x = inf_mask_1_cast, y = s_41_cast);
            tensor<fp16, [1, 128, 1, 8]> s_59_cast = add(x = inf_mask_1_cast, y = s_43_cast);
            tensor<fp16, [1, 128, 1, 8]> s_61_cast = add(x = inf_mask_1_cast, y = s_45_cast);
            tensor<fp16, [1, 128, 1, 8]> s_63_cast = add(x = inf_mask_1_cast, y = s_47_cast);
            tensor<fp16, [1, 128, 1, 8]> input_43_cast = softmax(axis = var_1163, x = s_49_cast);
            tensor<fp16, [1, 128, 1, 8]> input_45_cast = softmax(axis = var_1163, x = s_51_cast);
            tensor<fp16, [1, 128, 1, 8]> input_47_cast = softmax(axis = var_1163, x = s_53_cast);
            tensor<fp16, [1, 128, 1, 8]> input_49_cast = softmax(axis = var_1163, x = s_55_cast);
            tensor<fp16, [1, 128, 1, 8]> input_51_cast = softmax(axis = var_1163, x = s_57_cast);
            tensor<fp16, [1, 128, 1, 8]> input_53_cast = softmax(axis = var_1163, x = s_59_cast);
            tensor<fp16, [1, 128, 1, 8]> input_55_cast = softmax(axis = var_1163, x = s_61_cast);
            tensor<fp16, [1, 128, 1, 8]> input_57_cast = softmax(axis = var_1163, x = s_63_cast);
            tensor<string, []> var_1640_equation_0 = const()[name = tensor<string, []>("op_1640_equation_0"), val = tensor<string, []>("bnhd,bdhm->bnhm")];
            tensor<fp16, [1, 64, 1, 8]> var_1640_cast = einsum(equation = var_1640_equation_0, values = (var_1438_cast, input_43_cast));
            tensor<string, []> var_1642_equation_0 = const()[name = tensor<string, []>("op_1642_equation_0"), val = tensor<string, []>("bnhd,bdhm->bnhm")];
            tensor<fp16, [1, 64, 1, 8]> var_1642_cast = einsum(equation = var_1642_equation_0, values = (var_1444_cast, input_45_cast));
            tensor<string, []> var_1644_equation_0 = const()[name = tensor<string, []>("op_1644_equation_0"), val = tensor<string, []>("bnhd,bdhm->bnhm")];
            tensor<fp16, [1, 64, 1, 8]> var_1644_cast = einsum(equation = var_1644_equation_0, values = (var_1450_cast, input_47_cast));
            tensor<string, []> var_1646_equation_0 = const()[name = tensor<string, []>("op_1646_equation_0"), val = tensor<string, []>("bnhd,bdhm->bnhm")];
            tensor<fp16, [1, 64, 1, 8]> var_1646_cast = einsum(equation = var_1646_equation_0, values = (var_1456_cast, input_49_cast));
            tensor<string, []> var_1648_equation_0 = const()[name = tensor<string, []>("op_1648_equation_0"), val = tensor<string, []>("bnhd,bdhm->bnhm")];
            tensor<fp16, [1, 64, 1, 8]> var_1648_cast = einsum(equation = var_1648_equation_0, values = (var_1462_cast, input_51_cast));
            tensor<string, []> var_1650_equation_0 = const()[name = tensor<string, []>("op_1650_equation_0"), val = tensor<string, []>("bnhd,bdhm->bnhm")];
            tensor<fp16, [1, 64, 1, 8]> var_1650_cast = einsum(equation = var_1650_equation_0, values = (var_1468_cast, input_53_cast));
            tensor<string, []> var_1652_equation_0 = const()[name = tensor<string, []>("op_1652_equation_0"), val = tensor<string, []>("bnhd,bdhm->bnhm")];
            tensor<fp16, [1, 64, 1, 8]> var_1652_cast = einsum(equation = var_1652_equation_0, values = (var_1474_cast, input_55_cast));
            tensor<string, []> var_1654_equation_0 = const()[name = tensor<string, []>("op_1654_equation_0"), val = tensor<string, []>("bnhd,bdhm->bnhm")];
            tensor<fp16, [1, 64, 1, 8]> var_1654_cast = einsum(equation = var_1654_equation_0, values = (var_1480_cast, input_57_cast));
            tensor<bool, []> y_7_interleave_0 = const()[name = tensor<string, []>("y_7_interleave_0"), val = tensor<bool, []>(false)];
            tensor<fp16, [1, 512, 1, 8]> y_7_cast = concat(axis = var_1163, interleave = y_7_interleave_0, values = (var_1640_cast, var_1642_cast, var_1644_cast, var_1646_cast, var_1648_cast, var_1650_cast, var_1652_cast, var_1654_cast));
            tensor<int32, [2]> var_1661 = const()[name = tensor<string, []>("op_1661"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_1663 = const()[name = tensor<string, []>("op_1663"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> input_59_pad_type_0 = const()[name = tensor<string, []>("input_59_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> input_59_pad_0 = const()[name = tensor<string, []>("input_59_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [512, 512, 1, 1]> op_1660_to_fp16_affine_quantized = constexpr_affine_dequantize()[axis = tensor<int32, []>(0), name = tensor<string, []>("op_1660_to_fp16_affine_quantized"), quantized_data = tensor<int8, [512, 512, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(10024256))), scale = tensor<fp16, [512]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(10287040))), zero_point = tensor<int8, [512]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(10286464)))];
            tensor<fp16, [512]> secondary_encoder_encoders_1_self_attn_linear_out_bias_to_fp16 = const()[name = tensor<string, []>("secondary_encoder_encoders_1_self_attn_linear_out_bias_to_fp16"), val = tensor<fp16, [512]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(10288128)))];
            tensor<fp16, [1, 512, 1, 8]> input_59_cast = conv(bias = secondary_encoder_encoders_1_self_attn_linear_out_bias_to_fp16, dilations = var_1663, groups = var_1163, pad = input_59_pad_0, pad_type = input_59_pad_type_0, strides = var_1661, weight = op_1660_to_fp16_affine_quantized, x = y_7_cast);
            tensor<fp16, [1, 512, 1, 8]> x_83_cast = add(x = x_77_cast, y = input_59_cast);
            tensor<fp16, [1, 512, 1, 8]> var_1672_cast = abs(x = x_83_cast);
            tensor<fp16, []> var_1673_to_fp16 = const()[name = tensor<string, []>("op_1673_to_fp16"), val = tensor<fp16, []>(0.001953125)];
            tensor<fp16, [1, 512, 1, 8]> var_1674_cast = mul(x = var_1672_cast, y = var_1673_to_fp16);
            tensor<int32, [1]> var_1675 = const()[name = tensor<string, []>("op_1675"), val = tensor<int32, [1]>([1])];
            tensor<fp16, [1, 1, 1, 8]> scale_49_cast = reduce_sum(axes = var_1675, keep_dims = var_1162, x = var_1674_cast);
            tensor<fp16, []> scale_51_epsilon_0_to_fp16 = const()[name = tensor<string, []>("scale_51_epsilon_0_to_fp16"), val = tensor<fp16, []>(5.96046448e-08)];
            tensor<fp16, [1, 1, 1, 8]> scale_51_cast = rsqrt(epsilon = scale_51_epsilon_0_to_fp16, x = scale_49_cast);
            tensor<fp16, [1, 1, 1, 8]> scale_53_cast = mul(x = scale_51_cast, y = scale_51_cast);
            tensor<fp16, [1, 512, 1, 8]> x_85_cast = mul(x = x_83_cast, y = scale_53_cast);
            tensor<fp16, []> var_1680_to_fp16 = const()[name = tensor<string, []>("op_1680_to_fp16"), val = tensor<fp16, []>(-0.001953125)];
            tensor<fp16, [1, 512, 1, 8]> var_1681_cast = mul(x = x_85_cast, y = var_1680_to_fp16);
            tensor<int32, [1]> var_1682 = const()[name = tensor<string, []>("op_1682"), val = tensor<int32, [1]>([1])];
            tensor<fp16, [1, 1, 1, 8]> x_mean_17_cast = reduce_sum(axes = var_1682, keep_dims = var_1162, x = var_1681_cast);
            tensor<fp16, [1, 512, 1, 8]> x_zero_mean_17_cast = add(x = x_85_cast, y = x_mean_17_cast);
            tensor<fp16, []> var_1685_to_fp16 = const()[name = tensor<string, []>("op_1685_to_fp16"), val = tensor<fp16, []>(0.001953125)];
            tensor<fp16, [1, 512, 1, 8]> var_1686_cast = mul(x = x_zero_mean_17_cast, y = var_1685_to_fp16);
            tensor<fp16, [1, 512, 1, 8]> var_1687_cast = mul(x = var_1686_cast, y = x_zero_mean_17_cast);
            tensor<int32, [1]> var_1688 = const()[name = tensor<string, []>("op_1688"), val = tensor<int32, [1]>([1])];
            tensor<fp16, [1, 1, 1, 8]> x_var_17_cast = reduce_sum(axes = var_1688, keep_dims = var_1162, x = var_1687_cast);
            tensor<fp16, []> var_1690_to_fp16 = const()[name = tensor<string, []>("op_1690_to_fp16"), val = tensor<fp16, []>(1.00135803e-05)];
            tensor<fp16, [1, 1, 1, 8]> var_1691_cast = add(x = x_var_17_cast, y = var_1690_to_fp16);
            tensor<fp16, []> var_1692_epsilon_0_to_fp16 = const()[name = tensor<string, []>("op_1692_epsilon_0_to_fp16"), val = tensor<fp16, []>(5.96046448e-08)];
            tensor<fp16, [1, 1, 1, 8]> var_1692_cast = rsqrt(epsilon = var_1692_epsilon_0_to_fp16, x = var_1691_cast);
            tensor<fp16, [1, 512, 1, 8]> var_1693_cast = mul(x = x_zero_mean_17_cast, y = var_1692_cast);
            tensor<fp16, [512]> x_87_mean_0_to_fp16 = const()[name = tensor<string, []>("x_87_mean_0_to_fp16"), val = tensor<fp16, [512]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(10289216)))];
            tensor<fp16, [512]> x_87_variance_0_to_fp16 = const()[name = tensor<string, []>("x_87_variance_0_to_fp16"), val = tensor<fp16, [512]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(10290304)))];
            tensor<fp16, [512]> x_87_gamma_0_to_fp16 = const()[name = tensor<string, []>("x_87_gamma_0_to_fp16"), val = tensor<fp16, [512]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(10291392)))];
            tensor<fp16, [512]> x_87_beta_0_to_fp16 = const()[name = tensor<string, []>("x_87_beta_0_to_fp16"), val = tensor<fp16, [512]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(10292480)))];
            tensor<fp16, []> x_87_epsilon_0_to_fp16 = const()[name = tensor<string, []>("x_87_epsilon_0_to_fp16"), val = tensor<fp16, []>(1.00135803e-05)];
            tensor<fp16, [1, 512, 1, 8]> x_87_cast = batch_norm(beta = x_87_beta_0_to_fp16, epsilon = x_87_epsilon_0_to_fp16, gamma = x_87_gamma_0_to_fp16, mean = x_87_mean_0_to_fp16, variance = x_87_variance_0_to_fp16, x = var_1693_cast);
            tensor<bool, []> x_89_interleave_0 = const()[name = tensor<string, []>("x_89_interleave_0"), val = tensor<bool, []>(false)];
            tensor<fp16, [1, 512, 1, 40]> x_89_cast = concat(axis = var_1160, interleave = x_89_interleave_0, values = (var_230_cast_1, x_87_cast));
            tensor<int32, [4]> x_91_begin_0 = const()[name = tensor<string, []>("x_91_begin_0"), val = tensor<int32, [4]>([0, 0, 0, 12])];
            tensor<int32, [4]> x_91_end_0 = const()[name = tensor<string, []>("x_91_end_0"), val = tensor<int32, [4]>([1, 512, 1, 40])];
            tensor<bool, [4]> x_91_end_mask_0 = const()[name = tensor<string, []>("x_91_end_mask_0"), val = tensor<bool, [4]>([true, true, true, true])];
            tensor<fp16, [1, 512, 1, 28]> x_91_cast = slice_by_index(begin = x_91_begin_0, end = x_91_end_0, end_mask = x_91_end_mask_0, x = x_89_cast);
            tensor<int32, [4]> x_93_begin_0 = const()[name = tensor<string, []>("x_93_begin_0"), val = tensor<int32, [4]>([0, 0, 0, 12])];
            tensor<int32, [4]> x_93_end_0 = const()[name = tensor<string, []>("x_93_end_0"), val = tensor<int32, [4]>([1, 512, 1, 28])];
            tensor<bool, [4]> x_93_end_mask_0 = const()[name = tensor<string, []>("x_93_end_mask_0"), val = tensor<bool, [4]>([true, true, true, true])];
            tensor<fp16, [1, 512, 1, 16]> x_93_cast = slice_by_index(begin = x_93_begin_0, end = x_93_end_0, end_mask = x_93_end_mask_0, x = x_91_cast);
            tensor<int32, [4]> x_95_begin_0 = const()[name = tensor<string, []>("x_95_begin_0"), val = tensor<int32, [4]>([0, 0, 0, 1])];
            tensor<int32, [4]> x_95_end_0 = const()[name = tensor<string, []>("x_95_end_0"), val = tensor<int32, [4]>([1, 512, 1, 16])];
            tensor<bool, [4]> x_95_end_mask_0 = const()[name = tensor<string, []>("x_95_end_mask_0"), val = tensor<bool, [4]>([true, true, true, true])];
            tensor<fp16, [1, 512, 1, 15]> x_95_cast = slice_by_index(begin = x_95_begin_0, end = x_95_end_0, end_mask = x_95_end_mask_0, x = x_93_cast);
            tensor<int32, [4]> var_1733_begin_0 = const()[name = tensor<string, []>("op_1733_begin_0"), val = tensor<int32, [4]>([0, 0, 0, -7])];
            tensor<int32, [4]> var_1733_end_0 = const()[name = tensor<string, []>("op_1733_end_0"), val = tensor<int32, [4]>([1, 512, 1, 15])];
            tensor<bool, [4]> var_1733_end_mask_0 = const()[name = tensor<string, []>("op_1733_end_mask_0"), val = tensor<bool, [4]>([true, true, true, true])];
            tensor<fp16, [1, 512, 1, 7]> var_1733_cast = slice_by_index(begin = var_1733_begin_0, end = var_1733_end_0, end_mask = var_1733_end_mask_0, x = x_95_cast);
            tensor<int32, [2]> var_1735 = const()[name = tensor<string, []>("op_1735"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_1737 = const()[name = tensor<string, []>("op_1737"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> x_97_pad_type_0 = const()[name = tensor<string, []>("x_97_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> x_97_pad_0 = const()[name = tensor<string, []>("x_97_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [1024, 512, 1, 1]> op_1734_to_fp16_affine_quantized = constexpr_affine_dequantize()[axis = tensor<int32, []>(0), name = tensor<string, []>("op_1734_to_fp16_affine_quantized"), quantized_data = tensor<int8, [1024, 512, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(10293568))), scale = tensor<fp16, [1024]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(10819008))), zero_point = tensor<int8, [1024]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(10817920)))];
            tensor<fp16, [1024]> secondary_encoder_encoders_1_conv_module_pointwise_conv1_bias_to_fp16 = const()[name = tensor<string, []>("secondary_encoder_encoders_1_conv_module_pointwise_conv1_bias_to_fp16"), val = tensor<fp16, [1024]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(10821120)))];
            tensor<fp16, [1, 1024, 1, 15]> x_97_cast = conv(bias = secondary_encoder_encoders_1_conv_module_pointwise_conv1_bias_to_fp16, dilations = var_1737, groups = var_1163, pad = x_97_pad_0, pad_type = x_97_pad_type_0, strides = var_1735, weight = op_1734_to_fp16_affine_quantized, x = x_95_cast);
            tensor<int32, [4]> var_1746_begin_0 = const()[name = tensor<string, []>("op_1746_begin_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<int32, [4]> var_1746_end_0 = const()[name = tensor<string, []>("op_1746_end_0"), val = tensor<int32, [4]>([1, 512, 1, 15])];
            tensor<bool, [4]> var_1746_end_mask_0 = const()[name = tensor<string, []>("op_1746_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [1, 512, 1, 15]> var_1746_cast = slice_by_index(begin = var_1746_begin_0, end = var_1746_end_0, end_mask = var_1746_end_mask_0, x = x_97_cast);
            tensor<int32, [4]> var_1750_begin_0 = const()[name = tensor<string, []>("op_1750_begin_0"), val = tensor<int32, [4]>([0, 512, 0, 0])];
            tensor<int32, [4]> var_1750_end_0 = const()[name = tensor<string, []>("op_1750_end_0"), val = tensor<int32, [4]>([1, 1024, 1, 15])];
            tensor<bool, [4]> var_1750_end_mask_0 = const()[name = tensor<string, []>("op_1750_end_mask_0"), val = tensor<bool, [4]>([true, true, true, true])];
            tensor<fp16, [1, 512, 1, 15]> var_1750_cast = slice_by_index(begin = var_1750_begin_0, end = var_1750_end_0, end_mask = var_1750_end_mask_0, x = x_97_cast);
            tensor<fp16, [1, 512, 1, 15]> var_1753_cast = sigmoid(x = var_1750_cast);
            tensor<fp16, [1, 512, 1, 15]> x_99_cast = mul(x = var_1746_cast, y = var_1753_cast);
            tensor<int32, [2]> var_1756 = const()[name = tensor<string, []>("op_1756"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_1758 = const()[name = tensor<string, []>("op_1758"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> x_101_pad_type_0 = const()[name = tensor<string, []>("x_101_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> x_101_pad_0 = const()[name = tensor<string, []>("x_101_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [512, 1, 1, 8]> op_1755_to_fp16_affine_quantized = constexpr_affine_dequantize()[axis = tensor<int32, []>(0), name = tensor<string, []>("op_1755_to_fp16_affine_quantized"), quantized_data = tensor<int8, [512, 1, 1, 8]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(10823232))), scale = tensor<fp16, [512]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(10827968))), zero_point = tensor<int8, [512]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(10827392)))];
            tensor<fp16, [512]> secondary_encoder_encoders_1_conv_module_depthwise_conv_bias_to_fp16 = const()[name = tensor<string, []>("secondary_encoder_encoders_1_conv_module_depthwise_conv_bias_to_fp16"), val = tensor<fp16, [512]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(10829056)))];
            tensor<fp16, [1, 512, 1, 8]> x_101_cast = conv(bias = secondary_encoder_encoders_1_conv_module_depthwise_conv_bias_to_fp16, dilations = var_1758, groups = var_1150, pad = x_101_pad_0, pad_type = x_101_pad_type_0, strides = var_1756, weight = op_1755_to_fp16_affine_quantized, x = x_99_cast);
            tensor<fp16, [1, 512, 1, 8]> var_1761_cast = abs(x = x_101_cast);
            tensor<fp16, []> var_1762_to_fp16 = const()[name = tensor<string, []>("op_1762_to_fp16"), val = tensor<fp16, []>(0.001953125)];
            tensor<fp16, [1, 512, 1, 8]> var_1763_cast = mul(x = var_1761_cast, y = var_1762_to_fp16);
            tensor<int32, [1]> var_1764 = const()[name = tensor<string, []>("op_1764"), val = tensor<int32, [1]>([1])];
            tensor<fp16, [1, 1, 1, 8]> scale_55_cast = reduce_sum(axes = var_1764, keep_dims = var_1162, x = var_1763_cast);
            tensor<fp16, []> scale_57_epsilon_0_to_fp16 = const()[name = tensor<string, []>("scale_57_epsilon_0_to_fp16"), val = tensor<fp16, []>(5.96046448e-08)];
            tensor<fp16, [1, 1, 1, 8]> scale_57_cast = rsqrt(epsilon = scale_57_epsilon_0_to_fp16, x = scale_55_cast);
            tensor<fp16, [1, 1, 1, 8]> scale_59_cast = mul(x = scale_57_cast, y = scale_57_cast);
            tensor<fp16, [1, 512, 1, 8]> x_103_cast = mul(x = x_101_cast, y = scale_59_cast);
            tensor<fp16, []> var_1769_to_fp16 = const()[name = tensor<string, []>("op_1769_to_fp16"), val = tensor<fp16, []>(-0.001953125)];
            tensor<fp16, [1, 512, 1, 8]> var_1770_cast = mul(x = x_103_cast, y = var_1769_to_fp16);
            tensor<int32, [1]> var_1771 = const()[name = tensor<string, []>("op_1771"), val = tensor<int32, [1]>([1])];
            tensor<fp16, [1, 1, 1, 8]> x_mean_19_cast = reduce_sum(axes = var_1771, keep_dims = var_1162, x = var_1770_cast);
            tensor<fp16, [1, 512, 1, 8]> x_zero_mean_19_cast = add(x = x_103_cast, y = x_mean_19_cast);
            tensor<fp16, []> var_1774_to_fp16 = const()[name = tensor<string, []>("op_1774_to_fp16"), val = tensor<fp16, []>(0.001953125)];
            tensor<fp16, [1, 512, 1, 8]> var_1775_cast = mul(x = x_zero_mean_19_cast, y = var_1774_to_fp16);
            tensor<fp16, [1, 512, 1, 8]> var_1776_cast = mul(x = var_1775_cast, y = x_zero_mean_19_cast);
            tensor<int32, [1]> var_1777 = const()[name = tensor<string, []>("op_1777"), val = tensor<int32, [1]>([1])];
            tensor<fp16, [1, 1, 1, 8]> x_var_19_cast = reduce_sum(axes = var_1777, keep_dims = var_1162, x = var_1776_cast);
            tensor<fp16, []> var_1779_to_fp16 = const()[name = tensor<string, []>("op_1779_to_fp16"), val = tensor<fp16, []>(1.00135803e-05)];
            tensor<fp16, [1, 1, 1, 8]> var_1780_cast = add(x = x_var_19_cast, y = var_1779_to_fp16);
            tensor<fp16, []> var_1781_epsilon_0_to_fp16 = const()[name = tensor<string, []>("op_1781_epsilon_0_to_fp16"), val = tensor<fp16, []>(5.96046448e-08)];
            tensor<fp16, [1, 1, 1, 8]> var_1781_cast = rsqrt(epsilon = var_1781_epsilon_0_to_fp16, x = var_1780_cast);
            tensor<fp16, [1, 512, 1, 8]> var_1782_cast = mul(x = x_zero_mean_19_cast, y = var_1781_cast);
            tensor<fp16, [512]> input_61_mean_0_to_fp16 = const()[name = tensor<string, []>("input_61_mean_0_to_fp16"), val = tensor<fp16, [512]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(10830144)))];
            tensor<fp16, [512]> input_61_variance_0_to_fp16 = const()[name = tensor<string, []>("input_61_variance_0_to_fp16"), val = tensor<fp16, [512]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(10831232)))];
            tensor<fp16, [512]> input_61_gamma_0_to_fp16 = const()[name = tensor<string, []>("input_61_gamma_0_to_fp16"), val = tensor<fp16, [512]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(10832320)))];
            tensor<fp16, [512]> input_61_beta_0_to_fp16 = const()[name = tensor<string, []>("input_61_beta_0_to_fp16"), val = tensor<fp16, [512]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(10833408)))];
            tensor<fp16, []> input_61_epsilon_0_to_fp16 = const()[name = tensor<string, []>("input_61_epsilon_0_to_fp16"), val = tensor<fp16, []>(1.00135803e-05)];
            tensor<fp16, [1, 512, 1, 8]> input_61_cast = batch_norm(beta = input_61_beta_0_to_fp16, epsilon = input_61_epsilon_0_to_fp16, gamma = input_61_gamma_0_to_fp16, mean = input_61_mean_0_to_fp16, variance = input_61_variance_0_to_fp16, x = var_1782_cast);
            tensor<fp16, [1, 512, 1, 8]> x_105_cast = silu(x = input_61_cast);
            tensor<int32, [2]> var_1791 = const()[name = tensor<string, []>("op_1791"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_1793 = const()[name = tensor<string, []>("op_1793"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> input_63_pad_type_0 = const()[name = tensor<string, []>("input_63_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> input_63_pad_0 = const()[name = tensor<string, []>("input_63_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [512, 512, 1, 1]> op_1790_to_fp16_affine_quantized = constexpr_affine_dequantize()[axis = tensor<int32, []>(0), name = tensor<string, []>("op_1790_to_fp16_affine_quantized"), quantized_data = tensor<int8, [512, 512, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(10834496))), scale = tensor<fp16, [512]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(11097280))), zero_point = tensor<int8, [512]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(11096704)))];
            tensor<fp16, [512]> secondary_encoder_encoders_1_conv_module_pointwise_conv2_bias_to_fp16 = const()[name = tensor<string, []>("secondary_encoder_encoders_1_conv_module_pointwise_conv2_bias_to_fp16"), val = tensor<fp16, [512]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(11098368)))];
            tensor<fp16, [1, 512, 1, 8]> input_63_cast = conv(bias = secondary_encoder_encoders_1_conv_module_pointwise_conv2_bias_to_fp16, dilations = var_1793, groups = var_1163, pad = input_63_pad_0, pad_type = input_63_pad_type_0, strides = var_1791, weight = op_1790_to_fp16_affine_quantized, x = x_105_cast);
            tensor<fp16, [1, 512, 1, 8]> x_109_cast = add(x = x_83_cast, y = input_63_cast);
            tensor<fp16, [1, 512, 1, 8]> var_1801_cast = abs(x = x_109_cast);
            tensor<fp16, []> var_1802_to_fp16 = const()[name = tensor<string, []>("op_1802_to_fp16"), val = tensor<fp16, []>(0.001953125)];
            tensor<fp16, [1, 512, 1, 8]> var_1803_cast = mul(x = var_1801_cast, y = var_1802_to_fp16);
            tensor<int32, [1]> var_1804 = const()[name = tensor<string, []>("op_1804"), val = tensor<int32, [1]>([1])];
            tensor<fp16, [1, 1, 1, 8]> scale_61_cast = reduce_sum(axes = var_1804, keep_dims = var_1162, x = var_1803_cast);
            tensor<fp16, []> scale_63_epsilon_0_to_fp16 = const()[name = tensor<string, []>("scale_63_epsilon_0_to_fp16"), val = tensor<fp16, []>(5.96046448e-08)];
            tensor<fp16, [1, 1, 1, 8]> scale_63_cast = rsqrt(epsilon = scale_63_epsilon_0_to_fp16, x = scale_61_cast);
            tensor<fp16, [1, 1, 1, 8]> scale_65_cast = mul(x = scale_63_cast, y = scale_63_cast);
            tensor<fp16, [1, 512, 1, 8]> x_111_cast = mul(x = x_109_cast, y = scale_65_cast);
            tensor<fp16, []> var_1809_to_fp16 = const()[name = tensor<string, []>("op_1809_to_fp16"), val = tensor<fp16, []>(-0.001953125)];
            tensor<fp16, [1, 512, 1, 8]> var_1810_cast = mul(x = x_111_cast, y = var_1809_to_fp16);
            tensor<int32, [1]> var_1811 = const()[name = tensor<string, []>("op_1811"), val = tensor<int32, [1]>([1])];
            tensor<fp16, [1, 1, 1, 8]> x_mean_21_cast = reduce_sum(axes = var_1811, keep_dims = var_1162, x = var_1810_cast);
            tensor<fp16, [1, 512, 1, 8]> x_zero_mean_21_cast = add(x = x_111_cast, y = x_mean_21_cast);
            tensor<fp16, []> var_1814_to_fp16 = const()[name = tensor<string, []>("op_1814_to_fp16"), val = tensor<fp16, []>(0.001953125)];
            tensor<fp16, [1, 512, 1, 8]> var_1815_cast = mul(x = x_zero_mean_21_cast, y = var_1814_to_fp16);
            tensor<fp16, [1, 512, 1, 8]> var_1816_cast = mul(x = var_1815_cast, y = x_zero_mean_21_cast);
            tensor<int32, [1]> var_1817 = const()[name = tensor<string, []>("op_1817"), val = tensor<int32, [1]>([1])];
            tensor<fp16, [1, 1, 1, 8]> x_var_21_cast = reduce_sum(axes = var_1817, keep_dims = var_1162, x = var_1816_cast);
            tensor<fp16, []> var_1819_to_fp16 = const()[name = tensor<string, []>("op_1819_to_fp16"), val = tensor<fp16, []>(1.00135803e-05)];
            tensor<fp16, [1, 1, 1, 8]> var_1820_cast = add(x = x_var_21_cast, y = var_1819_to_fp16);
            tensor<fp16, []> var_1821_epsilon_0_to_fp16 = const()[name = tensor<string, []>("op_1821_epsilon_0_to_fp16"), val = tensor<fp16, []>(5.96046448e-08)];
            tensor<fp16, [1, 1, 1, 8]> var_1821_cast = rsqrt(epsilon = var_1821_epsilon_0_to_fp16, x = var_1820_cast);
            tensor<fp16, [1, 512, 1, 8]> var_1822_cast = mul(x = x_zero_mean_21_cast, y = var_1821_cast);
            tensor<fp16, [512]> x_113_mean_0_to_fp16 = const()[name = tensor<string, []>("x_113_mean_0_to_fp16"), val = tensor<fp16, [512]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(11099456)))];
            tensor<fp16, [512]> x_113_variance_0_to_fp16 = const()[name = tensor<string, []>("x_113_variance_0_to_fp16"), val = tensor<fp16, [512]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(11100544)))];
            tensor<fp16, [512]> x_113_gamma_0_to_fp16 = const()[name = tensor<string, []>("x_113_gamma_0_to_fp16"), val = tensor<fp16, [512]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(11101632)))];
            tensor<fp16, [512]> x_113_beta_0_to_fp16 = const()[name = tensor<string, []>("x_113_beta_0_to_fp16"), val = tensor<fp16, [512]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(11102720)))];
            tensor<fp16, []> x_113_epsilon_0_to_fp16 = const()[name = tensor<string, []>("x_113_epsilon_0_to_fp16"), val = tensor<fp16, []>(1.00135803e-05)];
            tensor<fp16, [1, 512, 1, 8]> x_113_cast = batch_norm(beta = x_113_beta_0_to_fp16, epsilon = x_113_epsilon_0_to_fp16, gamma = x_113_gamma_0_to_fp16, mean = x_113_mean_0_to_fp16, variance = x_113_variance_0_to_fp16, x = var_1822_cast);
            tensor<int32, [2]> var_1833 = const()[name = tensor<string, []>("op_1833"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_1835 = const()[name = tensor<string, []>("op_1835"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> input_65_pad_type_0 = const()[name = tensor<string, []>("input_65_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> input_65_pad_0 = const()[name = tensor<string, []>("input_65_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [2048, 512, 1, 1]> op_1832_to_fp16_affine_quantized = constexpr_affine_dequantize()[axis = tensor<int32, []>(0), name = tensor<string, []>("op_1832_to_fp16_affine_quantized"), quantized_data = tensor<int8, [2048, 512, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(11103808))), scale = tensor<fp16, [2048]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(12154560))), zero_point = tensor<int8, [2048]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(12152448)))];
            tensor<fp16, [2048]> secondary_encoder_encoders_1_feed_forward_w_1_bias_to_fp16 = const()[name = tensor<string, []>("secondary_encoder_encoders_1_feed_forward_w_1_bias_to_fp16"), val = tensor<fp16, [2048]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(12158720)))];
            tensor<fp16, [1, 2048, 1, 8]> input_65_cast = conv(bias = secondary_encoder_encoders_1_feed_forward_w_1_bias_to_fp16, dilations = var_1835, groups = var_1163, pad = input_65_pad_0, pad_type = input_65_pad_type_0, strides = var_1833, weight = op_1832_to_fp16_affine_quantized, x = x_113_cast);
            tensor<fp16, [1, 2048, 1, 8]> input_67_cast = silu(x = input_65_cast);
            tensor<int32, [2]> var_1844 = const()[name = tensor<string, []>("op_1844"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_1846 = const()[name = tensor<string, []>("op_1846"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> input_69_pad_type_0 = const()[name = tensor<string, []>("input_69_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> input_69_pad_0 = const()[name = tensor<string, []>("input_69_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [512, 2048, 1, 1]> op_1851_weight_0_to_fp16_affine_quantized = constexpr_affine_dequantize()[axis = tensor<int32, []>(0), name = tensor<string, []>("op_1851_weight_0_to_fp16_affine_quantized"), quantized_data = tensor<int8, [512, 2048, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(12162880))), scale = tensor<fp16, [512]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(13212096))), zero_point = tensor<int8, [512]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(13211520)))];
            tensor<fp16, [512]> var_1851_bias_0_to_fp16 = const()[name = tensor<string, []>("op_1851_bias_0_to_fp16"), val = tensor<fp16, [512]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(13213184)))];
            tensor<fp16, [1, 512, 1, 8]> var_1851_cast = conv(bias = var_1851_bias_0_to_fp16, dilations = var_1846, groups = var_1163, pad = input_69_pad_0, pad_type = input_69_pad_type_0, strides = var_1844, weight = op_1851_weight_0_to_fp16_affine_quantized, x = input_67_cast);
            tensor<fp16, [1, 512, 1, 8]> x_119_cast = add(x = x_109_cast, y = var_1851_cast);
            tensor<fp16, [1, 512, 1, 8]> var_1853_cast = abs(x = x_119_cast);
            tensor<fp16, []> var_1854_to_fp16 = const()[name = tensor<string, []>("op_1854_to_fp16"), val = tensor<fp16, []>(0.001953125)];
            tensor<fp16, [1, 512, 1, 8]> var_1855_cast = mul(x = var_1853_cast, y = var_1854_to_fp16);
            tensor<int32, [1]> var_1856 = const()[name = tensor<string, []>("op_1856"), val = tensor<int32, [1]>([1])];
            tensor<fp16, [1, 1, 1, 8]> scale_67_cast = reduce_sum(axes = var_1856, keep_dims = var_1162, x = var_1855_cast);
            tensor<fp16, []> scale_69_epsilon_0_to_fp16 = const()[name = tensor<string, []>("scale_69_epsilon_0_to_fp16"), val = tensor<fp16, []>(5.96046448e-08)];
            tensor<fp16, [1, 1, 1, 8]> scale_69_cast = rsqrt(epsilon = scale_69_epsilon_0_to_fp16, x = scale_67_cast);
            tensor<fp16, [1, 1, 1, 8]> scale_71_cast = mul(x = scale_69_cast, y = scale_69_cast);
            tensor<fp16, [1, 512, 1, 8]> x_121_cast = mul(x = x_119_cast, y = scale_71_cast);
            tensor<fp16, []> var_1861_to_fp16 = const()[name = tensor<string, []>("op_1861_to_fp16"), val = tensor<fp16, []>(-0.001953125)];
            tensor<fp16, [1, 512, 1, 8]> var_1862_cast = mul(x = x_121_cast, y = var_1861_to_fp16);
            tensor<int32, [1]> var_1863 = const()[name = tensor<string, []>("op_1863"), val = tensor<int32, [1]>([1])];
            tensor<fp16, [1, 1, 1, 8]> x_mean_23_cast = reduce_sum(axes = var_1863, keep_dims = var_1162, x = var_1862_cast);
            tensor<fp16, [1, 512, 1, 8]> x_zero_mean_23_cast = add(x = x_121_cast, y = x_mean_23_cast);
            tensor<fp16, []> var_1866_to_fp16 = const()[name = tensor<string, []>("op_1866_to_fp16"), val = tensor<fp16, []>(0.001953125)];
            tensor<fp16, [1, 512, 1, 8]> var_1867_cast = mul(x = x_zero_mean_23_cast, y = var_1866_to_fp16);
            tensor<fp16, [1, 512, 1, 8]> var_1868_cast = mul(x = var_1867_cast, y = x_zero_mean_23_cast);
            tensor<int32, [1]> var_1869 = const()[name = tensor<string, []>("op_1869"), val = tensor<int32, [1]>([1])];
            tensor<fp16, [1, 1, 1, 8]> x_var_23_cast = reduce_sum(axes = var_1869, keep_dims = var_1162, x = var_1868_cast);
            tensor<fp16, []> var_1871_to_fp16 = const()[name = tensor<string, []>("op_1871_to_fp16"), val = tensor<fp16, []>(1.00135803e-05)];
            tensor<fp16, [1, 1, 1, 8]> var_1872_cast = add(x = x_var_23_cast, y = var_1871_to_fp16);
            tensor<fp16, []> var_1873_epsilon_0_to_fp16 = const()[name = tensor<string, []>("op_1873_epsilon_0_to_fp16"), val = tensor<fp16, []>(5.96046448e-08)];
            tensor<fp16, [1, 1, 1, 8]> var_1873_cast = rsqrt(epsilon = var_1873_epsilon_0_to_fp16, x = var_1872_cast);
            tensor<fp16, [1, 512, 1, 8]> var_1874_cast = mul(x = x_zero_mean_23_cast, y = var_1873_cast);
            tensor<fp16, [512]> x_123_mean_0_to_fp16 = const()[name = tensor<string, []>("x_123_mean_0_to_fp16"), val = tensor<fp16, [512]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(13214272)))];
            tensor<fp16, [512]> x_123_variance_0_to_fp16 = const()[name = tensor<string, []>("x_123_variance_0_to_fp16"), val = tensor<fp16, [512]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(13215360)))];
            tensor<fp16, [512]> x_123_gamma_0_to_fp16 = const()[name = tensor<string, []>("x_123_gamma_0_to_fp16"), val = tensor<fp16, [512]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(13216448)))];
            tensor<fp16, [512]> x_123_beta_0_to_fp16 = const()[name = tensor<string, []>("x_123_beta_0_to_fp16"), val = tensor<fp16, [512]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(13217536)))];
            tensor<fp16, []> x_123_epsilon_0_to_fp16 = const()[name = tensor<string, []>("x_123_epsilon_0_to_fp16"), val = tensor<fp16, []>(1.00135803e-05)];
            tensor<fp16, [1, 512, 1, 8]> x_123_cast = batch_norm(beta = x_123_beta_0_to_fp16, epsilon = x_123_epsilon_0_to_fp16, gamma = x_123_gamma_0_to_fp16, mean = x_123_mean_0_to_fp16, variance = x_123_variance_0_to_fp16, x = var_1874_cast);
            tensor<fp16, [1, 512, 1, 8]> var_1886_cast = abs(x = x_123_cast);
            tensor<fp16, []> var_1887_to_fp16 = const()[name = tensor<string, []>("op_1887_to_fp16"), val = tensor<fp16, []>(0.001953125)];
            tensor<fp16, [1, 512, 1, 8]> var_1888_cast = mul(x = var_1886_cast, y = var_1887_to_fp16);
            tensor<int32, [1]> var_1890 = const()[name = tensor<string, []>("op_1890"), val = tensor<int32, [1]>([1])];
            tensor<bool, []> var_1891 = const()[name = tensor<string, []>("op_1891"), val = tensor<bool, []>(true)];
            tensor<fp16, [1, 1, 1, 8]> scale_73_cast = reduce_sum(axes = var_1890, keep_dims = var_1891, x = var_1888_cast);
            tensor<fp16, []> scale_75_epsilon_0_to_fp16 = const()[name = tensor<string, []>("scale_75_epsilon_0_to_fp16"), val = tensor<fp16, []>(5.96046448e-08)];
            tensor<fp16, [1, 1, 1, 8]> scale_75_cast = rsqrt(epsilon = scale_75_epsilon_0_to_fp16, x = scale_73_cast);
            tensor<fp16, [1, 1, 1, 8]> scale_77_cast = mul(x = scale_75_cast, y = scale_75_cast);
            tensor<fp16, [1, 512, 1, 8]> x_125_cast = mul(x = x_123_cast, y = scale_77_cast);
            tensor<fp16, []> var_1897_to_fp16 = const()[name = tensor<string, []>("op_1897_to_fp16"), val = tensor<fp16, []>(-0.001953125)];
            tensor<fp16, [1, 512, 1, 8]> var_1898_cast = mul(x = x_125_cast, y = var_1897_to_fp16);
            tensor<int32, [1]> var_1900 = const()[name = tensor<string, []>("op_1900"), val = tensor<int32, [1]>([1])];
            tensor<bool, []> var_1901 = const()[name = tensor<string, []>("op_1901"), val = tensor<bool, []>(true)];
            tensor<fp16, [1, 1, 1, 8]> x_mean_25_cast = reduce_sum(axes = var_1900, keep_dims = var_1901, x = var_1898_cast);
            tensor<fp16, [1, 512, 1, 8]> x_zero_mean_25_cast = add(x = x_125_cast, y = x_mean_25_cast);
            tensor<fp16, []> var_1906_to_fp16 = const()[name = tensor<string, []>("op_1906_to_fp16"), val = tensor<fp16, []>(0.001953125)];
            tensor<fp16, [1, 512, 1, 8]> var_1907_cast = mul(x = x_zero_mean_25_cast, y = var_1906_to_fp16);
            tensor<fp16, [1, 512, 1, 8]> var_1908_cast = mul(x = var_1907_cast, y = x_zero_mean_25_cast);
            tensor<int32, [1]> var_1910 = const()[name = tensor<string, []>("op_1910"), val = tensor<int32, [1]>([1])];
            tensor<bool, []> var_1911 = const()[name = tensor<string, []>("op_1911"), val = tensor<bool, []>(true)];
            tensor<fp16, [1, 1, 1, 8]> x_var_25_cast = reduce_sum(axes = var_1910, keep_dims = var_1911, x = var_1908_cast);
            tensor<fp16, []> var_1915_to_fp16 = const()[name = tensor<string, []>("op_1915_to_fp16"), val = tensor<fp16, []>(1.00135803e-05)];
            tensor<fp16, [1, 1, 1, 8]> var_1916_cast = add(x = x_var_25_cast, y = var_1915_to_fp16);
            tensor<fp16, []> var_1917_epsilon_0_to_fp16 = const()[name = tensor<string, []>("op_1917_epsilon_0_to_fp16"), val = tensor<fp16, []>(5.96046448e-08)];
            tensor<fp16, [1, 1, 1, 8]> var_1917_cast = rsqrt(epsilon = var_1917_epsilon_0_to_fp16, x = var_1916_cast);
            tensor<fp16, [1, 512, 1, 8]> var_1918_cast = mul(x = x_zero_mean_25_cast, y = var_1917_cast);
            tensor<fp16, [512]> x_127_mean_0_to_fp16 = const()[name = tensor<string, []>("x_127_mean_0_to_fp16"), val = tensor<fp16, [512]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(13218624)))];
            tensor<fp16, [512]> x_127_variance_0_to_fp16 = const()[name = tensor<string, []>("x_127_variance_0_to_fp16"), val = tensor<fp16, [512]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(13219712)))];
            tensor<fp16, [512]> x_127_gamma_0_to_fp16 = const()[name = tensor<string, []>("x_127_gamma_0_to_fp16"), val = tensor<fp16, [512]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(13220800)))];
            tensor<fp16, [512]> x_127_beta_0_to_fp16 = const()[name = tensor<string, []>("x_127_beta_0_to_fp16"), val = tensor<fp16, [512]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(13221888)))];
            tensor<fp16, []> x_127_epsilon_0_to_fp16 = const()[name = tensor<string, []>("x_127_epsilon_0_to_fp16"), val = tensor<fp16, []>(1.00135803e-05)];
            tensor<fp16, [1, 512, 1, 8]> x_127_cast = batch_norm(beta = x_127_beta_0_to_fp16, epsilon = x_127_epsilon_0_to_fp16, gamma = x_127_gamma_0_to_fp16, mean = x_127_mean_0_to_fp16, variance = x_127_variance_0_to_fp16, x = var_1918_cast);
            tensor<int32, [2]> var_1950 = const()[name = tensor<string, []>("op_1950"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_1956 = const()[name = tensor<string, []>("op_1956"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, []> var_1961 = const()[name = tensor<string, []>("op_1961"), val = tensor<int32, []>(1)];
            tensor<string, []> ret_1_pad_type_0 = const()[name = tensor<string, []>("ret_1_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> ret_1_pad_0 = const()[name = tensor<string, []>("ret_1_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [51, 512, 1, 1]> op_1947_to_fp16_affine_quantized = constexpr_affine_dequantize()[axis = tensor<int32, []>(0), name = tensor<string, []>("op_1947_to_fp16_affine_quantized"), quantized_data = tensor<int8, [51, 512, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(13222976))), scale = tensor<fp16, [51]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(13249280))), zero_point = tensor<int8, [51]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(13249152)))];
            tensor<fp16, [51]> secondary_ctc_ctc_lo_bias_to_fp16 = const()[name = tensor<string, []>("secondary_ctc_ctc_lo_bias_to_fp16"), val = tensor<fp16, [51]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(13249472)))];
            tensor<fp16, [1, 51, 1, 8]> ret_1_cast = conv(bias = secondary_ctc_ctc_lo_bias_to_fp16, dilations = var_1956, groups = var_1961, pad = ret_1_pad_0, pad_type = ret_1_pad_type_0, strides = var_1950, weight = op_1947_to_fp16_affine_quantized, x = x_127_cast);
            tensor<int32, []> var_1967 = const()[name = tensor<string, []>("op_1967"), val = tensor<int32, []>(1)];
            tensor<fp16, [1, 51, 1, 8]> ctc_act_5_cast = softmax(axis = var_1967, x = ret_1_cast);
            tensor<int32, []> var_1971 = const()[name = tensor<string, []>("op_1971"), val = tensor<int32, []>(512)];
            tensor<int32, []> var_1974 = const()[name = tensor<string, []>("op_1974"), val = tensor<int32, []>(1)];
            tensor<int32, [2]> var_2008 = const()[name = tensor<string, []>("op_2008"), val = tensor<int32, [2]>([2, 2])];
            tensor<int32, [2]> var_2010 = const()[name = tensor<string, []>("op_2010"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> input_71_pad_type_0 = const()[name = tensor<string, []>("input_71_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> input_71_pad_0 = const()[name = tensor<string, []>("input_71_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [512, 1, 3, 3]> op_2007_to_fp16_affine_quantized = constexpr_affine_dequantize()[axis = tensor<int32, []>(0), name = tensor<string, []>("op_2007_to_fp16_affine_quantized"), quantized_data = tensor<int8, [512, 1, 3, 3]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(13249664))), scale = tensor<fp16, [512]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(13254912))), zero_point = tensor<int8, [512]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(13254336)))];
            tensor<fp16, [512]> primary_encoder_embed_conv_0_bias_to_fp16 = const()[name = tensor<string, []>("primary_encoder_embed_conv_0_bias_to_fp16"), val = tensor<fp16, [512]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(13256000)))];
            tensor<fp16, [1, 512, 39, 14]> input_71_cast = conv(bias = primary_encoder_embed_conv_0_bias_to_fp16, dilations = var_2010, groups = var_1974, pad = input_71_pad_0, pad_type = input_71_pad_type_0, strides = var_2008, weight = op_2007_to_fp16_affine_quantized, x = x_129_cast);
            tensor<fp16, [1, 512, 39, 14]> x_131_cast = relu(x = input_71_cast);
            tensor<int32, [2]> var_2015 = const()[name = tensor<string, []>("op_2015"), val = tensor<int32, [2]>([3, 3])];
            tensor<int32, [2]> var_2017 = const()[name = tensor<string, []>("op_2017"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> x_133_pad_type_0 = const()[name = tensor<string, []>("x_133_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> x_133_pad_0 = const()[name = tensor<string, []>("x_133_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [512, 1, 5, 5]> op_2014_to_fp16_affine_quantized = constexpr_affine_dequantize()[axis = tensor<int32, []>(0), name = tensor<string, []>("op_2014_to_fp16_affine_quantized"), quantized_data = tensor<int8, [512, 1, 5, 5]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(13257088))), scale = tensor<fp16, [512]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(13270528))), zero_point = tensor<int8, [512]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(13269952)))];
            tensor<fp16, [512]> primary_encoder_embed_conv_2_conv_bias_to_fp16 = const()[name = tensor<string, []>("primary_encoder_embed_conv_2_conv_bias_to_fp16"), val = tensor<fp16, [512]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(13271616)))];
            tensor<fp16, [1, 512, 12, 4]> x_133_cast = conv(bias = primary_encoder_embed_conv_2_conv_bias_to_fp16, dilations = var_2017, groups = var_1971, pad = x_133_pad_0, pad_type = x_133_pad_type_0, strides = var_2015, weight = op_2014_to_fp16_affine_quantized, x = x_131_cast);
            tensor<int32, [2]> var_2021 = const()[name = tensor<string, []>("op_2021"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_2023 = const()[name = tensor<string, []>("op_2023"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> input_73_pad_type_0 = const()[name = tensor<string, []>("input_73_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> input_73_pad_0 = const()[name = tensor<string, []>("input_73_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [512, 512, 1, 1]> op_2020_to_fp16_affine_quantized = constexpr_affine_dequantize()[axis = tensor<int32, []>(0), name = tensor<string, []>("op_2020_to_fp16_affine_quantized"), quantized_data = tensor<int8, [512, 512, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(13272704))), scale = tensor<fp16, [512]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(13535488))), zero_point = tensor<int8, [512]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(13534912)))];
            tensor<fp16, [512]> primary_encoder_embed_conv_3_conv_bias_to_fp16 = const()[name = tensor<string, []>("primary_encoder_embed_conv_3_conv_bias_to_fp16"), val = tensor<fp16, [512]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(13536576)))];
            tensor<fp16, [1, 512, 12, 4]> input_73_cast = conv(bias = primary_encoder_embed_conv_3_conv_bias_to_fp16, dilations = var_2023, groups = var_1974, pad = input_73_pad_0, pad_type = input_73_pad_type_0, strides = var_2021, weight = op_2020_to_fp16_affine_quantized, x = x_133_cast);
            tensor<fp16, [1, 512, 12, 4]> x_135_cast = relu(x = input_73_cast);
            tensor<int32, [2]> var_2029 = const()[name = tensor<string, []>("op_2029"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_2031 = const()[name = tensor<string, []>("op_2031"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> x_137_pad_type_0 = const()[name = tensor<string, []>("x_137_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> x_137_pad_0 = const()[name = tensor<string, []>("x_137_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [512, 512, 12, 1]> op_2028_to_fp16_affine_quantized = constexpr_affine_dequantize()[axis = tensor<int32, []>(0), name = tensor<string, []>("op_2028_to_fp16_affine_quantized"), quantized_data = tensor<int8, [512, 512, 12, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(13537664))), scale = tensor<fp16, [512]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(16684032))), zero_point = tensor<int8, [512]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(16683456)))];
            tensor<fp16, [512]> primary_encoder_embed_out_0_bias_to_fp16 = const()[name = tensor<string, []>("primary_encoder_embed_out_0_bias_to_fp16"), val = tensor<fp16, [512]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(16685120)))];
            tensor<fp16, [1, 512, 1, 4]> x_137_cast = conv(bias = primary_encoder_embed_out_0_bias_to_fp16, dilations = var_2031, groups = var_1974, pad = x_137_pad_0, pad_type = x_137_pad_type_0, strides = var_2029, weight = op_2028_to_fp16_affine_quantized, x = x_135_cast);
            tensor<int32, []> var_2038 = const()[name = tensor<string, []>("op_2038"), val = tensor<int32, []>(512)];
            tensor<int32, []> var_2045 = const()[name = tensor<string, []>("op_2045"), val = tensor<int32, []>(2)];
            tensor<int32, []> var_2048 = const()[name = tensor<string, []>("op_2048"), val = tensor<int32, []>(-1)];
            tensor<bool, []> var_2050 = const()[name = tensor<string, []>("op_2050"), val = tensor<bool, []>(true)];
            tensor<int32, []> var_2051 = const()[name = tensor<string, []>("op_2051"), val = tensor<int32, []>(1)];
            tensor<fp16, [1, 512, 1, 4]> var_2098_cast = abs(x = x_137_cast);
            tensor<fp16, []> var_2099_to_fp16 = const()[name = tensor<string, []>("op_2099_to_fp16"), val = tensor<fp16, []>(0.001953125)];
            tensor<fp16, [1, 512, 1, 4]> var_2100_cast = mul(x = var_2098_cast, y = var_2099_to_fp16);
            tensor<int32, [1]> var_2101 = const()[name = tensor<string, []>("op_2101"), val = tensor<int32, [1]>([1])];
            tensor<fp16, [1, 1, 1, 4]> scale_79_cast = reduce_sum(axes = var_2101, keep_dims = var_2050, x = var_2100_cast);
            tensor<fp16, []> scale_81_epsilon_0_to_fp16 = const()[name = tensor<string, []>("scale_81_epsilon_0_to_fp16"), val = tensor<fp16, []>(5.96046448e-08)];
            tensor<fp16, [1, 1, 1, 4]> scale_81_cast = rsqrt(epsilon = scale_81_epsilon_0_to_fp16, x = scale_79_cast);
            tensor<fp16, [1, 1, 1, 4]> scale_83_cast = mul(x = scale_81_cast, y = scale_81_cast);
            tensor<fp16, [1, 512, 1, 4]> x_139_cast = mul(x = x_137_cast, y = scale_83_cast);
            tensor<fp16, []> var_2106_to_fp16 = const()[name = tensor<string, []>("op_2106_to_fp16"), val = tensor<fp16, []>(-0.001953125)];
            tensor<fp16, [1, 512, 1, 4]> var_2107_cast = mul(x = x_139_cast, y = var_2106_to_fp16);
            tensor<int32, [1]> var_2108 = const()[name = tensor<string, []>("op_2108"), val = tensor<int32, [1]>([1])];
            tensor<fp16, [1, 1, 1, 4]> x_mean_27_cast = reduce_sum(axes = var_2108, keep_dims = var_2050, x = var_2107_cast);
            tensor<fp16, [1, 512, 1, 4]> x_zero_mean_27_cast = add(x = x_139_cast, y = x_mean_27_cast);
            tensor<fp16, []> var_2111_to_fp16 = const()[name = tensor<string, []>("op_2111_to_fp16"), val = tensor<fp16, []>(0.001953125)];
            tensor<fp16, [1, 512, 1, 4]> var_2112_cast = mul(x = x_zero_mean_27_cast, y = var_2111_to_fp16);
            tensor<fp16, [1, 512, 1, 4]> var_2113_cast = mul(x = var_2112_cast, y = x_zero_mean_27_cast);
            tensor<int32, [1]> var_2114 = const()[name = tensor<string, []>("op_2114"), val = tensor<int32, [1]>([1])];
            tensor<fp16, [1, 1, 1, 4]> x_var_27_cast = reduce_sum(axes = var_2114, keep_dims = var_2050, x = var_2113_cast);
            tensor<fp16, []> var_2116_to_fp16 = const()[name = tensor<string, []>("op_2116_to_fp16"), val = tensor<fp16, []>(1.00135803e-05)];
            tensor<fp16, [1, 1, 1, 4]> var_2117_cast = add(x = x_var_27_cast, y = var_2116_to_fp16);
            tensor<fp16, []> var_2118_epsilon_0_to_fp16 = const()[name = tensor<string, []>("op_2118_epsilon_0_to_fp16"), val = tensor<fp16, []>(5.96046448e-08)];
            tensor<fp16, [1, 1, 1, 4]> var_2118_cast = rsqrt(epsilon = var_2118_epsilon_0_to_fp16, x = var_2117_cast);
            tensor<fp16, [1, 512, 1, 4]> var_2119_cast = mul(x = x_zero_mean_27_cast, y = var_2118_cast);
            tensor<fp16, [512]> x_141_mean_0_to_fp16 = const()[name = tensor<string, []>("x_141_mean_0_to_fp16"), val = tensor<fp16, [512]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(16686208)))];
            tensor<fp16, [512]> x_141_variance_0_to_fp16 = const()[name = tensor<string, []>("x_141_variance_0_to_fp16"), val = tensor<fp16, [512]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(16687296)))];
            tensor<fp16, [512]> x_141_gamma_0_to_fp16 = const()[name = tensor<string, []>("x_141_gamma_0_to_fp16"), val = tensor<fp16, [512]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(16688384)))];
            tensor<fp16, [512]> x_141_beta_0_to_fp16 = const()[name = tensor<string, []>("x_141_beta_0_to_fp16"), val = tensor<fp16, [512]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(16689472)))];
            tensor<fp16, []> x_141_epsilon_0_to_fp16 = const()[name = tensor<string, []>("x_141_epsilon_0_to_fp16"), val = tensor<fp16, []>(1.00135803e-05)];
            tensor<fp16, [1, 512, 1, 4]> x_141_cast = batch_norm(beta = x_141_beta_0_to_fp16, epsilon = x_141_epsilon_0_to_fp16, gamma = x_141_gamma_0_to_fp16, mean = x_141_mean_0_to_fp16, variance = x_141_variance_0_to_fp16, x = var_2119_cast);
            tensor<int32, [2]> var_2130 = const()[name = tensor<string, []>("op_2130"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_2132 = const()[name = tensor<string, []>("op_2132"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> input_75_pad_type_0 = const()[name = tensor<string, []>("input_75_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> input_75_pad_0 = const()[name = tensor<string, []>("input_75_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [2048, 512, 1, 1]> op_2129_to_fp16_affine_quantized = constexpr_affine_dequantize()[axis = tensor<int32, []>(0), name = tensor<string, []>("op_2129_to_fp16_affine_quantized"), quantized_data = tensor<int8, [2048, 512, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(16690560))), scale = tensor<fp16, [2048]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(17741312))), zero_point = tensor<int8, [2048]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(17739200)))];
            tensor<fp16, [2048]> primary_encoder_encoders_0_feed_forward_macaron_w_1_bias_to_fp16 = const()[name = tensor<string, []>("primary_encoder_encoders_0_feed_forward_macaron_w_1_bias_to_fp16"), val = tensor<fp16, [2048]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(17745472)))];
            tensor<fp16, [1, 2048, 1, 4]> input_75_cast = conv(bias = primary_encoder_encoders_0_feed_forward_macaron_w_1_bias_to_fp16, dilations = var_2132, groups = var_2051, pad = input_75_pad_0, pad_type = input_75_pad_type_0, strides = var_2130, weight = op_2129_to_fp16_affine_quantized, x = x_141_cast);
            tensor<fp16, [1, 2048, 1, 4]> input_77_cast = silu(x = input_75_cast);
            tensor<int32, [2]> var_2141 = const()[name = tensor<string, []>("op_2141"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_2143 = const()[name = tensor<string, []>("op_2143"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> input_79_pad_type_0 = const()[name = tensor<string, []>("input_79_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> input_79_pad_0 = const()[name = tensor<string, []>("input_79_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [512, 2048, 1, 1]> op_2148_weight_0_to_fp16_affine_quantized = constexpr_affine_dequantize()[axis = tensor<int32, []>(0), name = tensor<string, []>("op_2148_weight_0_to_fp16_affine_quantized"), quantized_data = tensor<int8, [512, 2048, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(17749632))), scale = tensor<fp16, [512]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(18798848))), zero_point = tensor<int8, [512]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(18798272)))];
            tensor<fp16, [512]> var_2148_bias_0_to_fp16 = const()[name = tensor<string, []>("op_2148_bias_0_to_fp16"), val = tensor<fp16, [512]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(18799936)))];
            tensor<fp16, [1, 512, 1, 4]> var_2148_cast = conv(bias = var_2148_bias_0_to_fp16, dilations = var_2143, groups = var_2051, pad = input_79_pad_0, pad_type = input_79_pad_type_0, strides = var_2141, weight = op_2148_weight_0_to_fp16_affine_quantized, x = input_77_cast);
            tensor<fp16, [1, 512, 1, 4]> x_147_cast = add(x = x_137_cast, y = var_2148_cast);
            tensor<fp16, [1, 512, 1, 4]> var_2150_cast = abs(x = x_147_cast);
            tensor<fp16, []> var_2151_to_fp16 = const()[name = tensor<string, []>("op_2151_to_fp16"), val = tensor<fp16, []>(0.001953125)];
            tensor<fp16, [1, 512, 1, 4]> var_2152_cast = mul(x = var_2150_cast, y = var_2151_to_fp16);
            tensor<int32, [1]> var_2153 = const()[name = tensor<string, []>("op_2153"), val = tensor<int32, [1]>([1])];
            tensor<fp16, [1, 1, 1, 4]> scale_85_cast = reduce_sum(axes = var_2153, keep_dims = var_2050, x = var_2152_cast);
            tensor<fp16, []> scale_87_epsilon_0_to_fp16 = const()[name = tensor<string, []>("scale_87_epsilon_0_to_fp16"), val = tensor<fp16, []>(5.96046448e-08)];
            tensor<fp16, [1, 1, 1, 4]> scale_87_cast = rsqrt(epsilon = scale_87_epsilon_0_to_fp16, x = scale_85_cast);
            tensor<fp16, [1, 1, 1, 4]> scale_89_cast = mul(x = scale_87_cast, y = scale_87_cast);
            tensor<fp16, [1, 512, 1, 4]> x_149_cast = mul(x = x_147_cast, y = scale_89_cast);
            tensor<fp16, []> var_2158_to_fp16 = const()[name = tensor<string, []>("op_2158_to_fp16"), val = tensor<fp16, []>(-0.001953125)];
            tensor<fp16, [1, 512, 1, 4]> var_2159_cast = mul(x = x_149_cast, y = var_2158_to_fp16);
            tensor<int32, [1]> var_2160 = const()[name = tensor<string, []>("op_2160"), val = tensor<int32, [1]>([1])];
            tensor<fp16, [1, 1, 1, 4]> x_mean_29_cast = reduce_sum(axes = var_2160, keep_dims = var_2050, x = var_2159_cast);
            tensor<fp16, [1, 512, 1, 4]> x_zero_mean_29_cast = add(x = x_149_cast, y = x_mean_29_cast);
            tensor<fp16, []> var_2163_to_fp16 = const()[name = tensor<string, []>("op_2163_to_fp16"), val = tensor<fp16, []>(0.001953125)];
            tensor<fp16, [1, 512, 1, 4]> var_2164_cast = mul(x = x_zero_mean_29_cast, y = var_2163_to_fp16);
            tensor<fp16, [1, 512, 1, 4]> var_2165_cast = mul(x = var_2164_cast, y = x_zero_mean_29_cast);
            tensor<int32, [1]> var_2166 = const()[name = tensor<string, []>("op_2166"), val = tensor<int32, [1]>([1])];
            tensor<fp16, [1, 1, 1, 4]> x_var_29_cast = reduce_sum(axes = var_2166, keep_dims = var_2050, x = var_2165_cast);
            tensor<fp16, []> var_2168_to_fp16 = const()[name = tensor<string, []>("op_2168_to_fp16"), val = tensor<fp16, []>(1.00135803e-05)];
            tensor<fp16, [1, 1, 1, 4]> var_2169_cast = add(x = x_var_29_cast, y = var_2168_to_fp16);
            tensor<fp16, []> var_2170_epsilon_0_to_fp16 = const()[name = tensor<string, []>("op_2170_epsilon_0_to_fp16"), val = tensor<fp16, []>(5.96046448e-08)];
            tensor<fp16, [1, 1, 1, 4]> var_2170_cast = rsqrt(epsilon = var_2170_epsilon_0_to_fp16, x = var_2169_cast);
            tensor<fp16, [1, 512, 1, 4]> var_2171_cast = mul(x = x_zero_mean_29_cast, y = var_2170_cast);
            tensor<fp16, [512]> x_151_mean_0_to_fp16 = const()[name = tensor<string, []>("x_151_mean_0_to_fp16"), val = tensor<fp16, [512]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(18801024)))];
            tensor<fp16, [512]> x_151_variance_0_to_fp16 = const()[name = tensor<string, []>("x_151_variance_0_to_fp16"), val = tensor<fp16, [512]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(18802112)))];
            tensor<fp16, [512]> x_151_gamma_0_to_fp16 = const()[name = tensor<string, []>("x_151_gamma_0_to_fp16"), val = tensor<fp16, [512]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(18803200)))];
            tensor<fp16, [512]> x_151_beta_0_to_fp16 = const()[name = tensor<string, []>("x_151_beta_0_to_fp16"), val = tensor<fp16, [512]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(18804288)))];
            tensor<fp16, []> x_151_epsilon_0_to_fp16 = const()[name = tensor<string, []>("x_151_epsilon_0_to_fp16"), val = tensor<fp16, []>(1.00135803e-05)];
            tensor<fp16, [1, 512, 1, 4]> x_151_cast = batch_norm(beta = x_151_beta_0_to_fp16, epsilon = x_151_epsilon_0_to_fp16, gamma = x_151_gamma_0_to_fp16, mean = x_151_mean_0_to_fp16, variance = x_151_variance_0_to_fp16, x = var_2171_cast);
            tensor<int32, [2]> var_2202 = const()[name = tensor<string, []>("op_2202"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_2204 = const()[name = tensor<string, []>("op_2204"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> y_9_pad_type_0 = const()[name = tensor<string, []>("y_9_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> y_9_pad_0 = const()[name = tensor<string, []>("y_9_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [512, 512, 1, 1]> op_2208_weight_0_to_fp16_affine_quantized = constexpr_affine_dequantize()[axis = tensor<int32, []>(0), name = tensor<string, []>("op_2208_weight_0_to_fp16_affine_quantized"), quantized_data = tensor<int8, [512, 512, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(18805376))), scale = tensor<fp16, [512]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(19068160))), zero_point = tensor<int8, [512]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(19067584)))];
            tensor<fp16, [512]> var_2208_bias_0_to_fp16 = const()[name = tensor<string, []>("op_2208_bias_0_to_fp16"), val = tensor<fp16, [512]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(19069248)))];
            tensor<fp16, [1, 512, 1, 4]> var_2208_cast = conv(bias = var_2208_bias_0_to_fp16, dilations = var_2204, groups = var_2051, pad = y_9_pad_0, pad_type = y_9_pad_type_0, strides = var_2202, weight = op_2208_weight_0_to_fp16_affine_quantized, x = x_151_cast);
            tensor<int32, [8]> tile_20 = const()[name = tensor<string, []>("tile_20"), val = tensor<int32, [8]>([64, 64, 64, 64, 64, 64, 64, 64])];
            tensor<int32, []> var_2209_axis_0 = const()[name = tensor<string, []>("op_2209_axis_0"), val = tensor<int32, []>(1)];
            tensor<fp16, [1, 64, 1, 4]> var_2209_cast_0, tensor<fp16, [1, 64, 1, 4]> var_2209_cast_1, tensor<fp16, [1, 64, 1, 4]> var_2209_cast_2, tensor<fp16, [1, 64, 1, 4]> var_2209_cast_3, tensor<fp16, [1, 64, 1, 4]> var_2209_cast_4, tensor<fp16, [1, 64, 1, 4]> var_2209_cast_5, tensor<fp16, [1, 64, 1, 4]> var_2209_cast_6, tensor<fp16, [1, 64, 1, 4]> var_2209_cast_7 = split(axis = var_2209_axis_0, split_sizes = tile_20, x = var_2208_cast);
            tensor<int32, [2]> var_2222 = const()[name = tensor<string, []>("op_2222"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_2224 = const()[name = tensor<string, []>("op_2224"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> var_2226_pad_type_0 = const()[name = tensor<string, []>("op_2226_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> var_2226_pad_0 = const()[name = tensor<string, []>("op_2226_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [512, 512, 1, 1]> op_2221_to_fp16_affine_quantized = constexpr_affine_dequantize()[axis = tensor<int32, []>(0), name = tensor<string, []>("op_2221_to_fp16_affine_quantized"), quantized_data = tensor<int8, [512, 512, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(19070336))), scale = tensor<fp16, [512]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(19333120))), zero_point = tensor<int8, [512]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(19332544)))];
            tensor<fp16, [512]> primary_encoder_encoders_0_self_attn_linear_v_bias_to_fp16 = const()[name = tensor<string, []>("primary_encoder_encoders_0_self_attn_linear_v_bias_to_fp16"), val = tensor<fp16, [512]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(19334208)))];
            tensor<fp16, [1, 512, 1, 4]> var_2226_cast = conv(bias = primary_encoder_encoders_0_self_attn_linear_v_bias_to_fp16, dilations = var_2224, groups = var_2051, pad = var_2226_pad_0, pad_type = var_2226_pad_type_0, strides = var_2222, weight = op_2221_to_fp16_affine_quantized, x = x_151_cast);
            tensor<int32, [8]> tile_21 = const()[name = tensor<string, []>("tile_21"), val = tensor<int32, [8]>([64, 64, 64, 64, 64, 64, 64, 64])];
            tensor<int32, []> var_2227_axis_0 = const()[name = tensor<string, []>("op_2227_axis_0"), val = tensor<int32, []>(1)];
            tensor<fp16, [1, 64, 1, 4]> var_2227_cast_0, tensor<fp16, [1, 64, 1, 4]> var_2227_cast_1, tensor<fp16, [1, 64, 1, 4]> var_2227_cast_2, tensor<fp16, [1, 64, 1, 4]> var_2227_cast_3, tensor<fp16, [1, 64, 1, 4]> var_2227_cast_4, tensor<fp16, [1, 64, 1, 4]> var_2227_cast_5, tensor<fp16, [1, 64, 1, 4]> var_2227_cast_6, tensor<fp16, [1, 64, 1, 4]> var_2227_cast_7 = split(axis = var_2227_axis_0, split_sizes = tile_21, x = var_2226_cast);
            tensor<int32, [4]> var_2236_perm_0 = const()[name = tensor<string, []>("op_2236_perm_0"), val = tensor<int32, [4]>([0, 3, 2, 1])];
            tensor<string, []> var_2243_equation_0 = const()[name = tensor<string, []>("op_2243_equation_0"), val = tensor<string, []>("bnhd,bdhm->bnhm")];
            tensor<fp16, [1, 512, 1, 512]> op_2240_to_fp16_affine_quantized = constexpr_affine_dequantize()[axis = tensor<int32, []>(0), name = tensor<string, []>("op_2240_to_fp16_affine_quantized"), quantized_data = tensor<int8, [1, 512, 1, 512]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(19335296))), scale = tensor<fp16, []>(0.048614502), zero_point = tensor<int8, []>(0)];
            tensor<fp16, [1, 4, 1, 512]> transpose_19 = transpose(perm = var_2236_perm_0, x = x_151_cast);
            tensor<fp16, [1, 4, 1, 512]> var_2243_cast = einsum(equation = var_2243_equation_0, values = (transpose_19, op_2240_to_fp16_affine_quantized));
            tensor<fp16, [512]> primary_encoder_encoders_0_self_attn_linear_k_bias_to_fp16 = const()[name = tensor<string, []>("primary_encoder_encoders_0_self_attn_linear_k_bias_to_fp16"), val = tensor<fp16, [512]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(19597504)))];
            tensor<fp16, [1, 4, 1, 512]> var_2244_cast = add(x = var_2243_cast, y = primary_encoder_encoders_0_self_attn_linear_k_bias_to_fp16);
            tensor<int32, [8]> tile_22 = const()[name = tensor<string, []>("tile_22"), val = tensor<int32, [8]>([64, 64, 64, 64, 64, 64, 64, 64])];
            tensor<int32, []> var_2245_axis_0 = const()[name = tensor<string, []>("op_2245_axis_0"), val = tensor<int32, []>(-1)];
            tensor<fp16, [1, 4, 1, 64]> var_2245_cast_0, tensor<fp16, [1, 4, 1, 64]> var_2245_cast_1, tensor<fp16, [1, 4, 1, 64]> var_2245_cast_2, tensor<fp16, [1, 4, 1, 64]> var_2245_cast_3, tensor<fp16, [1, 4, 1, 64]> var_2245_cast_4, tensor<fp16, [1, 4, 1, 64]> var_2245_cast_5, tensor<fp16, [1, 4, 1, 64]> var_2245_cast_6, tensor<fp16, [1, 4, 1, 64]> var_2245_cast_7 = split(axis = var_2245_axis_0, split_sizes = tile_22, x = var_2244_cast);
            tensor<int32, [8]> tile_23 = const()[name = tensor<string, []>("tile_23"), val = tensor<int32, [8]>([1, 1, 1, 1, 1, 1, 1, 1])];
            tensor<int32, []> var_2255_axis_0 = const()[name = tensor<string, []>("op_2255_axis_0"), val = tensor<int32, []>(2)];
            tensor<fp16, [1, 128, 1, 64]> var_2255_cast_0, tensor<fp16, [1, 128, 1, 64]> var_2255_cast_1, tensor<fp16, [1, 128, 1, 64]> var_2255_cast_2, tensor<fp16, [1, 128, 1, 64]> var_2255_cast_3, tensor<fp16, [1, 128, 1, 64]> var_2255_cast_4, tensor<fp16, [1, 128, 1, 64]> var_2255_cast_5, tensor<fp16, [1, 128, 1, 64]> var_2255_cast_6, tensor<fp16, [1, 128, 1, 64]> var_2255_cast_7 = split(axis = var_2255_axis_0, split_sizes = tile_23, x = var_316_cast_0);
            tensor<int32, [8]> tile_24 = const()[name = tensor<string, []>("tile_24"), val = tensor<int32, [8]>([1, 1, 1, 1, 1, 1, 1, 1])];
            tensor<int32, []> var_2264_axis_0 = const()[name = tensor<string, []>("op_2264_axis_0"), val = tensor<int32, []>(2)];
            tensor<fp16, [1, 64, 1, 128]> var_2264_cast_0, tensor<fp16, [1, 64, 1, 128]> var_2264_cast_1, tensor<fp16, [1, 64, 1, 128]> var_2264_cast_2, tensor<fp16, [1, 64, 1, 128]> var_2264_cast_3, tensor<fp16, [1, 64, 1, 128]> var_2264_cast_4, tensor<fp16, [1, 64, 1, 128]> var_2264_cast_5, tensor<fp16, [1, 64, 1, 128]> var_2264_cast_6, tensor<fp16, [1, 64, 1, 128]> var_2264_cast_7 = split(axis = var_2264_axis_0, split_sizes = tile_24, x = var_321_cast_0);
            tensor<bool, []> var_2274_interleave_0 = const()[name = tensor<string, []>("op_2274_interleave_0"), val = tensor<bool, []>(false)];
            tensor<fp16, [1, 132, 1, 64]> var_2274_cast = concat(axis = var_2051, interleave = var_2274_interleave_0, values = (var_2255_cast_0, var_2245_cast_0));
            tensor<int32, [4]> var_2276_begin_0 = const()[name = tensor<string, []>("op_2276_begin_0"), val = tensor<int32, [4]>([0, 4, 0, 0])];
            tensor<int32, [4]> var_2276_end_0 = const()[name = tensor<string, []>("op_2276_end_0"), val = tensor<int32, [4]>([1, 132, 1, 64])];
            tensor<bool, [4]> var_2276_end_mask_0 = const()[name = tensor<string, []>("op_2276_end_mask_0"), val = tensor<bool, [4]>([true, true, true, true])];
            tensor<fp16, [1, 128, 1, 64]> var_2276_cast = slice_by_index(begin = var_2276_begin_0, end = var_2276_end_0, end_mask = var_2276_end_mask_0, x = var_2274_cast);
            tensor<bool, []> var_2280_interleave_0 = const()[name = tensor<string, []>("op_2280_interleave_0"), val = tensor<bool, []>(false)];
            tensor<fp16, [1, 132, 1, 64]> var_2280_cast = concat(axis = var_2051, interleave = var_2280_interleave_0, values = (var_2255_cast_1, var_2245_cast_1));
            tensor<int32, [4]> var_2282_begin_0 = const()[name = tensor<string, []>("op_2282_begin_0"), val = tensor<int32, [4]>([0, 4, 0, 0])];
            tensor<int32, [4]> var_2282_end_0 = const()[name = tensor<string, []>("op_2282_end_0"), val = tensor<int32, [4]>([1, 132, 1, 64])];
            tensor<bool, [4]> var_2282_end_mask_0 = const()[name = tensor<string, []>("op_2282_end_mask_0"), val = tensor<bool, [4]>([true, true, true, true])];
            tensor<fp16, [1, 128, 1, 64]> var_2282_cast = slice_by_index(begin = var_2282_begin_0, end = var_2282_end_0, end_mask = var_2282_end_mask_0, x = var_2280_cast);
            tensor<bool, []> var_2286_interleave_0 = const()[name = tensor<string, []>("op_2286_interleave_0"), val = tensor<bool, []>(false)];
            tensor<fp16, [1, 132, 1, 64]> var_2286_cast = concat(axis = var_2051, interleave = var_2286_interleave_0, values = (var_2255_cast_2, var_2245_cast_2));
            tensor<int32, [4]> var_2288_begin_0 = const()[name = tensor<string, []>("op_2288_begin_0"), val = tensor<int32, [4]>([0, 4, 0, 0])];
            tensor<int32, [4]> var_2288_end_0 = const()[name = tensor<string, []>("op_2288_end_0"), val = tensor<int32, [4]>([1, 132, 1, 64])];
            tensor<bool, [4]> var_2288_end_mask_0 = const()[name = tensor<string, []>("op_2288_end_mask_0"), val = tensor<bool, [4]>([true, true, true, true])];
            tensor<fp16, [1, 128, 1, 64]> var_2288_cast = slice_by_index(begin = var_2288_begin_0, end = var_2288_end_0, end_mask = var_2288_end_mask_0, x = var_2286_cast);
            tensor<bool, []> var_2292_interleave_0 = const()[name = tensor<string, []>("op_2292_interleave_0"), val = tensor<bool, []>(false)];
            tensor<fp16, [1, 132, 1, 64]> var_2292_cast = concat(axis = var_2051, interleave = var_2292_interleave_0, values = (var_2255_cast_3, var_2245_cast_3));
            tensor<int32, [4]> var_2294_begin_0 = const()[name = tensor<string, []>("op_2294_begin_0"), val = tensor<int32, [4]>([0, 4, 0, 0])];
            tensor<int32, [4]> var_2294_end_0 = const()[name = tensor<string, []>("op_2294_end_0"), val = tensor<int32, [4]>([1, 132, 1, 64])];
            tensor<bool, [4]> var_2294_end_mask_0 = const()[name = tensor<string, []>("op_2294_end_mask_0"), val = tensor<bool, [4]>([true, true, true, true])];
            tensor<fp16, [1, 128, 1, 64]> var_2294_cast = slice_by_index(begin = var_2294_begin_0, end = var_2294_end_0, end_mask = var_2294_end_mask_0, x = var_2292_cast);
            tensor<bool, []> var_2298_interleave_0 = const()[name = tensor<string, []>("op_2298_interleave_0"), val = tensor<bool, []>(false)];
            tensor<fp16, [1, 132, 1, 64]> var_2298_cast = concat(axis = var_2051, interleave = var_2298_interleave_0, values = (var_2255_cast_4, var_2245_cast_4));
            tensor<int32, [4]> var_2300_begin_0 = const()[name = tensor<string, []>("op_2300_begin_0"), val = tensor<int32, [4]>([0, 4, 0, 0])];
            tensor<int32, [4]> var_2300_end_0 = const()[name = tensor<string, []>("op_2300_end_0"), val = tensor<int32, [4]>([1, 132, 1, 64])];
            tensor<bool, [4]> var_2300_end_mask_0 = const()[name = tensor<string, []>("op_2300_end_mask_0"), val = tensor<bool, [4]>([true, true, true, true])];
            tensor<fp16, [1, 128, 1, 64]> var_2300_cast = slice_by_index(begin = var_2300_begin_0, end = var_2300_end_0, end_mask = var_2300_end_mask_0, x = var_2298_cast);
            tensor<bool, []> var_2304_interleave_0 = const()[name = tensor<string, []>("op_2304_interleave_0"), val = tensor<bool, []>(false)];
            tensor<fp16, [1, 132, 1, 64]> var_2304_cast = concat(axis = var_2051, interleave = var_2304_interleave_0, values = (var_2255_cast_5, var_2245_cast_5));
            tensor<int32, [4]> var_2306_begin_0 = const()[name = tensor<string, []>("op_2306_begin_0"), val = tensor<int32, [4]>([0, 4, 0, 0])];
            tensor<int32, [4]> var_2306_end_0 = const()[name = tensor<string, []>("op_2306_end_0"), val = tensor<int32, [4]>([1, 132, 1, 64])];
            tensor<bool, [4]> var_2306_end_mask_0 = const()[name = tensor<string, []>("op_2306_end_mask_0"), val = tensor<bool, [4]>([true, true, true, true])];
            tensor<fp16, [1, 128, 1, 64]> var_2306_cast = slice_by_index(begin = var_2306_begin_0, end = var_2306_end_0, end_mask = var_2306_end_mask_0, x = var_2304_cast);
            tensor<bool, []> var_2310_interleave_0 = const()[name = tensor<string, []>("op_2310_interleave_0"), val = tensor<bool, []>(false)];
            tensor<fp16, [1, 132, 1, 64]> var_2310_cast = concat(axis = var_2051, interleave = var_2310_interleave_0, values = (var_2255_cast_6, var_2245_cast_6));
            tensor<int32, [4]> var_2312_begin_0 = const()[name = tensor<string, []>("op_2312_begin_0"), val = tensor<int32, [4]>([0, 4, 0, 0])];
            tensor<int32, [4]> var_2312_end_0 = const()[name = tensor<string, []>("op_2312_end_0"), val = tensor<int32, [4]>([1, 132, 1, 64])];
            tensor<bool, [4]> var_2312_end_mask_0 = const()[name = tensor<string, []>("op_2312_end_mask_0"), val = tensor<bool, [4]>([true, true, true, true])];
            tensor<fp16, [1, 128, 1, 64]> var_2312_cast = slice_by_index(begin = var_2312_begin_0, end = var_2312_end_0, end_mask = var_2312_end_mask_0, x = var_2310_cast);
            tensor<bool, []> var_2316_interleave_0 = const()[name = tensor<string, []>("op_2316_interleave_0"), val = tensor<bool, []>(false)];
            tensor<fp16, [1, 132, 1, 64]> var_2316_cast = concat(axis = var_2051, interleave = var_2316_interleave_0, values = (var_2255_cast_7, var_2245_cast_7));
            tensor<int32, [4]> var_2318_begin_0 = const()[name = tensor<string, []>("op_2318_begin_0"), val = tensor<int32, [4]>([0, 4, 0, 0])];
            tensor<int32, [4]> var_2318_end_0 = const()[name = tensor<string, []>("op_2318_end_0"), val = tensor<int32, [4]>([1, 132, 1, 64])];
            tensor<bool, [4]> var_2318_end_mask_0 = const()[name = tensor<string, []>("op_2318_end_mask_0"), val = tensor<bool, [4]>([true, true, true, true])];
            tensor<fp16, [1, 128, 1, 64]> var_2318_cast = slice_by_index(begin = var_2318_begin_0, end = var_2318_end_0, end_mask = var_2318_end_mask_0, x = var_2316_cast);
            tensor<bool, []> var_2322_interleave_0 = const()[name = tensor<string, []>("op_2322_interleave_0"), val = tensor<bool, []>(false)];
            tensor<fp16, [1, 64, 1, 132]> var_2322_cast = concat(axis = var_2048, interleave = var_2322_interleave_0, values = (var_2264_cast_0, var_2227_cast_0));
            tensor<int32, [4]> var_2326_begin_0 = const()[name = tensor<string, []>("op_2326_begin_0"), val = tensor<int32, [4]>([0, 0, 0, 4])];
            tensor<int32, [4]> var_2326_end_0 = const()[name = tensor<string, []>("op_2326_end_0"), val = tensor<int32, [4]>([1, 64, 1, 132])];
            tensor<bool, [4]> var_2326_end_mask_0 = const()[name = tensor<string, []>("op_2326_end_mask_0"), val = tensor<bool, [4]>([true, true, true, true])];
            tensor<fp16, [1, 64, 1, 128]> var_2326_cast = slice_by_index(begin = var_2326_begin_0, end = var_2326_end_0, end_mask = var_2326_end_mask_0, x = var_2322_cast);
            tensor<bool, []> var_2328_interleave_0 = const()[name = tensor<string, []>("op_2328_interleave_0"), val = tensor<bool, []>(false)];
            tensor<fp16, [1, 64, 1, 132]> var_2328_cast = concat(axis = var_2048, interleave = var_2328_interleave_0, values = (var_2264_cast_1, var_2227_cast_1));
            tensor<int32, [4]> var_2332_begin_0 = const()[name = tensor<string, []>("op_2332_begin_0"), val = tensor<int32, [4]>([0, 0, 0, 4])];
            tensor<int32, [4]> var_2332_end_0 = const()[name = tensor<string, []>("op_2332_end_0"), val = tensor<int32, [4]>([1, 64, 1, 132])];
            tensor<bool, [4]> var_2332_end_mask_0 = const()[name = tensor<string, []>("op_2332_end_mask_0"), val = tensor<bool, [4]>([true, true, true, true])];
            tensor<fp16, [1, 64, 1, 128]> var_2332_cast = slice_by_index(begin = var_2332_begin_0, end = var_2332_end_0, end_mask = var_2332_end_mask_0, x = var_2328_cast);
            tensor<bool, []> var_2334_interleave_0 = const()[name = tensor<string, []>("op_2334_interleave_0"), val = tensor<bool, []>(false)];
            tensor<fp16, [1, 64, 1, 132]> var_2334_cast = concat(axis = var_2048, interleave = var_2334_interleave_0, values = (var_2264_cast_2, var_2227_cast_2));
            tensor<int32, [4]> var_2338_begin_0 = const()[name = tensor<string, []>("op_2338_begin_0"), val = tensor<int32, [4]>([0, 0, 0, 4])];
            tensor<int32, [4]> var_2338_end_0 = const()[name = tensor<string, []>("op_2338_end_0"), val = tensor<int32, [4]>([1, 64, 1, 132])];
            tensor<bool, [4]> var_2338_end_mask_0 = const()[name = tensor<string, []>("op_2338_end_mask_0"), val = tensor<bool, [4]>([true, true, true, true])];
            tensor<fp16, [1, 64, 1, 128]> var_2338_cast = slice_by_index(begin = var_2338_begin_0, end = var_2338_end_0, end_mask = var_2338_end_mask_0, x = var_2334_cast);
            tensor<bool, []> var_2340_interleave_0 = const()[name = tensor<string, []>("op_2340_interleave_0"), val = tensor<bool, []>(false)];
            tensor<fp16, [1, 64, 1, 132]> var_2340_cast = concat(axis = var_2048, interleave = var_2340_interleave_0, values = (var_2264_cast_3, var_2227_cast_3));
            tensor<int32, [4]> var_2344_begin_0 = const()[name = tensor<string, []>("op_2344_begin_0"), val = tensor<int32, [4]>([0, 0, 0, 4])];
            tensor<int32, [4]> var_2344_end_0 = const()[name = tensor<string, []>("op_2344_end_0"), val = tensor<int32, [4]>([1, 64, 1, 132])];
            tensor<bool, [4]> var_2344_end_mask_0 = const()[name = tensor<string, []>("op_2344_end_mask_0"), val = tensor<bool, [4]>([true, true, true, true])];
            tensor<fp16, [1, 64, 1, 128]> var_2344_cast = slice_by_index(begin = var_2344_begin_0, end = var_2344_end_0, end_mask = var_2344_end_mask_0, x = var_2340_cast);
            tensor<bool, []> var_2346_interleave_0 = const()[name = tensor<string, []>("op_2346_interleave_0"), val = tensor<bool, []>(false)];
            tensor<fp16, [1, 64, 1, 132]> var_2346_cast = concat(axis = var_2048, interleave = var_2346_interleave_0, values = (var_2264_cast_4, var_2227_cast_4));
            tensor<int32, [4]> var_2350_begin_0 = const()[name = tensor<string, []>("op_2350_begin_0"), val = tensor<int32, [4]>([0, 0, 0, 4])];
            tensor<int32, [4]> var_2350_end_0 = const()[name = tensor<string, []>("op_2350_end_0"), val = tensor<int32, [4]>([1, 64, 1, 132])];
            tensor<bool, [4]> var_2350_end_mask_0 = const()[name = tensor<string, []>("op_2350_end_mask_0"), val = tensor<bool, [4]>([true, true, true, true])];
            tensor<fp16, [1, 64, 1, 128]> var_2350_cast = slice_by_index(begin = var_2350_begin_0, end = var_2350_end_0, end_mask = var_2350_end_mask_0, x = var_2346_cast);
            tensor<bool, []> var_2352_interleave_0 = const()[name = tensor<string, []>("op_2352_interleave_0"), val = tensor<bool, []>(false)];
            tensor<fp16, [1, 64, 1, 132]> var_2352_cast = concat(axis = var_2048, interleave = var_2352_interleave_0, values = (var_2264_cast_5, var_2227_cast_5));
            tensor<int32, [4]> var_2356_begin_0 = const()[name = tensor<string, []>("op_2356_begin_0"), val = tensor<int32, [4]>([0, 0, 0, 4])];
            tensor<int32, [4]> var_2356_end_0 = const()[name = tensor<string, []>("op_2356_end_0"), val = tensor<int32, [4]>([1, 64, 1, 132])];
            tensor<bool, [4]> var_2356_end_mask_0 = const()[name = tensor<string, []>("op_2356_end_mask_0"), val = tensor<bool, [4]>([true, true, true, true])];
            tensor<fp16, [1, 64, 1, 128]> var_2356_cast = slice_by_index(begin = var_2356_begin_0, end = var_2356_end_0, end_mask = var_2356_end_mask_0, x = var_2352_cast);
            tensor<bool, []> var_2358_interleave_0 = const()[name = tensor<string, []>("op_2358_interleave_0"), val = tensor<bool, []>(false)];
            tensor<fp16, [1, 64, 1, 132]> var_2358_cast = concat(axis = var_2048, interleave = var_2358_interleave_0, values = (var_2264_cast_6, var_2227_cast_6));
            tensor<int32, [4]> var_2362_begin_0 = const()[name = tensor<string, []>("op_2362_begin_0"), val = tensor<int32, [4]>([0, 0, 0, 4])];
            tensor<int32, [4]> var_2362_end_0 = const()[name = tensor<string, []>("op_2362_end_0"), val = tensor<int32, [4]>([1, 64, 1, 132])];
            tensor<bool, [4]> var_2362_end_mask_0 = const()[name = tensor<string, []>("op_2362_end_mask_0"), val = tensor<bool, [4]>([true, true, true, true])];
            tensor<fp16, [1, 64, 1, 128]> var_2362_cast = slice_by_index(begin = var_2362_begin_0, end = var_2362_end_0, end_mask = var_2362_end_mask_0, x = var_2358_cast);
            tensor<bool, []> var_2364_interleave_0 = const()[name = tensor<string, []>("op_2364_interleave_0"), val = tensor<bool, []>(false)];
            tensor<fp16, [1, 64, 1, 132]> var_2364_cast = concat(axis = var_2048, interleave = var_2364_interleave_0, values = (var_2264_cast_7, var_2227_cast_7));
            tensor<int32, [4]> var_2368_begin_0 = const()[name = tensor<string, []>("op_2368_begin_0"), val = tensor<int32, [4]>([0, 0, 0, 4])];
            tensor<int32, [4]> var_2368_end_0 = const()[name = tensor<string, []>("op_2368_end_0"), val = tensor<int32, [4]>([1, 64, 1, 132])];
            tensor<bool, [4]> var_2368_end_mask_0 = const()[name = tensor<string, []>("op_2368_end_mask_0"), val = tensor<bool, [4]>([true, true, true, true])];
            tensor<fp16, [1, 64, 1, 128]> var_2368_cast = slice_by_index(begin = var_2368_begin_0, end = var_2368_end_0, end_mask = var_2368_end_mask_0, x = var_2364_cast);
            tensor<bool, []> var_2370_interleave_0 = const()[name = tensor<string, []>("op_2370_interleave_0"), val = tensor<bool, []>(false)];
            tensor<fp16, [1, 128, 8, 64]> var_2370_cast = concat(axis = var_2045, interleave = var_2370_interleave_0, values = (var_2276_cast, var_2282_cast, var_2288_cast, var_2294_cast, var_2300_cast, var_2306_cast, var_2312_cast, var_2318_cast));
            tensor<bool, []> var_2372_interleave_0 = const()[name = tensor<string, []>("op_2372_interleave_0"), val = tensor<bool, []>(false)];
            tensor<fp16, [1, 64, 8, 128]> var_2372_cast = concat(axis = var_2045, interleave = var_2372_interleave_0, values = (var_2326_cast, var_2332_cast, var_2338_cast, var_2344_cast, var_2350_cast, var_2356_cast, var_2362_cast, var_2368_cast));
            tensor<string, []> var_2379_equation_0 = const()[name = tensor<string, []>("op_2379_equation_0"), val = tensor<string, []>("bnhd,bdhm->bnhm")];
            tensor<fp16, [1, 512, 1, 512]> op_2376_to_fp16_affine_quantized = constexpr_affine_dequantize()[axis = tensor<int32, []>(0), name = tensor<string, []>("op_2376_to_fp16_affine_quantized"), quantized_data = tensor<int8, [1, 512, 1, 512]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(19598592))), scale = tensor<fp16, []>(0.108154297), zero_point = tensor<int8, []>(0)];
            tensor<fp16, [1, 128, 1, 512]> var_2379_cast = einsum(equation = var_2379_equation_0, values = (var_265_cast, op_2376_to_fp16_affine_quantized));
            tensor<int32, [8]> tile_25 = const()[name = tensor<string, []>("tile_25"), val = tensor<int32, [8]>([64, 64, 64, 64, 64, 64, 64, 64])];
            tensor<int32, []> var_2380_axis_0 = const()[name = tensor<string, []>("op_2380_axis_0"), val = tensor<int32, []>(-1)];
            tensor<fp16, [1, 128, 1, 64]> var_2380_cast_0, tensor<fp16, [1, 128, 1, 64]> var_2380_cast_1, tensor<fp16, [1, 128, 1, 64]> var_2380_cast_2, tensor<fp16, [1, 128, 1, 64]> var_2380_cast_3, tensor<fp16, [1, 128, 1, 64]> var_2380_cast_4, tensor<fp16, [1, 128, 1, 64]> var_2380_cast_5, tensor<fp16, [1, 128, 1, 64]> var_2380_cast_6, tensor<fp16, [1, 128, 1, 64]> var_2380_cast_7 = split(axis = var_2380_axis_0, split_sizes = tile_25, x = var_2379_cast);
            tensor<fp16, [1, 64, 1, 1]> var_2401_to_fp16 = const()[name = tensor<string, []>("op_2401_to_fp16"), val = tensor<fp16, [1, 64, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(19860800)))];
            tensor<fp16, [1, 64, 1, 4]> var_2402_cast = add(x = var_2209_cast_0, y = var_2401_to_fp16);
            tensor<fp16, [1, 64, 1, 1]> var_2404_to_fp16 = const()[name = tensor<string, []>("op_2404_to_fp16"), val = tensor<fp16, [1, 64, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(19860992)))];
            tensor<fp16, [1, 64, 1, 4]> var_2405_cast = add(x = var_2209_cast_1, y = var_2404_to_fp16);
            tensor<fp16, [1, 64, 1, 1]> var_2407_to_fp16 = const()[name = tensor<string, []>("op_2407_to_fp16"), val = tensor<fp16, [1, 64, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(19861184)))];
            tensor<fp16, [1, 64, 1, 4]> var_2408_cast = add(x = var_2209_cast_2, y = var_2407_to_fp16);
            tensor<fp16, [1, 64, 1, 1]> var_2410_to_fp16 = const()[name = tensor<string, []>("op_2410_to_fp16"), val = tensor<fp16, [1, 64, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(19861376)))];
            tensor<fp16, [1, 64, 1, 4]> var_2411_cast = add(x = var_2209_cast_3, y = var_2410_to_fp16);
            tensor<fp16, [1, 64, 1, 1]> var_2413_to_fp16 = const()[name = tensor<string, []>("op_2413_to_fp16"), val = tensor<fp16, [1, 64, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(19861568)))];
            tensor<fp16, [1, 64, 1, 4]> var_2414_cast = add(x = var_2209_cast_4, y = var_2413_to_fp16);
            tensor<fp16, [1, 64, 1, 1]> var_2416_to_fp16 = const()[name = tensor<string, []>("op_2416_to_fp16"), val = tensor<fp16, [1, 64, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(19861760)))];
            tensor<fp16, [1, 64, 1, 4]> var_2417_cast = add(x = var_2209_cast_5, y = var_2416_to_fp16);
            tensor<fp16, [1, 64, 1, 1]> var_2419_to_fp16 = const()[name = tensor<string, []>("op_2419_to_fp16"), val = tensor<fp16, [1, 64, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(19861952)))];
            tensor<fp16, [1, 64, 1, 4]> var_2420_cast = add(x = var_2209_cast_6, y = var_2419_to_fp16);
            tensor<fp16, [1, 64, 1, 1]> var_2422_to_fp16 = const()[name = tensor<string, []>("op_2422_to_fp16"), val = tensor<fp16, [1, 64, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(19862144)))];
            tensor<fp16, [1, 64, 1, 4]> var_2423_cast = add(x = var_2209_cast_7, y = var_2422_to_fp16);
            tensor<fp16, [1, 64, 1, 1]> var_2436_to_fp16 = const()[name = tensor<string, []>("op_2436_to_fp16"), val = tensor<fp16, [1, 64, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(19862336)))];
            tensor<fp16, [1, 64, 1, 4]> var_2437_cast = add(x = var_2209_cast_0, y = var_2436_to_fp16);
            tensor<fp16, [1, 64, 1, 1]> var_2439_to_fp16 = const()[name = tensor<string, []>("op_2439_to_fp16"), val = tensor<fp16, [1, 64, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(19862528)))];
            tensor<fp16, [1, 64, 1, 4]> var_2440_cast = add(x = var_2209_cast_1, y = var_2439_to_fp16);
            tensor<fp16, [1, 64, 1, 1]> var_2442_to_fp16 = const()[name = tensor<string, []>("op_2442_to_fp16"), val = tensor<fp16, [1, 64, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(19862720)))];
            tensor<fp16, [1, 64, 1, 4]> var_2443_cast = add(x = var_2209_cast_2, y = var_2442_to_fp16);
            tensor<fp16, [1, 64, 1, 1]> var_2445_to_fp16 = const()[name = tensor<string, []>("op_2445_to_fp16"), val = tensor<fp16, [1, 64, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(19862912)))];
            tensor<fp16, [1, 64, 1, 4]> var_2446_cast = add(x = var_2209_cast_3, y = var_2445_to_fp16);
            tensor<fp16, [1, 64, 1, 1]> var_2448_to_fp16 = const()[name = tensor<string, []>("op_2448_to_fp16"), val = tensor<fp16, [1, 64, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(19863104)))];
            tensor<fp16, [1, 64, 1, 4]> var_2449_cast = add(x = var_2209_cast_4, y = var_2448_to_fp16);
            tensor<fp16, [1, 64, 1, 1]> var_2451_to_fp16 = const()[name = tensor<string, []>("op_2451_to_fp16"), val = tensor<fp16, [1, 64, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(19863296)))];
            tensor<fp16, [1, 64, 1, 4]> var_2452_cast = add(x = var_2209_cast_5, y = var_2451_to_fp16);
            tensor<fp16, [1, 64, 1, 1]> var_2454_to_fp16 = const()[name = tensor<string, []>("op_2454_to_fp16"), val = tensor<fp16, [1, 64, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(19863488)))];
            tensor<fp16, [1, 64, 1, 4]> var_2455_cast = add(x = var_2209_cast_6, y = var_2454_to_fp16);
            tensor<fp16, [1, 64, 1, 1]> var_2457_to_fp16 = const()[name = tensor<string, []>("op_2457_to_fp16"), val = tensor<fp16, [1, 64, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(19863680)))];
            tensor<fp16, [1, 64, 1, 4]> var_2458_cast = add(x = var_2209_cast_7, y = var_2457_to_fp16);
            tensor<string, []> ac_33_equation_0 = const()[name = tensor<string, []>("ac_33_equation_0"), val = tensor<string, []>("bnhd,bdhm->bnhm")];
            tensor<fp16, [1, 128, 1, 4]> ac_33_cast = einsum(equation = ac_33_equation_0, values = (var_2276_cast, var_2402_cast));
            tensor<string, []> ac_35_equation_0 = const()[name = tensor<string, []>("ac_35_equation_0"), val = tensor<string, []>("bnhd,bdhm->bnhm")];
            tensor<fp16, [1, 128, 1, 4]> ac_35_cast = einsum(equation = ac_35_equation_0, values = (var_2282_cast, var_2405_cast));
            tensor<string, []> ac_37_equation_0 = const()[name = tensor<string, []>("ac_37_equation_0"), val = tensor<string, []>("bnhd,bdhm->bnhm")];
            tensor<fp16, [1, 128, 1, 4]> ac_37_cast = einsum(equation = ac_37_equation_0, values = (var_2288_cast, var_2408_cast));
            tensor<string, []> ac_39_equation_0 = const()[name = tensor<string, []>("ac_39_equation_0"), val = tensor<string, []>("bnhd,bdhm->bnhm")];
            tensor<fp16, [1, 128, 1, 4]> ac_39_cast = einsum(equation = ac_39_equation_0, values = (var_2294_cast, var_2411_cast));
            tensor<string, []> ac_41_equation_0 = const()[name = tensor<string, []>("ac_41_equation_0"), val = tensor<string, []>("bnhd,bdhm->bnhm")];
            tensor<fp16, [1, 128, 1, 4]> ac_41_cast = einsum(equation = ac_41_equation_0, values = (var_2300_cast, var_2414_cast));
            tensor<string, []> ac_43_equation_0 = const()[name = tensor<string, []>("ac_43_equation_0"), val = tensor<string, []>("bnhd,bdhm->bnhm")];
            tensor<fp16, [1, 128, 1, 4]> ac_43_cast = einsum(equation = ac_43_equation_0, values = (var_2306_cast, var_2417_cast));
            tensor<string, []> ac_45_equation_0 = const()[name = tensor<string, []>("ac_45_equation_0"), val = tensor<string, []>("bnhd,bdhm->bnhm")];
            tensor<fp16, [1, 128, 1, 4]> ac_45_cast = einsum(equation = ac_45_equation_0, values = (var_2312_cast, var_2420_cast));
            tensor<string, []> ac_47_equation_0 = const()[name = tensor<string, []>("ac_47_equation_0"), val = tensor<string, []>("bnhd,bdhm->bnhm")];
            tensor<fp16, [1, 128, 1, 4]> ac_47_cast = einsum(equation = ac_47_equation_0, values = (var_2318_cast, var_2423_cast));
            tensor<string, []> bd_33_equation_0 = const()[name = tensor<string, []>("bd_33_equation_0"), val = tensor<string, []>("bnhd,bdhm->bnhm")];
            tensor<fp16, [1, 128, 1, 4]> bd_33_cast = einsum(equation = bd_33_equation_0, values = (var_2380_cast_0, var_2437_cast));
            tensor<string, []> bd_35_equation_0 = const()[name = tensor<string, []>("bd_35_equation_0"), val = tensor<string, []>("bnhd,bdhm->bnhm")];
            tensor<fp16, [1, 128, 1, 4]> bd_35_cast = einsum(equation = bd_35_equation_0, values = (var_2380_cast_1, var_2440_cast));
            tensor<string, []> bd_37_equation_0 = const()[name = tensor<string, []>("bd_37_equation_0"), val = tensor<string, []>("bnhd,bdhm->bnhm")];
            tensor<fp16, [1, 128, 1, 4]> bd_37_cast = einsum(equation = bd_37_equation_0, values = (var_2380_cast_2, var_2443_cast));
            tensor<string, []> bd_39_equation_0 = const()[name = tensor<string, []>("bd_39_equation_0"), val = tensor<string, []>("bnhd,bdhm->bnhm")];
            tensor<fp16, [1, 128, 1, 4]> bd_39_cast = einsum(equation = bd_39_equation_0, values = (var_2380_cast_3, var_2446_cast));
            tensor<string, []> bd_41_equation_0 = const()[name = tensor<string, []>("bd_41_equation_0"), val = tensor<string, []>("bnhd,bdhm->bnhm")];
            tensor<fp16, [1, 128, 1, 4]> bd_41_cast = einsum(equation = bd_41_equation_0, values = (var_2380_cast_4, var_2449_cast));
            tensor<string, []> bd_43_equation_0 = const()[name = tensor<string, []>("bd_43_equation_0"), val = tensor<string, []>("bnhd,bdhm->bnhm")];
            tensor<fp16, [1, 128, 1, 4]> bd_43_cast = einsum(equation = bd_43_equation_0, values = (var_2380_cast_5, var_2452_cast));
            tensor<string, []> bd_45_equation_0 = const()[name = tensor<string, []>("bd_45_equation_0"), val = tensor<string, []>("bnhd,bdhm->bnhm")];
            tensor<fp16, [1, 128, 1, 4]> bd_45_cast = einsum(equation = bd_45_equation_0, values = (var_2380_cast_6, var_2455_cast));
            tensor<string, []> bd_47_equation_0 = const()[name = tensor<string, []>("bd_47_equation_0"), val = tensor<string, []>("bnhd,bdhm->bnhm")];
            tensor<fp16, [1, 128, 1, 4]> bd_47_cast = einsum(equation = bd_47_equation_0, values = (var_2380_cast_7, var_2458_cast));
            tensor<fp16, []> var_2491_promoted_to_fp16 = const()[name = tensor<string, []>("op_2491_promoted_to_fp16"), val = tensor<fp16, []>(1)];
            tensor<fp16, [1, 128, 1, 1]> var_2492_cast = sub(x = mask_3_cast, y = var_2491_promoted_to_fp16);
            tensor<fp16, []> var_2493_to_fp16 = const()[name = tensor<string, []>("op_2493_to_fp16"), val = tensor<fp16, []>(32096)];
            tensor<fp16, [1, 128, 1, 1]> inf_mask_5_cast = mul(x = var_2492_cast, y = var_2493_to_fp16);
            tensor<fp16, [1, 128, 1, 4]> s_65_cast = add(x = ac_33_cast, y = bd_33_cast);
            tensor<fp16, [1, 128, 1, 4]> s_67_cast = add(x = ac_35_cast, y = bd_35_cast);
            tensor<fp16, [1, 128, 1, 4]> s_69_cast = add(x = ac_37_cast, y = bd_37_cast);
            tensor<fp16, [1, 128, 1, 4]> s_71_cast = add(x = ac_39_cast, y = bd_39_cast);
            tensor<fp16, [1, 128, 1, 4]> s_73_cast = add(x = ac_41_cast, y = bd_41_cast);
            tensor<fp16, [1, 128, 1, 4]> s_75_cast = add(x = ac_43_cast, y = bd_43_cast);
            tensor<fp16, [1, 128, 1, 4]> s_77_cast = add(x = ac_45_cast, y = bd_45_cast);
            tensor<fp16, [1, 128, 1, 4]> s_79_cast = add(x = ac_47_cast, y = bd_47_cast);
            tensor<fp16, [1, 128, 1, 4]> s_81_cast = add(x = inf_mask_5_cast, y = s_65_cast);
            tensor<fp16, [1, 128, 1, 4]> s_83_cast = add(x = inf_mask_5_cast, y = s_67_cast);
            tensor<fp16, [1, 128, 1, 4]> s_85_cast = add(x = inf_mask_5_cast, y = s_69_cast);
            tensor<fp16, [1, 128, 1, 4]> s_87_cast = add(x = inf_mask_5_cast, y = s_71_cast);
            tensor<fp16, [1, 128, 1, 4]> s_89_cast = add(x = inf_mask_5_cast, y = s_73_cast);
            tensor<fp16, [1, 128, 1, 4]> s_91_cast = add(x = inf_mask_5_cast, y = s_75_cast);
            tensor<fp16, [1, 128, 1, 4]> s_93_cast = add(x = inf_mask_5_cast, y = s_77_cast);
            tensor<fp16, [1, 128, 1, 4]> s_95_cast = add(x = inf_mask_5_cast, y = s_79_cast);
            tensor<fp16, [1, 128, 1, 4]> input_81_cast = softmax(axis = var_2051, x = s_81_cast);
            tensor<fp16, [1, 128, 1, 4]> input_83_cast = softmax(axis = var_2051, x = s_83_cast);
            tensor<fp16, [1, 128, 1, 4]> input_85_cast = softmax(axis = var_2051, x = s_85_cast);
            tensor<fp16, [1, 128, 1, 4]> input_87_cast = softmax(axis = var_2051, x = s_87_cast);
            tensor<fp16, [1, 128, 1, 4]> input_89_cast = softmax(axis = var_2051, x = s_89_cast);
            tensor<fp16, [1, 128, 1, 4]> input_91_cast = softmax(axis = var_2051, x = s_91_cast);
            tensor<fp16, [1, 128, 1, 4]> input_93_cast = softmax(axis = var_2051, x = s_93_cast);
            tensor<fp16, [1, 128, 1, 4]> input_95_cast = softmax(axis = var_2051, x = s_95_cast);
            tensor<string, []> var_2528_equation_0 = const()[name = tensor<string, []>("op_2528_equation_0"), val = tensor<string, []>("bnhd,bdhm->bnhm")];
            tensor<fp16, [1, 64, 1, 4]> var_2528_cast = einsum(equation = var_2528_equation_0, values = (var_2326_cast, input_81_cast));
            tensor<string, []> var_2530_equation_0 = const()[name = tensor<string, []>("op_2530_equation_0"), val = tensor<string, []>("bnhd,bdhm->bnhm")];
            tensor<fp16, [1, 64, 1, 4]> var_2530_cast = einsum(equation = var_2530_equation_0, values = (var_2332_cast, input_83_cast));
            tensor<string, []> var_2532_equation_0 = const()[name = tensor<string, []>("op_2532_equation_0"), val = tensor<string, []>("bnhd,bdhm->bnhm")];
            tensor<fp16, [1, 64, 1, 4]> var_2532_cast = einsum(equation = var_2532_equation_0, values = (var_2338_cast, input_85_cast));
            tensor<string, []> var_2534_equation_0 = const()[name = tensor<string, []>("op_2534_equation_0"), val = tensor<string, []>("bnhd,bdhm->bnhm")];
            tensor<fp16, [1, 64, 1, 4]> var_2534_cast = einsum(equation = var_2534_equation_0, values = (var_2344_cast, input_87_cast));
            tensor<string, []> var_2536_equation_0 = const()[name = tensor<string, []>("op_2536_equation_0"), val = tensor<string, []>("bnhd,bdhm->bnhm")];
            tensor<fp16, [1, 64, 1, 4]> var_2536_cast = einsum(equation = var_2536_equation_0, values = (var_2350_cast, input_89_cast));
            tensor<string, []> var_2538_equation_0 = const()[name = tensor<string, []>("op_2538_equation_0"), val = tensor<string, []>("bnhd,bdhm->bnhm")];
            tensor<fp16, [1, 64, 1, 4]> var_2538_cast = einsum(equation = var_2538_equation_0, values = (var_2356_cast, input_91_cast));
            tensor<string, []> var_2540_equation_0 = const()[name = tensor<string, []>("op_2540_equation_0"), val = tensor<string, []>("bnhd,bdhm->bnhm")];
            tensor<fp16, [1, 64, 1, 4]> var_2540_cast = einsum(equation = var_2540_equation_0, values = (var_2362_cast, input_93_cast));
            tensor<string, []> var_2542_equation_0 = const()[name = tensor<string, []>("op_2542_equation_0"), val = tensor<string, []>("bnhd,bdhm->bnhm")];
            tensor<fp16, [1, 64, 1, 4]> var_2542_cast = einsum(equation = var_2542_equation_0, values = (var_2368_cast, input_95_cast));
            tensor<bool, []> y_11_interleave_0 = const()[name = tensor<string, []>("y_11_interleave_0"), val = tensor<bool, []>(false)];
            tensor<fp16, [1, 512, 1, 4]> y_11_cast = concat(axis = var_2051, interleave = y_11_interleave_0, values = (var_2528_cast, var_2530_cast, var_2532_cast, var_2534_cast, var_2536_cast, var_2538_cast, var_2540_cast, var_2542_cast));
            tensor<int32, [2]> var_2549 = const()[name = tensor<string, []>("op_2549"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_2551 = const()[name = tensor<string, []>("op_2551"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> input_97_pad_type_0 = const()[name = tensor<string, []>("input_97_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> input_97_pad_0 = const()[name = tensor<string, []>("input_97_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [512, 512, 1, 1]> op_2548_to_fp16_affine_quantized = constexpr_affine_dequantize()[axis = tensor<int32, []>(0), name = tensor<string, []>("op_2548_to_fp16_affine_quantized"), quantized_data = tensor<int8, [512, 512, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(19863872))), scale = tensor<fp16, [512]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(20126656))), zero_point = tensor<int8, [512]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(20126080)))];
            tensor<fp16, [512]> primary_encoder_encoders_0_self_attn_linear_out_bias_to_fp16 = const()[name = tensor<string, []>("primary_encoder_encoders_0_self_attn_linear_out_bias_to_fp16"), val = tensor<fp16, [512]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(20127744)))];
            tensor<fp16, [1, 512, 1, 4]> input_97_cast = conv(bias = primary_encoder_encoders_0_self_attn_linear_out_bias_to_fp16, dilations = var_2551, groups = var_2051, pad = input_97_pad_0, pad_type = input_97_pad_type_0, strides = var_2549, weight = op_2548_to_fp16_affine_quantized, x = y_11_cast);
            tensor<fp16, [1, 512, 1, 4]> x_153_cast = add(x = x_147_cast, y = input_97_cast);
            tensor<fp16, [1, 512, 1, 4]> var_2568_cast = abs(x = x_153_cast);
            tensor<fp16, []> var_2569_to_fp16 = const()[name = tensor<string, []>("op_2569_to_fp16"), val = tensor<fp16, []>(0.001953125)];
            tensor<fp16, [1, 512, 1, 4]> var_2570_cast = mul(x = var_2568_cast, y = var_2569_to_fp16);
            tensor<int32, [1]> var_2571 = const()[name = tensor<string, []>("op_2571"), val = tensor<int32, [1]>([1])];
            tensor<fp16, [1, 1, 1, 4]> scale_91_cast = reduce_sum(axes = var_2571, keep_dims = var_2050, x = var_2570_cast);
            tensor<fp16, []> scale_93_epsilon_0_to_fp16 = const()[name = tensor<string, []>("scale_93_epsilon_0_to_fp16"), val = tensor<fp16, []>(5.96046448e-08)];
            tensor<fp16, [1, 1, 1, 4]> scale_93_cast = rsqrt(epsilon = scale_93_epsilon_0_to_fp16, x = scale_91_cast);
            tensor<fp16, [1, 1, 1, 4]> scale_95_cast = mul(x = scale_93_cast, y = scale_93_cast);
            tensor<fp16, [1, 512, 1, 4]> x_155_cast = mul(x = x_153_cast, y = scale_95_cast);
            tensor<fp16, []> var_2576_to_fp16 = const()[name = tensor<string, []>("op_2576_to_fp16"), val = tensor<fp16, []>(-0.001953125)];
            tensor<fp16, [1, 512, 1, 4]> var_2577_cast = mul(x = x_155_cast, y = var_2576_to_fp16);
            tensor<int32, [1]> var_2578 = const()[name = tensor<string, []>("op_2578"), val = tensor<int32, [1]>([1])];
            tensor<fp16, [1, 1, 1, 4]> x_mean_31_cast = reduce_sum(axes = var_2578, keep_dims = var_2050, x = var_2577_cast);
            tensor<fp16, [1, 512, 1, 4]> x_zero_mean_31_cast = add(x = x_155_cast, y = x_mean_31_cast);
            tensor<fp16, []> var_2581_to_fp16 = const()[name = tensor<string, []>("op_2581_to_fp16"), val = tensor<fp16, []>(0.001953125)];
            tensor<fp16, [1, 512, 1, 4]> var_2582_cast = mul(x = x_zero_mean_31_cast, y = var_2581_to_fp16);
            tensor<fp16, [1, 512, 1, 4]> var_2583_cast = mul(x = var_2582_cast, y = x_zero_mean_31_cast);
            tensor<int32, [1]> var_2584 = const()[name = tensor<string, []>("op_2584"), val = tensor<int32, [1]>([1])];
            tensor<fp16, [1, 1, 1, 4]> x_var_31_cast = reduce_sum(axes = var_2584, keep_dims = var_2050, x = var_2583_cast);
            tensor<fp16, []> var_2586_to_fp16 = const()[name = tensor<string, []>("op_2586_to_fp16"), val = tensor<fp16, []>(1.00135803e-05)];
            tensor<fp16, [1, 1, 1, 4]> var_2587_cast = add(x = x_var_31_cast, y = var_2586_to_fp16);
            tensor<fp16, []> var_2588_epsilon_0_to_fp16 = const()[name = tensor<string, []>("op_2588_epsilon_0_to_fp16"), val = tensor<fp16, []>(5.96046448e-08)];
            tensor<fp16, [1, 1, 1, 4]> var_2588_cast = rsqrt(epsilon = var_2588_epsilon_0_to_fp16, x = var_2587_cast);
            tensor<fp16, [1, 512, 1, 4]> var_2589_cast = mul(x = x_zero_mean_31_cast, y = var_2588_cast);
            tensor<fp16, [512]> x_157_mean_0_to_fp16 = const()[name = tensor<string, []>("x_157_mean_0_to_fp16"), val = tensor<fp16, [512]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(20128832)))];
            tensor<fp16, [512]> x_157_variance_0_to_fp16 = const()[name = tensor<string, []>("x_157_variance_0_to_fp16"), val = tensor<fp16, [512]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(20129920)))];
            tensor<fp16, [512]> x_157_gamma_0_to_fp16 = const()[name = tensor<string, []>("x_157_gamma_0_to_fp16"), val = tensor<fp16, [512]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(20131008)))];
            tensor<fp16, [512]> x_157_beta_0_to_fp16 = const()[name = tensor<string, []>("x_157_beta_0_to_fp16"), val = tensor<fp16, [512]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(20132096)))];
            tensor<fp16, []> x_157_epsilon_0_to_fp16 = const()[name = tensor<string, []>("x_157_epsilon_0_to_fp16"), val = tensor<fp16, []>(1.00135803e-05)];
            tensor<fp16, [1, 512, 1, 4]> x_157_cast = batch_norm(beta = x_157_beta_0_to_fp16, epsilon = x_157_epsilon_0_to_fp16, gamma = x_157_gamma_0_to_fp16, mean = x_157_mean_0_to_fp16, variance = x_157_variance_0_to_fp16, x = var_2589_cast);
            tensor<bool, []> x_159_interleave_0 = const()[name = tensor<string, []>("x_159_interleave_0"), val = tensor<bool, []>(false)];
            tensor<fp16, [1, 512, 1, 36]> x_159_cast = concat(axis = var_2048, interleave = x_159_interleave_0, values = (var_301_cast_0, x_157_cast));
            tensor<int32, [4]> x_161_begin_0 = const()[name = tensor<string, []>("x_161_begin_0"), val = tensor<int32, [4]>([0, 0, 0, 12])];
            tensor<int32, [4]> x_161_end_0 = const()[name = tensor<string, []>("x_161_end_0"), val = tensor<int32, [4]>([1, 512, 1, 36])];
            tensor<bool, [4]> x_161_end_mask_0 = const()[name = tensor<string, []>("x_161_end_mask_0"), val = tensor<bool, [4]>([true, true, true, true])];
            tensor<fp16, [1, 512, 1, 24]> x_161_cast = slice_by_index(begin = x_161_begin_0, end = x_161_end_0, end_mask = x_161_end_mask_0, x = x_159_cast);
            tensor<int32, [4]> x_163_begin_0 = const()[name = tensor<string, []>("x_163_begin_0"), val = tensor<int32, [4]>([0, 0, 0, 12])];
            tensor<int32, [4]> x_163_end_0 = const()[name = tensor<string, []>("x_163_end_0"), val = tensor<int32, [4]>([1, 512, 1, 24])];
            tensor<bool, [4]> x_163_end_mask_0 = const()[name = tensor<string, []>("x_163_end_mask_0"), val = tensor<bool, [4]>([true, true, true, true])];
            tensor<fp16, [1, 512, 1, 12]> x_163_cast = slice_by_index(begin = x_163_begin_0, end = x_163_end_0, end_mask = x_163_end_mask_0, x = x_161_cast);
            tensor<int32, [4]> x_165_begin_0 = const()[name = tensor<string, []>("x_165_begin_0"), val = tensor<int32, [4]>([0, 0, 0, 1])];
            tensor<int32, [4]> x_165_end_0 = const()[name = tensor<string, []>("x_165_end_0"), val = tensor<int32, [4]>([1, 512, 1, 12])];
            tensor<bool, [4]> x_165_end_mask_0 = const()[name = tensor<string, []>("x_165_end_mask_0"), val = tensor<bool, [4]>([true, true, true, true])];
            tensor<fp16, [1, 512, 1, 11]> x_165_cast = slice_by_index(begin = x_165_begin_0, end = x_165_end_0, end_mask = x_165_end_mask_0, x = x_163_cast);
            tensor<int32, [4]> var_2629_begin_0 = const()[name = tensor<string, []>("op_2629_begin_0"), val = tensor<int32, [4]>([0, 0, 0, -7])];
            tensor<int32, [4]> var_2629_end_0 = const()[name = tensor<string, []>("op_2629_end_0"), val = tensor<int32, [4]>([1, 512, 1, 11])];
            tensor<bool, [4]> var_2629_end_mask_0 = const()[name = tensor<string, []>("op_2629_end_mask_0"), val = tensor<bool, [4]>([true, true, true, true])];
            tensor<fp16, [1, 512, 1, 7]> var_2629_cast = slice_by_index(begin = var_2629_begin_0, end = var_2629_end_0, end_mask = var_2629_end_mask_0, x = x_165_cast);
            tensor<int32, [2]> var_2631 = const()[name = tensor<string, []>("op_2631"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_2633 = const()[name = tensor<string, []>("op_2633"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> x_167_pad_type_0 = const()[name = tensor<string, []>("x_167_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> x_167_pad_0 = const()[name = tensor<string, []>("x_167_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [1024, 512, 1, 1]> op_2630_to_fp16_affine_quantized = constexpr_affine_dequantize()[axis = tensor<int32, []>(0), name = tensor<string, []>("op_2630_to_fp16_affine_quantized"), quantized_data = tensor<int8, [1024, 512, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(20133184))), scale = tensor<fp16, [1024]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(20658624))), zero_point = tensor<int8, [1024]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(20657536)))];
            tensor<fp16, [1024]> primary_encoder_encoders_0_conv_module_pointwise_conv1_bias_to_fp16 = const()[name = tensor<string, []>("primary_encoder_encoders_0_conv_module_pointwise_conv1_bias_to_fp16"), val = tensor<fp16, [1024]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(20660736)))];
            tensor<fp16, [1, 1024, 1, 11]> x_167_cast = conv(bias = primary_encoder_encoders_0_conv_module_pointwise_conv1_bias_to_fp16, dilations = var_2633, groups = var_2051, pad = x_167_pad_0, pad_type = x_167_pad_type_0, strides = var_2631, weight = op_2630_to_fp16_affine_quantized, x = x_165_cast);
            tensor<int32, [4]> var_2642_begin_0 = const()[name = tensor<string, []>("op_2642_begin_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<int32, [4]> var_2642_end_0 = const()[name = tensor<string, []>("op_2642_end_0"), val = tensor<int32, [4]>([1, 512, 1, 11])];
            tensor<bool, [4]> var_2642_end_mask_0 = const()[name = tensor<string, []>("op_2642_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [1, 512, 1, 11]> var_2642_cast = slice_by_index(begin = var_2642_begin_0, end = var_2642_end_0, end_mask = var_2642_end_mask_0, x = x_167_cast);
            tensor<int32, [4]> var_2646_begin_0 = const()[name = tensor<string, []>("op_2646_begin_0"), val = tensor<int32, [4]>([0, 512, 0, 0])];
            tensor<int32, [4]> var_2646_end_0 = const()[name = tensor<string, []>("op_2646_end_0"), val = tensor<int32, [4]>([1, 1024, 1, 11])];
            tensor<bool, [4]> var_2646_end_mask_0 = const()[name = tensor<string, []>("op_2646_end_mask_0"), val = tensor<bool, [4]>([true, true, true, true])];
            tensor<fp16, [1, 512, 1, 11]> var_2646_cast = slice_by_index(begin = var_2646_begin_0, end = var_2646_end_0, end_mask = var_2646_end_mask_0, x = x_167_cast);
            tensor<fp16, [1, 512, 1, 11]> var_2649_cast = sigmoid(x = var_2646_cast);
            tensor<fp16, [1, 512, 1, 11]> x_169_cast = mul(x = var_2642_cast, y = var_2649_cast);
            tensor<int32, [2]> var_2652 = const()[name = tensor<string, []>("op_2652"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_2654 = const()[name = tensor<string, []>("op_2654"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> x_171_pad_type_0 = const()[name = tensor<string, []>("x_171_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> x_171_pad_0 = const()[name = tensor<string, []>("x_171_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [512, 1, 1, 8]> op_2651_to_fp16_affine_quantized = constexpr_affine_dequantize()[axis = tensor<int32, []>(0), name = tensor<string, []>("op_2651_to_fp16_affine_quantized"), quantized_data = tensor<int8, [512, 1, 1, 8]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(20662848))), scale = tensor<fp16, [512]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(20667584))), zero_point = tensor<int8, [512]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(20667008)))];
            tensor<fp16, [512]> primary_encoder_encoders_0_conv_module_depthwise_conv_bias_to_fp16 = const()[name = tensor<string, []>("primary_encoder_encoders_0_conv_module_depthwise_conv_bias_to_fp16"), val = tensor<fp16, [512]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(20668672)))];
            tensor<fp16, [1, 512, 1, 4]> x_171_cast = conv(bias = primary_encoder_encoders_0_conv_module_depthwise_conv_bias_to_fp16, dilations = var_2654, groups = var_2038, pad = x_171_pad_0, pad_type = x_171_pad_type_0, strides = var_2652, weight = op_2651_to_fp16_affine_quantized, x = x_169_cast);
            tensor<fp16, [1, 512, 1, 4]> var_2657_cast = abs(x = x_171_cast);
            tensor<fp16, []> var_2658_to_fp16 = const()[name = tensor<string, []>("op_2658_to_fp16"), val = tensor<fp16, []>(0.001953125)];
            tensor<fp16, [1, 512, 1, 4]> var_2659_cast = mul(x = var_2657_cast, y = var_2658_to_fp16);
            tensor<int32, [1]> var_2660 = const()[name = tensor<string, []>("op_2660"), val = tensor<int32, [1]>([1])];
            tensor<fp16, [1, 1, 1, 4]> scale_97_cast = reduce_sum(axes = var_2660, keep_dims = var_2050, x = var_2659_cast);
            tensor<fp16, []> scale_99_epsilon_0_to_fp16 = const()[name = tensor<string, []>("scale_99_epsilon_0_to_fp16"), val = tensor<fp16, []>(5.96046448e-08)];
            tensor<fp16, [1, 1, 1, 4]> scale_99_cast = rsqrt(epsilon = scale_99_epsilon_0_to_fp16, x = scale_97_cast);
            tensor<fp16, [1, 1, 1, 4]> scale_101_cast = mul(x = scale_99_cast, y = scale_99_cast);
            tensor<fp16, [1, 512, 1, 4]> x_173_cast = mul(x = x_171_cast, y = scale_101_cast);
            tensor<fp16, []> var_2665_to_fp16 = const()[name = tensor<string, []>("op_2665_to_fp16"), val = tensor<fp16, []>(-0.001953125)];
            tensor<fp16, [1, 512, 1, 4]> var_2666_cast = mul(x = x_173_cast, y = var_2665_to_fp16);
            tensor<int32, [1]> var_2667 = const()[name = tensor<string, []>("op_2667"), val = tensor<int32, [1]>([1])];
            tensor<fp16, [1, 1, 1, 4]> x_mean_33_cast = reduce_sum(axes = var_2667, keep_dims = var_2050, x = var_2666_cast);
            tensor<fp16, [1, 512, 1, 4]> x_zero_mean_33_cast = add(x = x_173_cast, y = x_mean_33_cast);
            tensor<fp16, []> var_2670_to_fp16 = const()[name = tensor<string, []>("op_2670_to_fp16"), val = tensor<fp16, []>(0.001953125)];
            tensor<fp16, [1, 512, 1, 4]> var_2671_cast = mul(x = x_zero_mean_33_cast, y = var_2670_to_fp16);
            tensor<fp16, [1, 512, 1, 4]> var_2672_cast = mul(x = var_2671_cast, y = x_zero_mean_33_cast);
            tensor<int32, [1]> var_2673 = const()[name = tensor<string, []>("op_2673"), val = tensor<int32, [1]>([1])];
            tensor<fp16, [1, 1, 1, 4]> x_var_33_cast = reduce_sum(axes = var_2673, keep_dims = var_2050, x = var_2672_cast);
            tensor<fp16, []> var_2675_to_fp16 = const()[name = tensor<string, []>("op_2675_to_fp16"), val = tensor<fp16, []>(1.00135803e-05)];
            tensor<fp16, [1, 1, 1, 4]> var_2676_cast = add(x = x_var_33_cast, y = var_2675_to_fp16);
            tensor<fp16, []> var_2677_epsilon_0_to_fp16 = const()[name = tensor<string, []>("op_2677_epsilon_0_to_fp16"), val = tensor<fp16, []>(5.96046448e-08)];
            tensor<fp16, [1, 1, 1, 4]> var_2677_cast = rsqrt(epsilon = var_2677_epsilon_0_to_fp16, x = var_2676_cast);
            tensor<fp16, [1, 512, 1, 4]> var_2678_cast = mul(x = x_zero_mean_33_cast, y = var_2677_cast);
            tensor<fp16, [512]> input_99_mean_0_to_fp16 = const()[name = tensor<string, []>("input_99_mean_0_to_fp16"), val = tensor<fp16, [512]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(20669760)))];
            tensor<fp16, [512]> input_99_variance_0_to_fp16 = const()[name = tensor<string, []>("input_99_variance_0_to_fp16"), val = tensor<fp16, [512]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(20670848)))];
            tensor<fp16, [512]> input_99_gamma_0_to_fp16 = const()[name = tensor<string, []>("input_99_gamma_0_to_fp16"), val = tensor<fp16, [512]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(20671936)))];
            tensor<fp16, [512]> input_99_beta_0_to_fp16 = const()[name = tensor<string, []>("input_99_beta_0_to_fp16"), val = tensor<fp16, [512]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(20673024)))];
            tensor<fp16, []> input_99_epsilon_0_to_fp16 = const()[name = tensor<string, []>("input_99_epsilon_0_to_fp16"), val = tensor<fp16, []>(1.00135803e-05)];
            tensor<fp16, [1, 512, 1, 4]> input_99_cast = batch_norm(beta = input_99_beta_0_to_fp16, epsilon = input_99_epsilon_0_to_fp16, gamma = input_99_gamma_0_to_fp16, mean = input_99_mean_0_to_fp16, variance = input_99_variance_0_to_fp16, x = var_2678_cast);
            tensor<fp16, [1, 512, 1, 4]> x_175_cast = silu(x = input_99_cast);
            tensor<int32, [2]> var_2687 = const()[name = tensor<string, []>("op_2687"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_2689 = const()[name = tensor<string, []>("op_2689"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> input_101_pad_type_0 = const()[name = tensor<string, []>("input_101_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> input_101_pad_0 = const()[name = tensor<string, []>("input_101_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [512, 512, 1, 1]> op_2686_to_fp16_affine_quantized = constexpr_affine_dequantize()[axis = tensor<int32, []>(0), name = tensor<string, []>("op_2686_to_fp16_affine_quantized"), quantized_data = tensor<int8, [512, 512, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(20674112))), scale = tensor<fp16, [512]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(20936896))), zero_point = tensor<int8, [512]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(20936320)))];
            tensor<fp16, [512]> primary_encoder_encoders_0_conv_module_pointwise_conv2_bias_to_fp16 = const()[name = tensor<string, []>("primary_encoder_encoders_0_conv_module_pointwise_conv2_bias_to_fp16"), val = tensor<fp16, [512]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(20937984)))];
            tensor<fp16, [1, 512, 1, 4]> input_101_cast = conv(bias = primary_encoder_encoders_0_conv_module_pointwise_conv2_bias_to_fp16, dilations = var_2689, groups = var_2051, pad = input_101_pad_0, pad_type = input_101_pad_type_0, strides = var_2687, weight = op_2686_to_fp16_affine_quantized, x = x_175_cast);
            tensor<fp16, [1, 512, 1, 4]> x_179_cast = add(x = x_153_cast, y = input_101_cast);
            tensor<fp16, [1, 512, 1, 4]> var_2697_cast = abs(x = x_179_cast);
            tensor<fp16, []> var_2698_to_fp16 = const()[name = tensor<string, []>("op_2698_to_fp16"), val = tensor<fp16, []>(0.001953125)];
            tensor<fp16, [1, 512, 1, 4]> var_2699_cast = mul(x = var_2697_cast, y = var_2698_to_fp16);
            tensor<int32, [1]> var_2700 = const()[name = tensor<string, []>("op_2700"), val = tensor<int32, [1]>([1])];
            tensor<fp16, [1, 1, 1, 4]> scale_103_cast = reduce_sum(axes = var_2700, keep_dims = var_2050, x = var_2699_cast);
            tensor<fp16, []> scale_105_epsilon_0_to_fp16 = const()[name = tensor<string, []>("scale_105_epsilon_0_to_fp16"), val = tensor<fp16, []>(5.96046448e-08)];
            tensor<fp16, [1, 1, 1, 4]> scale_105_cast = rsqrt(epsilon = scale_105_epsilon_0_to_fp16, x = scale_103_cast);
            tensor<fp16, [1, 1, 1, 4]> scale_107_cast = mul(x = scale_105_cast, y = scale_105_cast);
            tensor<fp16, [1, 512, 1, 4]> x_181_cast = mul(x = x_179_cast, y = scale_107_cast);
            tensor<fp16, []> var_2705_to_fp16 = const()[name = tensor<string, []>("op_2705_to_fp16"), val = tensor<fp16, []>(-0.001953125)];
            tensor<fp16, [1, 512, 1, 4]> var_2706_cast = mul(x = x_181_cast, y = var_2705_to_fp16);
            tensor<int32, [1]> var_2707 = const()[name = tensor<string, []>("op_2707"), val = tensor<int32, [1]>([1])];
            tensor<fp16, [1, 1, 1, 4]> x_mean_35_cast = reduce_sum(axes = var_2707, keep_dims = var_2050, x = var_2706_cast);
            tensor<fp16, [1, 512, 1, 4]> x_zero_mean_35_cast = add(x = x_181_cast, y = x_mean_35_cast);
            tensor<fp16, []> var_2710_to_fp16 = const()[name = tensor<string, []>("op_2710_to_fp16"), val = tensor<fp16, []>(0.001953125)];
            tensor<fp16, [1, 512, 1, 4]> var_2711_cast = mul(x = x_zero_mean_35_cast, y = var_2710_to_fp16);
            tensor<fp16, [1, 512, 1, 4]> var_2712_cast = mul(x = var_2711_cast, y = x_zero_mean_35_cast);
            tensor<int32, [1]> var_2713 = const()[name = tensor<string, []>("op_2713"), val = tensor<int32, [1]>([1])];
            tensor<fp16, [1, 1, 1, 4]> x_var_35_cast = reduce_sum(axes = var_2713, keep_dims = var_2050, x = var_2712_cast);
            tensor<fp16, []> var_2715_to_fp16 = const()[name = tensor<string, []>("op_2715_to_fp16"), val = tensor<fp16, []>(1.00135803e-05)];
            tensor<fp16, [1, 1, 1, 4]> var_2716_cast = add(x = x_var_35_cast, y = var_2715_to_fp16);
            tensor<fp16, []> var_2717_epsilon_0_to_fp16 = const()[name = tensor<string, []>("op_2717_epsilon_0_to_fp16"), val = tensor<fp16, []>(5.96046448e-08)];
            tensor<fp16, [1, 1, 1, 4]> var_2717_cast = rsqrt(epsilon = var_2717_epsilon_0_to_fp16, x = var_2716_cast);
            tensor<fp16, [1, 512, 1, 4]> var_2718_cast = mul(x = x_zero_mean_35_cast, y = var_2717_cast);
            tensor<fp16, [512]> x_183_mean_0_to_fp16 = const()[name = tensor<string, []>("x_183_mean_0_to_fp16"), val = tensor<fp16, [512]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(20939072)))];
            tensor<fp16, [512]> x_183_variance_0_to_fp16 = const()[name = tensor<string, []>("x_183_variance_0_to_fp16"), val = tensor<fp16, [512]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(20940160)))];
            tensor<fp16, [512]> x_183_gamma_0_to_fp16 = const()[name = tensor<string, []>("x_183_gamma_0_to_fp16"), val = tensor<fp16, [512]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(20941248)))];
            tensor<fp16, [512]> x_183_beta_0_to_fp16 = const()[name = tensor<string, []>("x_183_beta_0_to_fp16"), val = tensor<fp16, [512]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(20942336)))];
            tensor<fp16, []> x_183_epsilon_0_to_fp16 = const()[name = tensor<string, []>("x_183_epsilon_0_to_fp16"), val = tensor<fp16, []>(1.00135803e-05)];
            tensor<fp16, [1, 512, 1, 4]> x_183_cast = batch_norm(beta = x_183_beta_0_to_fp16, epsilon = x_183_epsilon_0_to_fp16, gamma = x_183_gamma_0_to_fp16, mean = x_183_mean_0_to_fp16, variance = x_183_variance_0_to_fp16, x = var_2718_cast);
            tensor<int32, [2]> var_2729 = const()[name = tensor<string, []>("op_2729"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_2731 = const()[name = tensor<string, []>("op_2731"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> input_103_pad_type_0 = const()[name = tensor<string, []>("input_103_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> input_103_pad_0 = const()[name = tensor<string, []>("input_103_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [2048, 512, 1, 1]> op_2728_to_fp16_affine_quantized = constexpr_affine_dequantize()[axis = tensor<int32, []>(0), name = tensor<string, []>("op_2728_to_fp16_affine_quantized"), quantized_data = tensor<int8, [2048, 512, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(20943424))), scale = tensor<fp16, [2048]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(21994176))), zero_point = tensor<int8, [2048]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(21992064)))];
            tensor<fp16, [2048]> primary_encoder_encoders_0_feed_forward_w_1_bias_to_fp16 = const()[name = tensor<string, []>("primary_encoder_encoders_0_feed_forward_w_1_bias_to_fp16"), val = tensor<fp16, [2048]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(21998336)))];
            tensor<fp16, [1, 2048, 1, 4]> input_103_cast = conv(bias = primary_encoder_encoders_0_feed_forward_w_1_bias_to_fp16, dilations = var_2731, groups = var_2051, pad = input_103_pad_0, pad_type = input_103_pad_type_0, strides = var_2729, weight = op_2728_to_fp16_affine_quantized, x = x_183_cast);
            tensor<fp16, [1, 2048, 1, 4]> input_105_cast = silu(x = input_103_cast);
            tensor<int32, [2]> var_2740 = const()[name = tensor<string, []>("op_2740"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_2742 = const()[name = tensor<string, []>("op_2742"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> input_107_pad_type_0 = const()[name = tensor<string, []>("input_107_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> input_107_pad_0 = const()[name = tensor<string, []>("input_107_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [512, 2048, 1, 1]> op_2747_weight_0_to_fp16_affine_quantized = constexpr_affine_dequantize()[axis = tensor<int32, []>(0), name = tensor<string, []>("op_2747_weight_0_to_fp16_affine_quantized"), quantized_data = tensor<int8, [512, 2048, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(22002496))), scale = tensor<fp16, [512]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(23051712))), zero_point = tensor<int8, [512]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(23051136)))];
            tensor<fp16, [512]> var_2747_bias_0_to_fp16 = const()[name = tensor<string, []>("op_2747_bias_0_to_fp16"), val = tensor<fp16, [512]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(23052800)))];
            tensor<fp16, [1, 512, 1, 4]> var_2747_cast = conv(bias = var_2747_bias_0_to_fp16, dilations = var_2742, groups = var_2051, pad = input_107_pad_0, pad_type = input_107_pad_type_0, strides = var_2740, weight = op_2747_weight_0_to_fp16_affine_quantized, x = input_105_cast);
            tensor<fp16, [1, 512, 1, 4]> x_189_cast = add(x = x_179_cast, y = var_2747_cast);
            tensor<fp16, [1, 512, 1, 4]> var_2749_cast = abs(x = x_189_cast);
            tensor<fp16, []> var_2750_to_fp16 = const()[name = tensor<string, []>("op_2750_to_fp16"), val = tensor<fp16, []>(0.001953125)];
            tensor<fp16, [1, 512, 1, 4]> var_2751_cast = mul(x = var_2749_cast, y = var_2750_to_fp16);
            tensor<int32, [1]> var_2752 = const()[name = tensor<string, []>("op_2752"), val = tensor<int32, [1]>([1])];
            tensor<fp16, [1, 1, 1, 4]> scale_109_cast = reduce_sum(axes = var_2752, keep_dims = var_2050, x = var_2751_cast);
            tensor<fp16, []> scale_111_epsilon_0_to_fp16 = const()[name = tensor<string, []>("scale_111_epsilon_0_to_fp16"), val = tensor<fp16, []>(5.96046448e-08)];
            tensor<fp16, [1, 1, 1, 4]> scale_111_cast = rsqrt(epsilon = scale_111_epsilon_0_to_fp16, x = scale_109_cast);
            tensor<fp16, [1, 1, 1, 4]> scale_113_cast = mul(x = scale_111_cast, y = scale_111_cast);
            tensor<fp16, [1, 512, 1, 4]> x_191_cast = mul(x = x_189_cast, y = scale_113_cast);
            tensor<fp16, []> var_2757_to_fp16 = const()[name = tensor<string, []>("op_2757_to_fp16"), val = tensor<fp16, []>(-0.001953125)];
            tensor<fp16, [1, 512, 1, 4]> var_2758_cast = mul(x = x_191_cast, y = var_2757_to_fp16);
            tensor<int32, [1]> var_2759 = const()[name = tensor<string, []>("op_2759"), val = tensor<int32, [1]>([1])];
            tensor<fp16, [1, 1, 1, 4]> x_mean_37_cast = reduce_sum(axes = var_2759, keep_dims = var_2050, x = var_2758_cast);
            tensor<fp16, [1, 512, 1, 4]> x_zero_mean_37_cast = add(x = x_191_cast, y = x_mean_37_cast);
            tensor<fp16, []> var_2762_to_fp16 = const()[name = tensor<string, []>("op_2762_to_fp16"), val = tensor<fp16, []>(0.001953125)];
            tensor<fp16, [1, 512, 1, 4]> var_2763_cast = mul(x = x_zero_mean_37_cast, y = var_2762_to_fp16);
            tensor<fp16, [1, 512, 1, 4]> var_2764_cast = mul(x = var_2763_cast, y = x_zero_mean_37_cast);
            tensor<int32, [1]> var_2765 = const()[name = tensor<string, []>("op_2765"), val = tensor<int32, [1]>([1])];
            tensor<fp16, [1, 1, 1, 4]> x_var_37_cast = reduce_sum(axes = var_2765, keep_dims = var_2050, x = var_2764_cast);
            tensor<fp16, []> var_2767_to_fp16 = const()[name = tensor<string, []>("op_2767_to_fp16"), val = tensor<fp16, []>(1.00135803e-05)];
            tensor<fp16, [1, 1, 1, 4]> var_2768_cast = add(x = x_var_37_cast, y = var_2767_to_fp16);
            tensor<fp16, []> var_2769_epsilon_0_to_fp16 = const()[name = tensor<string, []>("op_2769_epsilon_0_to_fp16"), val = tensor<fp16, []>(5.96046448e-08)];
            tensor<fp16, [1, 1, 1, 4]> var_2769_cast = rsqrt(epsilon = var_2769_epsilon_0_to_fp16, x = var_2768_cast);
            tensor<fp16, [1, 512, 1, 4]> var_2770_cast = mul(x = x_zero_mean_37_cast, y = var_2769_cast);
            tensor<fp16, [512]> x_193_mean_0_to_fp16 = const()[name = tensor<string, []>("x_193_mean_0_to_fp16"), val = tensor<fp16, [512]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(23053888)))];
            tensor<fp16, [512]> x_193_variance_0_to_fp16 = const()[name = tensor<string, []>("x_193_variance_0_to_fp16"), val = tensor<fp16, [512]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(23054976)))];
            tensor<fp16, [512]> x_193_gamma_0_to_fp16 = const()[name = tensor<string, []>("x_193_gamma_0_to_fp16"), val = tensor<fp16, [512]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(23056064)))];
            tensor<fp16, [512]> x_193_beta_0_to_fp16 = const()[name = tensor<string, []>("x_193_beta_0_to_fp16"), val = tensor<fp16, [512]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(23057152)))];
            tensor<fp16, []> x_193_epsilon_0_to_fp16 = const()[name = tensor<string, []>("x_193_epsilon_0_to_fp16"), val = tensor<fp16, []>(1.00135803e-05)];
            tensor<fp16, [1, 512, 1, 4]> x_193_cast = batch_norm(beta = x_193_beta_0_to_fp16, epsilon = x_193_epsilon_0_to_fp16, gamma = x_193_gamma_0_to_fp16, mean = x_193_mean_0_to_fp16, variance = x_193_variance_0_to_fp16, x = var_2770_cast);
            tensor<int32, []> var_2794 = const()[name = tensor<string, []>("op_2794"), val = tensor<int32, []>(512)];
            tensor<int32, []> var_2800 = const()[name = tensor<string, []>("op_2800"), val = tensor<int32, []>(2)];
            tensor<int32, []> var_2803 = const()[name = tensor<string, []>("op_2803"), val = tensor<int32, []>(-1)];
            tensor<bool, []> var_2805 = const()[name = tensor<string, []>("op_2805"), val = tensor<bool, []>(true)];
            tensor<int32, []> var_2806 = const()[name = tensor<string, []>("op_2806"), val = tensor<int32, []>(1)];
            tensor<fp16, [1, 512, 1, 4]> var_2853_cast = abs(x = x_193_cast);
            tensor<fp16, []> var_2854_to_fp16 = const()[name = tensor<string, []>("op_2854_to_fp16"), val = tensor<fp16, []>(0.001953125)];
            tensor<fp16, [1, 512, 1, 4]> var_2855_cast = mul(x = var_2853_cast, y = var_2854_to_fp16);
            tensor<int32, [1]> var_2856 = const()[name = tensor<string, []>("op_2856"), val = tensor<int32, [1]>([1])];
            tensor<fp16, [1, 1, 1, 4]> scale_115_cast = reduce_sum(axes = var_2856, keep_dims = var_2805, x = var_2855_cast);
            tensor<fp16, []> scale_117_epsilon_0_to_fp16 = const()[name = tensor<string, []>("scale_117_epsilon_0_to_fp16"), val = tensor<fp16, []>(5.96046448e-08)];
            tensor<fp16, [1, 1, 1, 4]> scale_117_cast = rsqrt(epsilon = scale_117_epsilon_0_to_fp16, x = scale_115_cast);
            tensor<fp16, [1, 1, 1, 4]> scale_119_cast = mul(x = scale_117_cast, y = scale_117_cast);
            tensor<fp16, [1, 512, 1, 4]> x_195_cast = mul(x = x_193_cast, y = scale_119_cast);
            tensor<fp16, []> var_2861_to_fp16 = const()[name = tensor<string, []>("op_2861_to_fp16"), val = tensor<fp16, []>(-0.001953125)];
            tensor<fp16, [1, 512, 1, 4]> var_2862_cast = mul(x = x_195_cast, y = var_2861_to_fp16);
            tensor<int32, [1]> var_2863 = const()[name = tensor<string, []>("op_2863"), val = tensor<int32, [1]>([1])];
            tensor<fp16, [1, 1, 1, 4]> x_mean_39_cast = reduce_sum(axes = var_2863, keep_dims = var_2805, x = var_2862_cast);
            tensor<fp16, [1, 512, 1, 4]> x_zero_mean_39_cast = add(x = x_195_cast, y = x_mean_39_cast);
            tensor<fp16, []> var_2866_to_fp16 = const()[name = tensor<string, []>("op_2866_to_fp16"), val = tensor<fp16, []>(0.001953125)];
            tensor<fp16, [1, 512, 1, 4]> var_2867_cast = mul(x = x_zero_mean_39_cast, y = var_2866_to_fp16);
            tensor<fp16, [1, 512, 1, 4]> var_2868_cast = mul(x = var_2867_cast, y = x_zero_mean_39_cast);
            tensor<int32, [1]> var_2869 = const()[name = tensor<string, []>("op_2869"), val = tensor<int32, [1]>([1])];
            tensor<fp16, [1, 1, 1, 4]> x_var_39_cast = reduce_sum(axes = var_2869, keep_dims = var_2805, x = var_2868_cast);
            tensor<fp16, []> var_2871_to_fp16 = const()[name = tensor<string, []>("op_2871_to_fp16"), val = tensor<fp16, []>(1.00135803e-05)];
            tensor<fp16, [1, 1, 1, 4]> var_2872_cast = add(x = x_var_39_cast, y = var_2871_to_fp16);
            tensor<fp16, []> var_2873_epsilon_0_to_fp16 = const()[name = tensor<string, []>("op_2873_epsilon_0_to_fp16"), val = tensor<fp16, []>(5.96046448e-08)];
            tensor<fp16, [1, 1, 1, 4]> var_2873_cast = rsqrt(epsilon = var_2873_epsilon_0_to_fp16, x = var_2872_cast);
            tensor<fp16, [1, 512, 1, 4]> var_2874_cast = mul(x = x_zero_mean_39_cast, y = var_2873_cast);
            tensor<fp16, [512]> x_197_mean_0_to_fp16 = const()[name = tensor<string, []>("x_197_mean_0_to_fp16"), val = tensor<fp16, [512]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(23058240)))];
            tensor<fp16, [512]> x_197_variance_0_to_fp16 = const()[name = tensor<string, []>("x_197_variance_0_to_fp16"), val = tensor<fp16, [512]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(23059328)))];
            tensor<fp16, [512]> x_197_gamma_0_to_fp16 = const()[name = tensor<string, []>("x_197_gamma_0_to_fp16"), val = tensor<fp16, [512]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(23060416)))];
            tensor<fp16, [512]> x_197_beta_0_to_fp16 = const()[name = tensor<string, []>("x_197_beta_0_to_fp16"), val = tensor<fp16, [512]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(23061504)))];
            tensor<fp16, []> x_197_epsilon_0_to_fp16 = const()[name = tensor<string, []>("x_197_epsilon_0_to_fp16"), val = tensor<fp16, []>(1.00135803e-05)];
            tensor<fp16, [1, 512, 1, 4]> x_197_cast = batch_norm(beta = x_197_beta_0_to_fp16, epsilon = x_197_epsilon_0_to_fp16, gamma = x_197_gamma_0_to_fp16, mean = x_197_mean_0_to_fp16, variance = x_197_variance_0_to_fp16, x = var_2874_cast);
            tensor<int32, [2]> var_2885 = const()[name = tensor<string, []>("op_2885"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_2887 = const()[name = tensor<string, []>("op_2887"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> input_109_pad_type_0 = const()[name = tensor<string, []>("input_109_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> input_109_pad_0 = const()[name = tensor<string, []>("input_109_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [2048, 512, 1, 1]> op_2884_to_fp16_affine_quantized = constexpr_affine_dequantize()[axis = tensor<int32, []>(0), name = tensor<string, []>("op_2884_to_fp16_affine_quantized"), quantized_data = tensor<int8, [2048, 512, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(23062592))), scale = tensor<fp16, [2048]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(24113344))), zero_point = tensor<int8, [2048]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(24111232)))];
            tensor<fp16, [2048]> primary_encoder_encoders_1_feed_forward_macaron_w_1_bias_to_fp16 = const()[name = tensor<string, []>("primary_encoder_encoders_1_feed_forward_macaron_w_1_bias_to_fp16"), val = tensor<fp16, [2048]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(24117504)))];
            tensor<fp16, [1, 2048, 1, 4]> input_109_cast = conv(bias = primary_encoder_encoders_1_feed_forward_macaron_w_1_bias_to_fp16, dilations = var_2887, groups = var_2806, pad = input_109_pad_0, pad_type = input_109_pad_type_0, strides = var_2885, weight = op_2884_to_fp16_affine_quantized, x = x_197_cast);
            tensor<fp16, [1, 2048, 1, 4]> input_111_cast = silu(x = input_109_cast);
            tensor<int32, [2]> var_2896 = const()[name = tensor<string, []>("op_2896"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_2898 = const()[name = tensor<string, []>("op_2898"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> input_113_pad_type_0 = const()[name = tensor<string, []>("input_113_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> input_113_pad_0 = const()[name = tensor<string, []>("input_113_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [512, 2048, 1, 1]> op_2903_weight_0_to_fp16_affine_quantized = constexpr_affine_dequantize()[axis = tensor<int32, []>(0), name = tensor<string, []>("op_2903_weight_0_to_fp16_affine_quantized"), quantized_data = tensor<int8, [512, 2048, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(24121664))), scale = tensor<fp16, [512]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(25170880))), zero_point = tensor<int8, [512]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(25170304)))];
            tensor<fp16, [512]> var_2903_bias_0_to_fp16 = const()[name = tensor<string, []>("op_2903_bias_0_to_fp16"), val = tensor<fp16, [512]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(25171968)))];
            tensor<fp16, [1, 512, 1, 4]> var_2903_cast = conv(bias = var_2903_bias_0_to_fp16, dilations = var_2898, groups = var_2806, pad = input_113_pad_0, pad_type = input_113_pad_type_0, strides = var_2896, weight = op_2903_weight_0_to_fp16_affine_quantized, x = input_111_cast);
            tensor<fp16, [1, 512, 1, 4]> x_203_cast = add(x = x_193_cast, y = var_2903_cast);
            tensor<fp16, [1, 512, 1, 4]> var_2905_cast = abs(x = x_203_cast);
            tensor<fp16, []> var_2906_to_fp16 = const()[name = tensor<string, []>("op_2906_to_fp16"), val = tensor<fp16, []>(0.001953125)];
            tensor<fp16, [1, 512, 1, 4]> var_2907_cast = mul(x = var_2905_cast, y = var_2906_to_fp16);
            tensor<int32, [1]> var_2908 = const()[name = tensor<string, []>("op_2908"), val = tensor<int32, [1]>([1])];
            tensor<fp16, [1, 1, 1, 4]> scale_121_cast = reduce_sum(axes = var_2908, keep_dims = var_2805, x = var_2907_cast);
            tensor<fp16, []> scale_123_epsilon_0_to_fp16 = const()[name = tensor<string, []>("scale_123_epsilon_0_to_fp16"), val = tensor<fp16, []>(5.96046448e-08)];
            tensor<fp16, [1, 1, 1, 4]> scale_123_cast = rsqrt(epsilon = scale_123_epsilon_0_to_fp16, x = scale_121_cast);
            tensor<fp16, [1, 1, 1, 4]> scale_125_cast = mul(x = scale_123_cast, y = scale_123_cast);
            tensor<fp16, [1, 512, 1, 4]> x_205_cast = mul(x = x_203_cast, y = scale_125_cast);
            tensor<fp16, []> var_2913_to_fp16 = const()[name = tensor<string, []>("op_2913_to_fp16"), val = tensor<fp16, []>(-0.001953125)];
            tensor<fp16, [1, 512, 1, 4]> var_2914_cast = mul(x = x_205_cast, y = var_2913_to_fp16);
            tensor<int32, [1]> var_2915 = const()[name = tensor<string, []>("op_2915"), val = tensor<int32, [1]>([1])];
            tensor<fp16, [1, 1, 1, 4]> x_mean_41_cast = reduce_sum(axes = var_2915, keep_dims = var_2805, x = var_2914_cast);
            tensor<fp16, [1, 512, 1, 4]> x_zero_mean_41_cast = add(x = x_205_cast, y = x_mean_41_cast);
            tensor<fp16, []> var_2918_to_fp16 = const()[name = tensor<string, []>("op_2918_to_fp16"), val = tensor<fp16, []>(0.001953125)];
            tensor<fp16, [1, 512, 1, 4]> var_2919_cast = mul(x = x_zero_mean_41_cast, y = var_2918_to_fp16);
            tensor<fp16, [1, 512, 1, 4]> var_2920_cast = mul(x = var_2919_cast, y = x_zero_mean_41_cast);
            tensor<int32, [1]> var_2921 = const()[name = tensor<string, []>("op_2921"), val = tensor<int32, [1]>([1])];
            tensor<fp16, [1, 1, 1, 4]> x_var_41_cast = reduce_sum(axes = var_2921, keep_dims = var_2805, x = var_2920_cast);
            tensor<fp16, []> var_2923_to_fp16 = const()[name = tensor<string, []>("op_2923_to_fp16"), val = tensor<fp16, []>(1.00135803e-05)];
            tensor<fp16, [1, 1, 1, 4]> var_2924_cast = add(x = x_var_41_cast, y = var_2923_to_fp16);
            tensor<fp16, []> var_2925_epsilon_0_to_fp16 = const()[name = tensor<string, []>("op_2925_epsilon_0_to_fp16"), val = tensor<fp16, []>(5.96046448e-08)];
            tensor<fp16, [1, 1, 1, 4]> var_2925_cast = rsqrt(epsilon = var_2925_epsilon_0_to_fp16, x = var_2924_cast);
            tensor<fp16, [1, 512, 1, 4]> var_2926_cast = mul(x = x_zero_mean_41_cast, y = var_2925_cast);
            tensor<fp16, [512]> query_1_mean_0_to_fp16 = const()[name = tensor<string, []>("query_1_mean_0_to_fp16"), val = tensor<fp16, [512]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(25173056)))];
            tensor<fp16, [512]> query_1_variance_0_to_fp16 = const()[name = tensor<string, []>("query_1_variance_0_to_fp16"), val = tensor<fp16, [512]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(25174144)))];
            tensor<fp16, [512]> query_1_gamma_0_to_fp16 = const()[name = tensor<string, []>("query_1_gamma_0_to_fp16"), val = tensor<fp16, [512]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(25175232)))];
            tensor<fp16, [512]> query_1_beta_0_to_fp16 = const()[name = tensor<string, []>("query_1_beta_0_to_fp16"), val = tensor<fp16, [512]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(25176320)))];
            tensor<fp16, []> query_1_epsilon_0_to_fp16 = const()[name = tensor<string, []>("query_1_epsilon_0_to_fp16"), val = tensor<fp16, []>(1.00135803e-05)];
            tensor<fp16, [1, 512, 1, 4]> query_1_cast = batch_norm(beta = query_1_beta_0_to_fp16, epsilon = query_1_epsilon_0_to_fp16, gamma = query_1_gamma_0_to_fp16, mean = query_1_mean_0_to_fp16, variance = query_1_variance_0_to_fp16, x = var_2926_cast);
            tensor<int32, [2]> var_2946 = const()[name = tensor<string, []>("op_2946"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_2948 = const()[name = tensor<string, []>("op_2948"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> var_2950_pad_type_0 = const()[name = tensor<string, []>("op_2950_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> var_2950_pad_0 = const()[name = tensor<string, []>("op_2950_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [512, 512, 1, 1]> op_2945_to_fp16_affine_quantized = constexpr_affine_dequantize()[axis = tensor<int32, []>(0), name = tensor<string, []>("op_2945_to_fp16_affine_quantized"), quantized_data = tensor<int8, [512, 512, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(25177408))), scale = tensor<fp16, [512]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(25440192))), zero_point = tensor<int8, [512]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(25439616)))];
            tensor<fp16, [512]> primary_encoder_encoders_1_self_attn_linear_v_bias_to_fp16 = const()[name = tensor<string, []>("primary_encoder_encoders_1_self_attn_linear_v_bias_to_fp16"), val = tensor<fp16, [512]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(25441280)))];
            tensor<fp16, [1, 512, 1, 4]> var_2950_cast = conv(bias = primary_encoder_encoders_1_self_attn_linear_v_bias_to_fp16, dilations = var_2948, groups = var_2806, pad = var_2950_pad_0, pad_type = var_2950_pad_type_0, strides = var_2946, weight = op_2945_to_fp16_affine_quantized, x = query_1_cast);
            tensor<int32, [8]> tile_26 = const()[name = tensor<string, []>("tile_26"), val = tensor<int32, [8]>([64, 64, 64, 64, 64, 64, 64, 64])];
            tensor<int32, []> var_2951_axis_0 = const()[name = tensor<string, []>("op_2951_axis_0"), val = tensor<int32, []>(1)];
            tensor<fp16, [1, 64, 1, 4]> var_2951_cast_0, tensor<fp16, [1, 64, 1, 4]> var_2951_cast_1, tensor<fp16, [1, 64, 1, 4]> var_2951_cast_2, tensor<fp16, [1, 64, 1, 4]> var_2951_cast_3, tensor<fp16, [1, 64, 1, 4]> var_2951_cast_4, tensor<fp16, [1, 64, 1, 4]> var_2951_cast_5, tensor<fp16, [1, 64, 1, 4]> var_2951_cast_6, tensor<fp16, [1, 64, 1, 4]> var_2951_cast_7 = split(axis = var_2951_axis_0, split_sizes = tile_26, x = var_2950_cast);
            tensor<int32, [8]> tile_27 = const()[name = tensor<string, []>("tile_27"), val = tensor<int32, [8]>([1, 1, 1, 1, 1, 1, 1, 1])];
            tensor<int32, []> var_2960_axis_0 = const()[name = tensor<string, []>("op_2960_axis_0"), val = tensor<int32, []>(2)];
            tensor<fp16, [1, 64, 1, 128]> var_2960_cast_0, tensor<fp16, [1, 64, 1, 128]> var_2960_cast_1, tensor<fp16, [1, 64, 1, 128]> var_2960_cast_2, tensor<fp16, [1, 64, 1, 128]> var_2960_cast_3, tensor<fp16, [1, 64, 1, 128]> var_2960_cast_4, tensor<fp16, [1, 64, 1, 128]> var_2960_cast_5, tensor<fp16, [1, 64, 1, 128]> var_2960_cast_6, tensor<fp16, [1, 64, 1, 128]> var_2960_cast_7 = split(axis = var_2960_axis_0, split_sizes = tile_27, x = var_321_cast_1);
            tensor<bool, []> var_2970_interleave_0 = const()[name = tensor<string, []>("op_2970_interleave_0"), val = tensor<bool, []>(false)];
            tensor<fp16, [1, 64, 1, 132]> var_2970_cast = concat(axis = var_2803, interleave = var_2970_interleave_0, values = (var_2960_cast_0, var_2951_cast_0));
            tensor<int32, [4]> var_2974_begin_0 = const()[name = tensor<string, []>("op_2974_begin_0"), val = tensor<int32, [4]>([0, 0, 0, 4])];
            tensor<int32, [4]> var_2974_end_0 = const()[name = tensor<string, []>("op_2974_end_0"), val = tensor<int32, [4]>([1, 64, 1, 132])];
            tensor<bool, [4]> var_2974_end_mask_0 = const()[name = tensor<string, []>("op_2974_end_mask_0"), val = tensor<bool, [4]>([true, true, true, true])];
            tensor<fp16, [1, 64, 1, 128]> var_2974_cast = slice_by_index(begin = var_2974_begin_0, end = var_2974_end_0, end_mask = var_2974_end_mask_0, x = var_2970_cast);
            tensor<bool, []> var_2976_interleave_0 = const()[name = tensor<string, []>("op_2976_interleave_0"), val = tensor<bool, []>(false)];
            tensor<fp16, [1, 64, 1, 132]> var_2976_cast = concat(axis = var_2803, interleave = var_2976_interleave_0, values = (var_2960_cast_1, var_2951_cast_1));
            tensor<int32, [4]> var_2980_begin_0 = const()[name = tensor<string, []>("op_2980_begin_0"), val = tensor<int32, [4]>([0, 0, 0, 4])];
            tensor<int32, [4]> var_2980_end_0 = const()[name = tensor<string, []>("op_2980_end_0"), val = tensor<int32, [4]>([1, 64, 1, 132])];
            tensor<bool, [4]> var_2980_end_mask_0 = const()[name = tensor<string, []>("op_2980_end_mask_0"), val = tensor<bool, [4]>([true, true, true, true])];
            tensor<fp16, [1, 64, 1, 128]> var_2980_cast = slice_by_index(begin = var_2980_begin_0, end = var_2980_end_0, end_mask = var_2980_end_mask_0, x = var_2976_cast);
            tensor<bool, []> var_2982_interleave_0 = const()[name = tensor<string, []>("op_2982_interleave_0"), val = tensor<bool, []>(false)];
            tensor<fp16, [1, 64, 1, 132]> var_2982_cast = concat(axis = var_2803, interleave = var_2982_interleave_0, values = (var_2960_cast_2, var_2951_cast_2));
            tensor<int32, [4]> var_2986_begin_0 = const()[name = tensor<string, []>("op_2986_begin_0"), val = tensor<int32, [4]>([0, 0, 0, 4])];
            tensor<int32, [4]> var_2986_end_0 = const()[name = tensor<string, []>("op_2986_end_0"), val = tensor<int32, [4]>([1, 64, 1, 132])];
            tensor<bool, [4]> var_2986_end_mask_0 = const()[name = tensor<string, []>("op_2986_end_mask_0"), val = tensor<bool, [4]>([true, true, true, true])];
            tensor<fp16, [1, 64, 1, 128]> var_2986_cast = slice_by_index(begin = var_2986_begin_0, end = var_2986_end_0, end_mask = var_2986_end_mask_0, x = var_2982_cast);
            tensor<bool, []> var_2988_interleave_0 = const()[name = tensor<string, []>("op_2988_interleave_0"), val = tensor<bool, []>(false)];
            tensor<fp16, [1, 64, 1, 132]> var_2988_cast = concat(axis = var_2803, interleave = var_2988_interleave_0, values = (var_2960_cast_3, var_2951_cast_3));
            tensor<int32, [4]> var_2992_begin_0 = const()[name = tensor<string, []>("op_2992_begin_0"), val = tensor<int32, [4]>([0, 0, 0, 4])];
            tensor<int32, [4]> var_2992_end_0 = const()[name = tensor<string, []>("op_2992_end_0"), val = tensor<int32, [4]>([1, 64, 1, 132])];
            tensor<bool, [4]> var_2992_end_mask_0 = const()[name = tensor<string, []>("op_2992_end_mask_0"), val = tensor<bool, [4]>([true, true, true, true])];
            tensor<fp16, [1, 64, 1, 128]> var_2992_cast = slice_by_index(begin = var_2992_begin_0, end = var_2992_end_0, end_mask = var_2992_end_mask_0, x = var_2988_cast);
            tensor<bool, []> var_2994_interleave_0 = const()[name = tensor<string, []>("op_2994_interleave_0"), val = tensor<bool, []>(false)];
            tensor<fp16, [1, 64, 1, 132]> var_2994_cast = concat(axis = var_2803, interleave = var_2994_interleave_0, values = (var_2960_cast_4, var_2951_cast_4));
            tensor<int32, [4]> var_2998_begin_0 = const()[name = tensor<string, []>("op_2998_begin_0"), val = tensor<int32, [4]>([0, 0, 0, 4])];
            tensor<int32, [4]> var_2998_end_0 = const()[name = tensor<string, []>("op_2998_end_0"), val = tensor<int32, [4]>([1, 64, 1, 132])];
            tensor<bool, [4]> var_2998_end_mask_0 = const()[name = tensor<string, []>("op_2998_end_mask_0"), val = tensor<bool, [4]>([true, true, true, true])];
            tensor<fp16, [1, 64, 1, 128]> var_2998_cast = slice_by_index(begin = var_2998_begin_0, end = var_2998_end_0, end_mask = var_2998_end_mask_0, x = var_2994_cast);
            tensor<bool, []> var_3000_interleave_0 = const()[name = tensor<string, []>("op_3000_interleave_0"), val = tensor<bool, []>(false)];
            tensor<fp16, [1, 64, 1, 132]> var_3000_cast = concat(axis = var_2803, interleave = var_3000_interleave_0, values = (var_2960_cast_5, var_2951_cast_5));
            tensor<int32, [4]> var_3004_begin_0 = const()[name = tensor<string, []>("op_3004_begin_0"), val = tensor<int32, [4]>([0, 0, 0, 4])];
            tensor<int32, [4]> var_3004_end_0 = const()[name = tensor<string, []>("op_3004_end_0"), val = tensor<int32, [4]>([1, 64, 1, 132])];
            tensor<bool, [4]> var_3004_end_mask_0 = const()[name = tensor<string, []>("op_3004_end_mask_0"), val = tensor<bool, [4]>([true, true, true, true])];
            tensor<fp16, [1, 64, 1, 128]> var_3004_cast = slice_by_index(begin = var_3004_begin_0, end = var_3004_end_0, end_mask = var_3004_end_mask_0, x = var_3000_cast);
            tensor<bool, []> var_3006_interleave_0 = const()[name = tensor<string, []>("op_3006_interleave_0"), val = tensor<bool, []>(false)];
            tensor<fp16, [1, 64, 1, 132]> var_3006_cast = concat(axis = var_2803, interleave = var_3006_interleave_0, values = (var_2960_cast_6, var_2951_cast_6));
            tensor<int32, [4]> var_3010_begin_0 = const()[name = tensor<string, []>("op_3010_begin_0"), val = tensor<int32, [4]>([0, 0, 0, 4])];
            tensor<int32, [4]> var_3010_end_0 = const()[name = tensor<string, []>("op_3010_end_0"), val = tensor<int32, [4]>([1, 64, 1, 132])];
            tensor<bool, [4]> var_3010_end_mask_0 = const()[name = tensor<string, []>("op_3010_end_mask_0"), val = tensor<bool, [4]>([true, true, true, true])];
            tensor<fp16, [1, 64, 1, 128]> var_3010_cast = slice_by_index(begin = var_3010_begin_0, end = var_3010_end_0, end_mask = var_3010_end_mask_0, x = var_3006_cast);
            tensor<bool, []> var_3012_interleave_0 = const()[name = tensor<string, []>("op_3012_interleave_0"), val = tensor<bool, []>(false)];
            tensor<fp16, [1, 64, 1, 132]> var_3012_cast = concat(axis = var_2803, interleave = var_3012_interleave_0, values = (var_2960_cast_7, var_2951_cast_7));
            tensor<int32, [4]> var_3016_begin_0 = const()[name = tensor<string, []>("op_3016_begin_0"), val = tensor<int32, [4]>([0, 0, 0, 4])];
            tensor<int32, [4]> var_3016_end_0 = const()[name = tensor<string, []>("op_3016_end_0"), val = tensor<int32, [4]>([1, 64, 1, 132])];
            tensor<bool, [4]> var_3016_end_mask_0 = const()[name = tensor<string, []>("op_3016_end_mask_0"), val = tensor<bool, [4]>([true, true, true, true])];
            tensor<fp16, [1, 64, 1, 128]> var_3016_cast = slice_by_index(begin = var_3016_begin_0, end = var_3016_end_0, end_mask = var_3016_end_mask_0, x = var_3012_cast);
            tensor<bool, []> var_3018_interleave_0 = const()[name = tensor<string, []>("op_3018_interleave_0"), val = tensor<bool, []>(false)];
            tensor<fp16, [1, 64, 8, 128]> var_3018_cast = concat(axis = var_2800, interleave = var_3018_interleave_0, values = (var_2974_cast, var_2980_cast, var_2986_cast, var_2992_cast, var_2998_cast, var_3004_cast, var_3010_cast, var_3016_cast));
            tensor<string, []> var_3020_equation_0 = const()[name = tensor<string, []>("op_3020_equation_0"), val = tensor<string, []>("bnhd,bdhm->bnhm")];
            tensor<fp16, [1, 64, 1, 4]> var_3020_cast = einsum(equation = var_3020_equation_0, values = (var_2974_cast, input_81_cast));
            tensor<string, []> var_3022_equation_0 = const()[name = tensor<string, []>("op_3022_equation_0"), val = tensor<string, []>("bnhd,bdhm->bnhm")];
            tensor<fp16, [1, 64, 1, 4]> var_3022_cast = einsum(equation = var_3022_equation_0, values = (var_2980_cast, input_83_cast));
            tensor<string, []> var_3024_equation_0 = const()[name = tensor<string, []>("op_3024_equation_0"), val = tensor<string, []>("bnhd,bdhm->bnhm")];
            tensor<fp16, [1, 64, 1, 4]> var_3024_cast = einsum(equation = var_3024_equation_0, values = (var_2986_cast, input_85_cast));
            tensor<string, []> var_3026_equation_0 = const()[name = tensor<string, []>("op_3026_equation_0"), val = tensor<string, []>("bnhd,bdhm->bnhm")];
            tensor<fp16, [1, 64, 1, 4]> var_3026_cast = einsum(equation = var_3026_equation_0, values = (var_2992_cast, input_87_cast));
            tensor<string, []> var_3028_equation_0 = const()[name = tensor<string, []>("op_3028_equation_0"), val = tensor<string, []>("bnhd,bdhm->bnhm")];
            tensor<fp16, [1, 64, 1, 4]> var_3028_cast = einsum(equation = var_3028_equation_0, values = (var_2998_cast, input_89_cast));
            tensor<string, []> var_3030_equation_0 = const()[name = tensor<string, []>("op_3030_equation_0"), val = tensor<string, []>("bnhd,bdhm->bnhm")];
            tensor<fp16, [1, 64, 1, 4]> var_3030_cast = einsum(equation = var_3030_equation_0, values = (var_3004_cast, input_91_cast));
            tensor<string, []> var_3032_equation_0 = const()[name = tensor<string, []>("op_3032_equation_0"), val = tensor<string, []>("bnhd,bdhm->bnhm")];
            tensor<fp16, [1, 64, 1, 4]> var_3032_cast = einsum(equation = var_3032_equation_0, values = (var_3010_cast, input_93_cast));
            tensor<string, []> var_3034_equation_0 = const()[name = tensor<string, []>("op_3034_equation_0"), val = tensor<string, []>("bnhd,bdhm->bnhm")];
            tensor<fp16, [1, 64, 1, 4]> var_3034_cast = einsum(equation = var_3034_equation_0, values = (var_3016_cast, input_95_cast));
            tensor<bool, []> y_13_interleave_0 = const()[name = tensor<string, []>("y_13_interleave_0"), val = tensor<bool, []>(false)];
            tensor<fp16, [1, 512, 1, 4]> y_13_cast = concat(axis = var_2806, interleave = y_13_interleave_0, values = (var_3020_cast, var_3022_cast, var_3024_cast, var_3026_cast, var_3028_cast, var_3030_cast, var_3032_cast, var_3034_cast));
            tensor<int32, [2]> var_3041 = const()[name = tensor<string, []>("op_3041"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_3043 = const()[name = tensor<string, []>("op_3043"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> input_115_pad_type_0 = const()[name = tensor<string, []>("input_115_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> input_115_pad_0 = const()[name = tensor<string, []>("input_115_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [512, 512, 1, 1]> op_3040_to_fp16_affine_quantized = constexpr_affine_dequantize()[axis = tensor<int32, []>(0), name = tensor<string, []>("op_3040_to_fp16_affine_quantized"), quantized_data = tensor<int8, [512, 512, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(25442368))), scale = tensor<fp16, [512]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(25705152))), zero_point = tensor<int8, [512]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(25704576)))];
            tensor<fp16, [512]> primary_encoder_encoders_1_self_attn_linear_out_bias_to_fp16 = const()[name = tensor<string, []>("primary_encoder_encoders_1_self_attn_linear_out_bias_to_fp16"), val = tensor<fp16, [512]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(25706240)))];
            tensor<fp16, [1, 512, 1, 4]> input_115_cast = conv(bias = primary_encoder_encoders_1_self_attn_linear_out_bias_to_fp16, dilations = var_3043, groups = var_2806, pad = input_115_pad_0, pad_type = input_115_pad_type_0, strides = var_3041, weight = op_3040_to_fp16_affine_quantized, x = y_13_cast);
            tensor<fp16, [1, 512, 1, 4]> x_207_cast = add(x = x_203_cast, y = input_115_cast);
            tensor<fp16, [1, 512, 1, 4]> var_3051_cast = abs(x = x_207_cast);
            tensor<fp16, []> var_3052_to_fp16 = const()[name = tensor<string, []>("op_3052_to_fp16"), val = tensor<fp16, []>(0.001953125)];
            tensor<fp16, [1, 512, 1, 4]> var_3053_cast = mul(x = var_3051_cast, y = var_3052_to_fp16);
            tensor<int32, [1]> var_3054 = const()[name = tensor<string, []>("op_3054"), val = tensor<int32, [1]>([1])];
            tensor<fp16, [1, 1, 1, 4]> scale_127_cast = reduce_sum(axes = var_3054, keep_dims = var_2805, x = var_3053_cast);
            tensor<fp16, []> scale_129_epsilon_0_to_fp16 = const()[name = tensor<string, []>("scale_129_epsilon_0_to_fp16"), val = tensor<fp16, []>(5.96046448e-08)];
            tensor<fp16, [1, 1, 1, 4]> scale_129_cast = rsqrt(epsilon = scale_129_epsilon_0_to_fp16, x = scale_127_cast);
            tensor<fp16, [1, 1, 1, 4]> scale_131_cast = mul(x = scale_129_cast, y = scale_129_cast);
            tensor<fp16, [1, 512, 1, 4]> x_209_cast = mul(x = x_207_cast, y = scale_131_cast);
            tensor<fp16, []> var_3059_to_fp16 = const()[name = tensor<string, []>("op_3059_to_fp16"), val = tensor<fp16, []>(-0.001953125)];
            tensor<fp16, [1, 512, 1, 4]> var_3060_cast = mul(x = x_209_cast, y = var_3059_to_fp16);
            tensor<int32, [1]> var_3061 = const()[name = tensor<string, []>("op_3061"), val = tensor<int32, [1]>([1])];
            tensor<fp16, [1, 1, 1, 4]> x_mean_43_cast = reduce_sum(axes = var_3061, keep_dims = var_2805, x = var_3060_cast);
            tensor<fp16, [1, 512, 1, 4]> x_zero_mean_43_cast = add(x = x_209_cast, y = x_mean_43_cast);
            tensor<fp16, []> var_3064_to_fp16 = const()[name = tensor<string, []>("op_3064_to_fp16"), val = tensor<fp16, []>(0.001953125)];
            tensor<fp16, [1, 512, 1, 4]> var_3065_cast = mul(x = x_zero_mean_43_cast, y = var_3064_to_fp16);
            tensor<fp16, [1, 512, 1, 4]> var_3066_cast = mul(x = var_3065_cast, y = x_zero_mean_43_cast);
            tensor<int32, [1]> var_3067 = const()[name = tensor<string, []>("op_3067"), val = tensor<int32, [1]>([1])];
            tensor<fp16, [1, 1, 1, 4]> x_var_43_cast = reduce_sum(axes = var_3067, keep_dims = var_2805, x = var_3066_cast);
            tensor<fp16, []> var_3069_to_fp16 = const()[name = tensor<string, []>("op_3069_to_fp16"), val = tensor<fp16, []>(1.00135803e-05)];
            tensor<fp16, [1, 1, 1, 4]> var_3070_cast = add(x = x_var_43_cast, y = var_3069_to_fp16);
            tensor<fp16, []> var_3071_epsilon_0_to_fp16 = const()[name = tensor<string, []>("op_3071_epsilon_0_to_fp16"), val = tensor<fp16, []>(5.96046448e-08)];
            tensor<fp16, [1, 1, 1, 4]> var_3071_cast = rsqrt(epsilon = var_3071_epsilon_0_to_fp16, x = var_3070_cast);
            tensor<fp16, [1, 512, 1, 4]> var_3072_cast = mul(x = x_zero_mean_43_cast, y = var_3071_cast);
            tensor<fp16, [512]> x_211_mean_0_to_fp16 = const()[name = tensor<string, []>("x_211_mean_0_to_fp16"), val = tensor<fp16, [512]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(25707328)))];
            tensor<fp16, [512]> x_211_variance_0_to_fp16 = const()[name = tensor<string, []>("x_211_variance_0_to_fp16"), val = tensor<fp16, [512]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(25708416)))];
            tensor<fp16, [512]> x_211_gamma_0_to_fp16 = const()[name = tensor<string, []>("x_211_gamma_0_to_fp16"), val = tensor<fp16, [512]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(25709504)))];
            tensor<fp16, [512]> x_211_beta_0_to_fp16 = const()[name = tensor<string, []>("x_211_beta_0_to_fp16"), val = tensor<fp16, [512]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(25710592)))];
            tensor<fp16, []> x_211_epsilon_0_to_fp16 = const()[name = tensor<string, []>("x_211_epsilon_0_to_fp16"), val = tensor<fp16, []>(1.00135803e-05)];
            tensor<fp16, [1, 512, 1, 4]> x_211_cast = batch_norm(beta = x_211_beta_0_to_fp16, epsilon = x_211_epsilon_0_to_fp16, gamma = x_211_gamma_0_to_fp16, mean = x_211_mean_0_to_fp16, variance = x_211_variance_0_to_fp16, x = var_3072_cast);
            tensor<bool, []> x_213_interleave_0 = const()[name = tensor<string, []>("x_213_interleave_0"), val = tensor<bool, []>(false)];
            tensor<fp16, [1, 512, 1, 36]> x_213_cast = concat(axis = var_2803, interleave = x_213_interleave_0, values = (var_301_cast_1, x_211_cast));
            tensor<int32, [4]> x_215_begin_0 = const()[name = tensor<string, []>("x_215_begin_0"), val = tensor<int32, [4]>([0, 0, 0, 12])];
            tensor<int32, [4]> x_215_end_0 = const()[name = tensor<string, []>("x_215_end_0"), val = tensor<int32, [4]>([1, 512, 1, 36])];
            tensor<bool, [4]> x_215_end_mask_0 = const()[name = tensor<string, []>("x_215_end_mask_0"), val = tensor<bool, [4]>([true, true, true, true])];
            tensor<fp16, [1, 512, 1, 24]> x_215_cast = slice_by_index(begin = x_215_begin_0, end = x_215_end_0, end_mask = x_215_end_mask_0, x = x_213_cast);
            tensor<int32, [4]> x_217_begin_0 = const()[name = tensor<string, []>("x_217_begin_0"), val = tensor<int32, [4]>([0, 0, 0, 12])];
            tensor<int32, [4]> x_217_end_0 = const()[name = tensor<string, []>("x_217_end_0"), val = tensor<int32, [4]>([1, 512, 1, 24])];
            tensor<bool, [4]> x_217_end_mask_0 = const()[name = tensor<string, []>("x_217_end_mask_0"), val = tensor<bool, [4]>([true, true, true, true])];
            tensor<fp16, [1, 512, 1, 12]> x_217_cast = slice_by_index(begin = x_217_begin_0, end = x_217_end_0, end_mask = x_217_end_mask_0, x = x_215_cast);
            tensor<int32, [4]> x_219_begin_0 = const()[name = tensor<string, []>("x_219_begin_0"), val = tensor<int32, [4]>([0, 0, 0, 1])];
            tensor<int32, [4]> x_219_end_0 = const()[name = tensor<string, []>("x_219_end_0"), val = tensor<int32, [4]>([1, 512, 1, 12])];
            tensor<bool, [4]> x_219_end_mask_0 = const()[name = tensor<string, []>("x_219_end_mask_0"), val = tensor<bool, [4]>([true, true, true, true])];
            tensor<fp16, [1, 512, 1, 11]> x_219_cast = slice_by_index(begin = x_219_begin_0, end = x_219_end_0, end_mask = x_219_end_mask_0, x = x_217_cast);
            tensor<int32, [4]> var_3112_begin_0 = const()[name = tensor<string, []>("op_3112_begin_0"), val = tensor<int32, [4]>([0, 0, 0, -7])];
            tensor<int32, [4]> var_3112_end_0 = const()[name = tensor<string, []>("op_3112_end_0"), val = tensor<int32, [4]>([1, 512, 1, 11])];
            tensor<bool, [4]> var_3112_end_mask_0 = const()[name = tensor<string, []>("op_3112_end_mask_0"), val = tensor<bool, [4]>([true, true, true, true])];
            tensor<fp16, [1, 512, 1, 7]> var_3112_cast = slice_by_index(begin = var_3112_begin_0, end = var_3112_end_0, end_mask = var_3112_end_mask_0, x = x_219_cast);
            tensor<int32, [2]> var_3114 = const()[name = tensor<string, []>("op_3114"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_3116 = const()[name = tensor<string, []>("op_3116"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> x_221_pad_type_0 = const()[name = tensor<string, []>("x_221_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> x_221_pad_0 = const()[name = tensor<string, []>("x_221_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [1024, 512, 1, 1]> op_3113_to_fp16_affine_quantized = constexpr_affine_dequantize()[axis = tensor<int32, []>(0), name = tensor<string, []>("op_3113_to_fp16_affine_quantized"), quantized_data = tensor<int8, [1024, 512, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(25711680))), scale = tensor<fp16, [1024]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(26237120))), zero_point = tensor<int8, [1024]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(26236032)))];
            tensor<fp16, [1024]> primary_encoder_encoders_1_conv_module_pointwise_conv1_bias_to_fp16 = const()[name = tensor<string, []>("primary_encoder_encoders_1_conv_module_pointwise_conv1_bias_to_fp16"), val = tensor<fp16, [1024]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(26239232)))];
            tensor<fp16, [1, 1024, 1, 11]> x_221_cast = conv(bias = primary_encoder_encoders_1_conv_module_pointwise_conv1_bias_to_fp16, dilations = var_3116, groups = var_2806, pad = x_221_pad_0, pad_type = x_221_pad_type_0, strides = var_3114, weight = op_3113_to_fp16_affine_quantized, x = x_219_cast);
            tensor<int32, [4]> var_3125_begin_0 = const()[name = tensor<string, []>("op_3125_begin_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<int32, [4]> var_3125_end_0 = const()[name = tensor<string, []>("op_3125_end_0"), val = tensor<int32, [4]>([1, 512, 1, 11])];
            tensor<bool, [4]> var_3125_end_mask_0 = const()[name = tensor<string, []>("op_3125_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [1, 512, 1, 11]> var_3125_cast = slice_by_index(begin = var_3125_begin_0, end = var_3125_end_0, end_mask = var_3125_end_mask_0, x = x_221_cast);
            tensor<int32, [4]> var_3129_begin_0 = const()[name = tensor<string, []>("op_3129_begin_0"), val = tensor<int32, [4]>([0, 512, 0, 0])];
            tensor<int32, [4]> var_3129_end_0 = const()[name = tensor<string, []>("op_3129_end_0"), val = tensor<int32, [4]>([1, 1024, 1, 11])];
            tensor<bool, [4]> var_3129_end_mask_0 = const()[name = tensor<string, []>("op_3129_end_mask_0"), val = tensor<bool, [4]>([true, true, true, true])];
            tensor<fp16, [1, 512, 1, 11]> var_3129_cast = slice_by_index(begin = var_3129_begin_0, end = var_3129_end_0, end_mask = var_3129_end_mask_0, x = x_221_cast);
            tensor<fp16, [1, 512, 1, 11]> var_3132_cast = sigmoid(x = var_3129_cast);
            tensor<fp16, [1, 512, 1, 11]> x_223_cast = mul(x = var_3125_cast, y = var_3132_cast);
            tensor<int32, [2]> var_3135 = const()[name = tensor<string, []>("op_3135"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_3137 = const()[name = tensor<string, []>("op_3137"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> x_225_pad_type_0 = const()[name = tensor<string, []>("x_225_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> x_225_pad_0 = const()[name = tensor<string, []>("x_225_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [512, 1, 1, 8]> op_3134_to_fp16_affine_quantized = constexpr_affine_dequantize()[axis = tensor<int32, []>(0), name = tensor<string, []>("op_3134_to_fp16_affine_quantized"), quantized_data = tensor<int8, [512, 1, 1, 8]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(26241344))), scale = tensor<fp16, [512]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(26246080))), zero_point = tensor<int8, [512]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(26245504)))];
            tensor<fp16, [512]> primary_encoder_encoders_1_conv_module_depthwise_conv_bias_to_fp16 = const()[name = tensor<string, []>("primary_encoder_encoders_1_conv_module_depthwise_conv_bias_to_fp16"), val = tensor<fp16, [512]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(26247168)))];
            tensor<fp16, [1, 512, 1, 4]> x_225_cast = conv(bias = primary_encoder_encoders_1_conv_module_depthwise_conv_bias_to_fp16, dilations = var_3137, groups = var_2794, pad = x_225_pad_0, pad_type = x_225_pad_type_0, strides = var_3135, weight = op_3134_to_fp16_affine_quantized, x = x_223_cast);
            tensor<fp16, [1, 512, 1, 4]> var_3140_cast = abs(x = x_225_cast);
            tensor<fp16, []> var_3141_to_fp16 = const()[name = tensor<string, []>("op_3141_to_fp16"), val = tensor<fp16, []>(0.001953125)];
            tensor<fp16, [1, 512, 1, 4]> var_3142_cast = mul(x = var_3140_cast, y = var_3141_to_fp16);
            tensor<int32, [1]> var_3143 = const()[name = tensor<string, []>("op_3143"), val = tensor<int32, [1]>([1])];
            tensor<fp16, [1, 1, 1, 4]> scale_133_cast = reduce_sum(axes = var_3143, keep_dims = var_2805, x = var_3142_cast);
            tensor<fp16, []> scale_135_epsilon_0_to_fp16 = const()[name = tensor<string, []>("scale_135_epsilon_0_to_fp16"), val = tensor<fp16, []>(5.96046448e-08)];
            tensor<fp16, [1, 1, 1, 4]> scale_135_cast = rsqrt(epsilon = scale_135_epsilon_0_to_fp16, x = scale_133_cast);
            tensor<fp16, [1, 1, 1, 4]> scale_137_cast = mul(x = scale_135_cast, y = scale_135_cast);
            tensor<fp16, [1, 512, 1, 4]> x_227_cast = mul(x = x_225_cast, y = scale_137_cast);
            tensor<fp16, []> var_3148_to_fp16 = const()[name = tensor<string, []>("op_3148_to_fp16"), val = tensor<fp16, []>(-0.001953125)];
            tensor<fp16, [1, 512, 1, 4]> var_3149_cast = mul(x = x_227_cast, y = var_3148_to_fp16);
            tensor<int32, [1]> var_3150 = const()[name = tensor<string, []>("op_3150"), val = tensor<int32, [1]>([1])];
            tensor<fp16, [1, 1, 1, 4]> x_mean_45_cast = reduce_sum(axes = var_3150, keep_dims = var_2805, x = var_3149_cast);
            tensor<fp16, [1, 512, 1, 4]> x_zero_mean_45_cast = add(x = x_227_cast, y = x_mean_45_cast);
            tensor<fp16, []> var_3153_to_fp16 = const()[name = tensor<string, []>("op_3153_to_fp16"), val = tensor<fp16, []>(0.001953125)];
            tensor<fp16, [1, 512, 1, 4]> var_3154_cast = mul(x = x_zero_mean_45_cast, y = var_3153_to_fp16);
            tensor<fp16, [1, 512, 1, 4]> var_3155_cast = mul(x = var_3154_cast, y = x_zero_mean_45_cast);
            tensor<int32, [1]> var_3156 = const()[name = tensor<string, []>("op_3156"), val = tensor<int32, [1]>([1])];
            tensor<fp16, [1, 1, 1, 4]> x_var_45_cast = reduce_sum(axes = var_3156, keep_dims = var_2805, x = var_3155_cast);
            tensor<fp16, []> var_3158_to_fp16 = const()[name = tensor<string, []>("op_3158_to_fp16"), val = tensor<fp16, []>(1.00135803e-05)];
            tensor<fp16, [1, 1, 1, 4]> var_3159_cast = add(x = x_var_45_cast, y = var_3158_to_fp16);
            tensor<fp16, []> var_3160_epsilon_0_to_fp16 = const()[name = tensor<string, []>("op_3160_epsilon_0_to_fp16"), val = tensor<fp16, []>(5.96046448e-08)];
            tensor<fp16, [1, 1, 1, 4]> var_3160_cast = rsqrt(epsilon = var_3160_epsilon_0_to_fp16, x = var_3159_cast);
            tensor<fp16, [1, 512, 1, 4]> var_3161_cast = mul(x = x_zero_mean_45_cast, y = var_3160_cast);
            tensor<fp16, [512]> input_117_mean_0_to_fp16 = const()[name = tensor<string, []>("input_117_mean_0_to_fp16"), val = tensor<fp16, [512]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(26248256)))];
            tensor<fp16, [512]> input_117_variance_0_to_fp16 = const()[name = tensor<string, []>("input_117_variance_0_to_fp16"), val = tensor<fp16, [512]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(26249344)))];
            tensor<fp16, [512]> input_117_gamma_0_to_fp16 = const()[name = tensor<string, []>("input_117_gamma_0_to_fp16"), val = tensor<fp16, [512]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(26250432)))];
            tensor<fp16, [512]> input_117_beta_0_to_fp16 = const()[name = tensor<string, []>("input_117_beta_0_to_fp16"), val = tensor<fp16, [512]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(26251520)))];
            tensor<fp16, []> input_117_epsilon_0_to_fp16 = const()[name = tensor<string, []>("input_117_epsilon_0_to_fp16"), val = tensor<fp16, []>(1.00135803e-05)];
            tensor<fp16, [1, 512, 1, 4]> input_117_cast = batch_norm(beta = input_117_beta_0_to_fp16, epsilon = input_117_epsilon_0_to_fp16, gamma = input_117_gamma_0_to_fp16, mean = input_117_mean_0_to_fp16, variance = input_117_variance_0_to_fp16, x = var_3161_cast);
            tensor<fp16, [1, 512, 1, 4]> x_229_cast = silu(x = input_117_cast);
            tensor<int32, [2]> var_3170 = const()[name = tensor<string, []>("op_3170"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_3172 = const()[name = tensor<string, []>("op_3172"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> input_119_pad_type_0 = const()[name = tensor<string, []>("input_119_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> input_119_pad_0 = const()[name = tensor<string, []>("input_119_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [512, 512, 1, 1]> op_3169_to_fp16_affine_quantized = constexpr_affine_dequantize()[axis = tensor<int32, []>(0), name = tensor<string, []>("op_3169_to_fp16_affine_quantized"), quantized_data = tensor<int8, [512, 512, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(26252608))), scale = tensor<fp16, [512]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(26515392))), zero_point = tensor<int8, [512]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(26514816)))];
            tensor<fp16, [512]> primary_encoder_encoders_1_conv_module_pointwise_conv2_bias_to_fp16 = const()[name = tensor<string, []>("primary_encoder_encoders_1_conv_module_pointwise_conv2_bias_to_fp16"), val = tensor<fp16, [512]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(26516480)))];
            tensor<fp16, [1, 512, 1, 4]> input_119_cast = conv(bias = primary_encoder_encoders_1_conv_module_pointwise_conv2_bias_to_fp16, dilations = var_3172, groups = var_2806, pad = input_119_pad_0, pad_type = input_119_pad_type_0, strides = var_3170, weight = op_3169_to_fp16_affine_quantized, x = x_229_cast);
            tensor<fp16, [1, 512, 1, 4]> x_233_cast = add(x = x_207_cast, y = input_119_cast);
            tensor<fp16, [1, 512, 1, 4]> var_3180_cast = abs(x = x_233_cast);
            tensor<fp16, []> var_3181_to_fp16 = const()[name = tensor<string, []>("op_3181_to_fp16"), val = tensor<fp16, []>(0.001953125)];
            tensor<fp16, [1, 512, 1, 4]> var_3182_cast = mul(x = var_3180_cast, y = var_3181_to_fp16);
            tensor<int32, [1]> var_3183 = const()[name = tensor<string, []>("op_3183"), val = tensor<int32, [1]>([1])];
            tensor<fp16, [1, 1, 1, 4]> scale_139_cast = reduce_sum(axes = var_3183, keep_dims = var_2805, x = var_3182_cast);
            tensor<fp16, []> scale_141_epsilon_0_to_fp16 = const()[name = tensor<string, []>("scale_141_epsilon_0_to_fp16"), val = tensor<fp16, []>(5.96046448e-08)];
            tensor<fp16, [1, 1, 1, 4]> scale_141_cast = rsqrt(epsilon = scale_141_epsilon_0_to_fp16, x = scale_139_cast);
            tensor<fp16, [1, 1, 1, 4]> scale_143_cast = mul(x = scale_141_cast, y = scale_141_cast);
            tensor<fp16, [1, 512, 1, 4]> x_235_cast = mul(x = x_233_cast, y = scale_143_cast);
            tensor<fp16, []> var_3188_to_fp16 = const()[name = tensor<string, []>("op_3188_to_fp16"), val = tensor<fp16, []>(-0.001953125)];
            tensor<fp16, [1, 512, 1, 4]> var_3189_cast = mul(x = x_235_cast, y = var_3188_to_fp16);
            tensor<int32, [1]> var_3190 = const()[name = tensor<string, []>("op_3190"), val = tensor<int32, [1]>([1])];
            tensor<fp16, [1, 1, 1, 4]> x_mean_47_cast = reduce_sum(axes = var_3190, keep_dims = var_2805, x = var_3189_cast);
            tensor<fp16, [1, 512, 1, 4]> x_zero_mean_47_cast = add(x = x_235_cast, y = x_mean_47_cast);
            tensor<fp16, []> var_3193_to_fp16 = const()[name = tensor<string, []>("op_3193_to_fp16"), val = tensor<fp16, []>(0.001953125)];
            tensor<fp16, [1, 512, 1, 4]> var_3194_cast = mul(x = x_zero_mean_47_cast, y = var_3193_to_fp16);
            tensor<fp16, [1, 512, 1, 4]> var_3195_cast = mul(x = var_3194_cast, y = x_zero_mean_47_cast);
            tensor<int32, [1]> var_3196 = const()[name = tensor<string, []>("op_3196"), val = tensor<int32, [1]>([1])];
            tensor<fp16, [1, 1, 1, 4]> x_var_47_cast = reduce_sum(axes = var_3196, keep_dims = var_2805, x = var_3195_cast);
            tensor<fp16, []> var_3198_to_fp16 = const()[name = tensor<string, []>("op_3198_to_fp16"), val = tensor<fp16, []>(1.00135803e-05)];
            tensor<fp16, [1, 1, 1, 4]> var_3199_cast = add(x = x_var_47_cast, y = var_3198_to_fp16);
            tensor<fp16, []> var_3200_epsilon_0_to_fp16 = const()[name = tensor<string, []>("op_3200_epsilon_0_to_fp16"), val = tensor<fp16, []>(5.96046448e-08)];
            tensor<fp16, [1, 1, 1, 4]> var_3200_cast = rsqrt(epsilon = var_3200_epsilon_0_to_fp16, x = var_3199_cast);
            tensor<fp16, [1, 512, 1, 4]> var_3201_cast = mul(x = x_zero_mean_47_cast, y = var_3200_cast);
            tensor<fp16, [512]> x_237_mean_0_to_fp16 = const()[name = tensor<string, []>("x_237_mean_0_to_fp16"), val = tensor<fp16, [512]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(26517568)))];
            tensor<fp16, [512]> x_237_variance_0_to_fp16 = const()[name = tensor<string, []>("x_237_variance_0_to_fp16"), val = tensor<fp16, [512]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(26518656)))];
            tensor<fp16, [512]> x_237_gamma_0_to_fp16 = const()[name = tensor<string, []>("x_237_gamma_0_to_fp16"), val = tensor<fp16, [512]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(26519744)))];
            tensor<fp16, [512]> x_237_beta_0_to_fp16 = const()[name = tensor<string, []>("x_237_beta_0_to_fp16"), val = tensor<fp16, [512]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(26520832)))];
            tensor<fp16, []> x_237_epsilon_0_to_fp16 = const()[name = tensor<string, []>("x_237_epsilon_0_to_fp16"), val = tensor<fp16, []>(1.00135803e-05)];
            tensor<fp16, [1, 512, 1, 4]> x_237_cast = batch_norm(beta = x_237_beta_0_to_fp16, epsilon = x_237_epsilon_0_to_fp16, gamma = x_237_gamma_0_to_fp16, mean = x_237_mean_0_to_fp16, variance = x_237_variance_0_to_fp16, x = var_3201_cast);
            tensor<int32, [2]> var_3212 = const()[name = tensor<string, []>("op_3212"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_3214 = const()[name = tensor<string, []>("op_3214"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> input_121_pad_type_0 = const()[name = tensor<string, []>("input_121_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> input_121_pad_0 = const()[name = tensor<string, []>("input_121_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [2048, 512, 1, 1]> op_3211_to_fp16_affine_quantized = constexpr_affine_dequantize()[axis = tensor<int32, []>(0), name = tensor<string, []>("op_3211_to_fp16_affine_quantized"), quantized_data = tensor<int8, [2048, 512, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(26521920))), scale = tensor<fp16, [2048]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(27572672))), zero_point = tensor<int8, [2048]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(27570560)))];
            tensor<fp16, [2048]> primary_encoder_encoders_1_feed_forward_w_1_bias_to_fp16 = const()[name = tensor<string, []>("primary_encoder_encoders_1_feed_forward_w_1_bias_to_fp16"), val = tensor<fp16, [2048]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(27576832)))];
            tensor<fp16, [1, 2048, 1, 4]> input_121_cast = conv(bias = primary_encoder_encoders_1_feed_forward_w_1_bias_to_fp16, dilations = var_3214, groups = var_2806, pad = input_121_pad_0, pad_type = input_121_pad_type_0, strides = var_3212, weight = op_3211_to_fp16_affine_quantized, x = x_237_cast);
            tensor<fp16, [1, 2048, 1, 4]> input_123_cast = silu(x = input_121_cast);
            tensor<int32, [2]> var_3223 = const()[name = tensor<string, []>("op_3223"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_3225 = const()[name = tensor<string, []>("op_3225"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> input_125_pad_type_0 = const()[name = tensor<string, []>("input_125_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> input_125_pad_0 = const()[name = tensor<string, []>("input_125_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [512, 2048, 1, 1]> op_3230_weight_0_to_fp16_affine_quantized = constexpr_affine_dequantize()[axis = tensor<int32, []>(0), name = tensor<string, []>("op_3230_weight_0_to_fp16_affine_quantized"), quantized_data = tensor<int8, [512, 2048, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(27580992))), scale = tensor<fp16, [512]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(28630208))), zero_point = tensor<int8, [512]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(28629632)))];
            tensor<fp16, [512]> var_3230_bias_0_to_fp16 = const()[name = tensor<string, []>("op_3230_bias_0_to_fp16"), val = tensor<fp16, [512]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(28631296)))];
            tensor<fp16, [1, 512, 1, 4]> var_3230_cast = conv(bias = var_3230_bias_0_to_fp16, dilations = var_3225, groups = var_2806, pad = input_125_pad_0, pad_type = input_125_pad_type_0, strides = var_3223, weight = op_3230_weight_0_to_fp16_affine_quantized, x = input_123_cast);
            tensor<fp16, [1, 512, 1, 4]> x_243_cast = add(x = x_233_cast, y = var_3230_cast);
            tensor<fp16, [1, 512, 1, 4]> var_3232_cast = abs(x = x_243_cast);
            tensor<fp16, []> var_3233_to_fp16 = const()[name = tensor<string, []>("op_3233_to_fp16"), val = tensor<fp16, []>(0.001953125)];
            tensor<fp16, [1, 512, 1, 4]> var_3234_cast = mul(x = var_3232_cast, y = var_3233_to_fp16);
            tensor<int32, [1]> var_3235 = const()[name = tensor<string, []>("op_3235"), val = tensor<int32, [1]>([1])];
            tensor<fp16, [1, 1, 1, 4]> scale_145_cast = reduce_sum(axes = var_3235, keep_dims = var_2805, x = var_3234_cast);
            tensor<fp16, []> scale_147_epsilon_0_to_fp16 = const()[name = tensor<string, []>("scale_147_epsilon_0_to_fp16"), val = tensor<fp16, []>(5.96046448e-08)];
            tensor<fp16, [1, 1, 1, 4]> scale_147_cast = rsqrt(epsilon = scale_147_epsilon_0_to_fp16, x = scale_145_cast);
            tensor<fp16, [1, 1, 1, 4]> scale_149_cast = mul(x = scale_147_cast, y = scale_147_cast);
            tensor<fp16, [1, 512, 1, 4]> x_245_cast = mul(x = x_243_cast, y = scale_149_cast);
            tensor<fp16, []> var_3240_to_fp16 = const()[name = tensor<string, []>("op_3240_to_fp16"), val = tensor<fp16, []>(-0.001953125)];
            tensor<fp16, [1, 512, 1, 4]> var_3241_cast = mul(x = x_245_cast, y = var_3240_to_fp16);
            tensor<int32, [1]> var_3242 = const()[name = tensor<string, []>("op_3242"), val = tensor<int32, [1]>([1])];
            tensor<fp16, [1, 1, 1, 4]> x_mean_49_cast = reduce_sum(axes = var_3242, keep_dims = var_2805, x = var_3241_cast);
            tensor<fp16, [1, 512, 1, 4]> x_zero_mean_49_cast = add(x = x_245_cast, y = x_mean_49_cast);
            tensor<fp16, []> var_3245_to_fp16 = const()[name = tensor<string, []>("op_3245_to_fp16"), val = tensor<fp16, []>(0.001953125)];
            tensor<fp16, [1, 512, 1, 4]> var_3246_cast = mul(x = x_zero_mean_49_cast, y = var_3245_to_fp16);
            tensor<fp16, [1, 512, 1, 4]> var_3247_cast = mul(x = var_3246_cast, y = x_zero_mean_49_cast);
            tensor<int32, [1]> var_3248 = const()[name = tensor<string, []>("op_3248"), val = tensor<int32, [1]>([1])];
            tensor<fp16, [1, 1, 1, 4]> x_var_49_cast = reduce_sum(axes = var_3248, keep_dims = var_2805, x = var_3247_cast);
            tensor<fp16, []> var_3250_to_fp16 = const()[name = tensor<string, []>("op_3250_to_fp16"), val = tensor<fp16, []>(1.00135803e-05)];
            tensor<fp16, [1, 1, 1, 4]> var_3251_cast = add(x = x_var_49_cast, y = var_3250_to_fp16);
            tensor<fp16, []> var_3252_epsilon_0_to_fp16 = const()[name = tensor<string, []>("op_3252_epsilon_0_to_fp16"), val = tensor<fp16, []>(5.96046448e-08)];
            tensor<fp16, [1, 1, 1, 4]> var_3252_cast = rsqrt(epsilon = var_3252_epsilon_0_to_fp16, x = var_3251_cast);
            tensor<fp16, [1, 512, 1, 4]> var_3253_cast = mul(x = x_zero_mean_49_cast, y = var_3252_cast);
            tensor<fp16, [512]> x_247_mean_0_to_fp16 = const()[name = tensor<string, []>("x_247_mean_0_to_fp16"), val = tensor<fp16, [512]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(28632384)))];
            tensor<fp16, [512]> x_247_variance_0_to_fp16 = const()[name = tensor<string, []>("x_247_variance_0_to_fp16"), val = tensor<fp16, [512]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(28633472)))];
            tensor<fp16, [512]> x_247_gamma_0_to_fp16 = const()[name = tensor<string, []>("x_247_gamma_0_to_fp16"), val = tensor<fp16, [512]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(28634560)))];
            tensor<fp16, [512]> x_247_beta_0_to_fp16 = const()[name = tensor<string, []>("x_247_beta_0_to_fp16"), val = tensor<fp16, [512]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(28635648)))];
            tensor<fp16, []> x_247_epsilon_0_to_fp16 = const()[name = tensor<string, []>("x_247_epsilon_0_to_fp16"), val = tensor<fp16, []>(1.00135803e-05)];
            tensor<fp16, [1, 512, 1, 4]> x_247_cast = batch_norm(beta = x_247_beta_0_to_fp16, epsilon = x_247_epsilon_0_to_fp16, gamma = x_247_gamma_0_to_fp16, mean = x_247_mean_0_to_fp16, variance = x_247_variance_0_to_fp16, x = var_3253_cast);
            tensor<int32, []> var_3268 = const()[name = tensor<string, []>("op_3268"), val = tensor<int32, []>(512)];
            tensor<int32, []> var_3274 = const()[name = tensor<string, []>("op_3274"), val = tensor<int32, []>(2)];
            tensor<int32, []> var_3277 = const()[name = tensor<string, []>("op_3277"), val = tensor<int32, []>(-1)];
            tensor<bool, []> var_3279 = const()[name = tensor<string, []>("op_3279"), val = tensor<bool, []>(true)];
            tensor<int32, []> var_3280 = const()[name = tensor<string, []>("op_3280"), val = tensor<int32, []>(1)];
            tensor<fp16, [1, 512, 1, 4]> var_3327_cast = abs(x = x_247_cast);
            tensor<fp16, []> var_3328_to_fp16 = const()[name = tensor<string, []>("op_3328_to_fp16"), val = tensor<fp16, []>(0.001953125)];
            tensor<fp16, [1, 512, 1, 4]> var_3329_cast = mul(x = var_3327_cast, y = var_3328_to_fp16);
            tensor<int32, [1]> var_3330 = const()[name = tensor<string, []>("op_3330"), val = tensor<int32, [1]>([1])];
            tensor<fp16, [1, 1, 1, 4]> scale_151_cast = reduce_sum(axes = var_3330, keep_dims = var_3279, x = var_3329_cast);
            tensor<fp16, []> scale_153_epsilon_0_to_fp16 = const()[name = tensor<string, []>("scale_153_epsilon_0_to_fp16"), val = tensor<fp16, []>(5.96046448e-08)];
            tensor<fp16, [1, 1, 1, 4]> scale_153_cast = rsqrt(epsilon = scale_153_epsilon_0_to_fp16, x = scale_151_cast);
            tensor<fp16, [1, 1, 1, 4]> scale_155_cast = mul(x = scale_153_cast, y = scale_153_cast);
            tensor<fp16, [1, 512, 1, 4]> x_249_cast = mul(x = x_247_cast, y = scale_155_cast);
            tensor<fp16, []> var_3335_to_fp16 = const()[name = tensor<string, []>("op_3335_to_fp16"), val = tensor<fp16, []>(-0.001953125)];
            tensor<fp16, [1, 512, 1, 4]> var_3336_cast = mul(x = x_249_cast, y = var_3335_to_fp16);
            tensor<int32, [1]> var_3337 = const()[name = tensor<string, []>("op_3337"), val = tensor<int32, [1]>([1])];
            tensor<fp16, [1, 1, 1, 4]> x_mean_51_cast = reduce_sum(axes = var_3337, keep_dims = var_3279, x = var_3336_cast);
            tensor<fp16, [1, 512, 1, 4]> x_zero_mean_51_cast = add(x = x_249_cast, y = x_mean_51_cast);
            tensor<fp16, []> var_3340_to_fp16 = const()[name = tensor<string, []>("op_3340_to_fp16"), val = tensor<fp16, []>(0.001953125)];
            tensor<fp16, [1, 512, 1, 4]> var_3341_cast = mul(x = x_zero_mean_51_cast, y = var_3340_to_fp16);
            tensor<fp16, [1, 512, 1, 4]> var_3342_cast = mul(x = var_3341_cast, y = x_zero_mean_51_cast);
            tensor<int32, [1]> var_3343 = const()[name = tensor<string, []>("op_3343"), val = tensor<int32, [1]>([1])];
            tensor<fp16, [1, 1, 1, 4]> x_var_51_cast = reduce_sum(axes = var_3343, keep_dims = var_3279, x = var_3342_cast);
            tensor<fp16, []> var_3345_to_fp16 = const()[name = tensor<string, []>("op_3345_to_fp16"), val = tensor<fp16, []>(1.00135803e-05)];
            tensor<fp16, [1, 1, 1, 4]> var_3346_cast = add(x = x_var_51_cast, y = var_3345_to_fp16);
            tensor<fp16, []> var_3347_epsilon_0_to_fp16 = const()[name = tensor<string, []>("op_3347_epsilon_0_to_fp16"), val = tensor<fp16, []>(5.96046448e-08)];
            tensor<fp16, [1, 1, 1, 4]> var_3347_cast = rsqrt(epsilon = var_3347_epsilon_0_to_fp16, x = var_3346_cast);
            tensor<fp16, [1, 512, 1, 4]> var_3348_cast = mul(x = x_zero_mean_51_cast, y = var_3347_cast);
            tensor<fp16, [512]> x_251_mean_0_to_fp16 = const()[name = tensor<string, []>("x_251_mean_0_to_fp16"), val = tensor<fp16, [512]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(28636736)))];
            tensor<fp16, [512]> x_251_variance_0_to_fp16 = const()[name = tensor<string, []>("x_251_variance_0_to_fp16"), val = tensor<fp16, [512]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(28637824)))];
            tensor<fp16, [512]> x_251_gamma_0_to_fp16 = const()[name = tensor<string, []>("x_251_gamma_0_to_fp16"), val = tensor<fp16, [512]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(28638912)))];
            tensor<fp16, [512]> x_251_beta_0_to_fp16 = const()[name = tensor<string, []>("x_251_beta_0_to_fp16"), val = tensor<fp16, [512]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(28640000)))];
            tensor<fp16, []> x_251_epsilon_0_to_fp16 = const()[name = tensor<string, []>("x_251_epsilon_0_to_fp16"), val = tensor<fp16, []>(1.00135803e-05)];
            tensor<fp16, [1, 512, 1, 4]> x_251_cast = batch_norm(beta = x_251_beta_0_to_fp16, epsilon = x_251_epsilon_0_to_fp16, gamma = x_251_gamma_0_to_fp16, mean = x_251_mean_0_to_fp16, variance = x_251_variance_0_to_fp16, x = var_3348_cast);
            tensor<int32, [2]> var_3359 = const()[name = tensor<string, []>("op_3359"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_3361 = const()[name = tensor<string, []>("op_3361"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> input_127_pad_type_0 = const()[name = tensor<string, []>("input_127_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> input_127_pad_0 = const()[name = tensor<string, []>("input_127_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [2048, 512, 1, 1]> op_3358_to_fp16_affine_quantized = constexpr_affine_dequantize()[axis = tensor<int32, []>(0), name = tensor<string, []>("op_3358_to_fp16_affine_quantized"), quantized_data = tensor<int8, [2048, 512, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(28641088))), scale = tensor<fp16, [2048]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(29691840))), zero_point = tensor<int8, [2048]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(29689728)))];
            tensor<fp16, [2048]> primary_encoder_encoders_2_feed_forward_macaron_w_1_bias_to_fp16 = const()[name = tensor<string, []>("primary_encoder_encoders_2_feed_forward_macaron_w_1_bias_to_fp16"), val = tensor<fp16, [2048]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(29696000)))];
            tensor<fp16, [1, 2048, 1, 4]> input_127_cast = conv(bias = primary_encoder_encoders_2_feed_forward_macaron_w_1_bias_to_fp16, dilations = var_3361, groups = var_3280, pad = input_127_pad_0, pad_type = input_127_pad_type_0, strides = var_3359, weight = op_3358_to_fp16_affine_quantized, x = x_251_cast);
            tensor<fp16, [1, 2048, 1, 4]> input_129_cast = silu(x = input_127_cast);
            tensor<int32, [2]> var_3370 = const()[name = tensor<string, []>("op_3370"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_3372 = const()[name = tensor<string, []>("op_3372"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> input_131_pad_type_0 = const()[name = tensor<string, []>("input_131_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> input_131_pad_0 = const()[name = tensor<string, []>("input_131_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [512, 2048, 1, 1]> op_3377_weight_0_to_fp16_affine_quantized = constexpr_affine_dequantize()[axis = tensor<int32, []>(0), name = tensor<string, []>("op_3377_weight_0_to_fp16_affine_quantized"), quantized_data = tensor<int8, [512, 2048, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(29700160))), scale = tensor<fp16, [512]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(30749376))), zero_point = tensor<int8, [512]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(30748800)))];
            tensor<fp16, [512]> var_3377_bias_0_to_fp16 = const()[name = tensor<string, []>("op_3377_bias_0_to_fp16"), val = tensor<fp16, [512]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(30750464)))];
            tensor<fp16, [1, 512, 1, 4]> var_3377_cast = conv(bias = var_3377_bias_0_to_fp16, dilations = var_3372, groups = var_3280, pad = input_131_pad_0, pad_type = input_131_pad_type_0, strides = var_3370, weight = op_3377_weight_0_to_fp16_affine_quantized, x = input_129_cast);
            tensor<fp16, [1, 512, 1, 4]> x_257_cast = add(x = x_247_cast, y = var_3377_cast);
            tensor<fp16, [1, 512, 1, 4]> var_3379_cast = abs(x = x_257_cast);
            tensor<fp16, []> var_3380_to_fp16 = const()[name = tensor<string, []>("op_3380_to_fp16"), val = tensor<fp16, []>(0.001953125)];
            tensor<fp16, [1, 512, 1, 4]> var_3381_cast = mul(x = var_3379_cast, y = var_3380_to_fp16);
            tensor<int32, [1]> var_3382 = const()[name = tensor<string, []>("op_3382"), val = tensor<int32, [1]>([1])];
            tensor<fp16, [1, 1, 1, 4]> scale_157_cast = reduce_sum(axes = var_3382, keep_dims = var_3279, x = var_3381_cast);
            tensor<fp16, []> scale_159_epsilon_0_to_fp16 = const()[name = tensor<string, []>("scale_159_epsilon_0_to_fp16"), val = tensor<fp16, []>(5.96046448e-08)];
            tensor<fp16, [1, 1, 1, 4]> scale_159_cast = rsqrt(epsilon = scale_159_epsilon_0_to_fp16, x = scale_157_cast);
            tensor<fp16, [1, 1, 1, 4]> scale_161_cast = mul(x = scale_159_cast, y = scale_159_cast);
            tensor<fp16, [1, 512, 1, 4]> x_259_cast = mul(x = x_257_cast, y = scale_161_cast);
            tensor<fp16, []> var_3387_to_fp16 = const()[name = tensor<string, []>("op_3387_to_fp16"), val = tensor<fp16, []>(-0.001953125)];
            tensor<fp16, [1, 512, 1, 4]> var_3388_cast = mul(x = x_259_cast, y = var_3387_to_fp16);
            tensor<int32, [1]> var_3389 = const()[name = tensor<string, []>("op_3389"), val = tensor<int32, [1]>([1])];
            tensor<fp16, [1, 1, 1, 4]> x_mean_53_cast = reduce_sum(axes = var_3389, keep_dims = var_3279, x = var_3388_cast);
            tensor<fp16, [1, 512, 1, 4]> x_zero_mean_53_cast = add(x = x_259_cast, y = x_mean_53_cast);
            tensor<fp16, []> var_3392_to_fp16 = const()[name = tensor<string, []>("op_3392_to_fp16"), val = tensor<fp16, []>(0.001953125)];
            tensor<fp16, [1, 512, 1, 4]> var_3393_cast = mul(x = x_zero_mean_53_cast, y = var_3392_to_fp16);
            tensor<fp16, [1, 512, 1, 4]> var_3394_cast = mul(x = var_3393_cast, y = x_zero_mean_53_cast);
            tensor<int32, [1]> var_3395 = const()[name = tensor<string, []>("op_3395"), val = tensor<int32, [1]>([1])];
            tensor<fp16, [1, 1, 1, 4]> x_var_53_cast = reduce_sum(axes = var_3395, keep_dims = var_3279, x = var_3394_cast);
            tensor<fp16, []> var_3397_to_fp16 = const()[name = tensor<string, []>("op_3397_to_fp16"), val = tensor<fp16, []>(1.00135803e-05)];
            tensor<fp16, [1, 1, 1, 4]> var_3398_cast = add(x = x_var_53_cast, y = var_3397_to_fp16);
            tensor<fp16, []> var_3399_epsilon_0_to_fp16 = const()[name = tensor<string, []>("op_3399_epsilon_0_to_fp16"), val = tensor<fp16, []>(5.96046448e-08)];
            tensor<fp16, [1, 1, 1, 4]> var_3399_cast = rsqrt(epsilon = var_3399_epsilon_0_to_fp16, x = var_3398_cast);
            tensor<fp16, [1, 512, 1, 4]> var_3400_cast = mul(x = x_zero_mean_53_cast, y = var_3399_cast);
            tensor<fp16, [512]> query_3_mean_0_to_fp16 = const()[name = tensor<string, []>("query_3_mean_0_to_fp16"), val = tensor<fp16, [512]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(30751552)))];
            tensor<fp16, [512]> query_3_variance_0_to_fp16 = const()[name = tensor<string, []>("query_3_variance_0_to_fp16"), val = tensor<fp16, [512]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(30752640)))];
            tensor<fp16, [512]> query_3_gamma_0_to_fp16 = const()[name = tensor<string, []>("query_3_gamma_0_to_fp16"), val = tensor<fp16, [512]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(30753728)))];
            tensor<fp16, [512]> query_3_beta_0_to_fp16 = const()[name = tensor<string, []>("query_3_beta_0_to_fp16"), val = tensor<fp16, [512]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(30754816)))];
            tensor<fp16, []> query_3_epsilon_0_to_fp16 = const()[name = tensor<string, []>("query_3_epsilon_0_to_fp16"), val = tensor<fp16, []>(1.00135803e-05)];
            tensor<fp16, [1, 512, 1, 4]> query_3_cast = batch_norm(beta = query_3_beta_0_to_fp16, epsilon = query_3_epsilon_0_to_fp16, gamma = query_3_gamma_0_to_fp16, mean = query_3_mean_0_to_fp16, variance = query_3_variance_0_to_fp16, x = var_3400_cast);
            tensor<int32, [2]> var_3420 = const()[name = tensor<string, []>("op_3420"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_3422 = const()[name = tensor<string, []>("op_3422"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> var_3424_pad_type_0 = const()[name = tensor<string, []>("op_3424_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> var_3424_pad_0 = const()[name = tensor<string, []>("op_3424_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [512, 512, 1, 1]> op_3419_to_fp16_affine_quantized = constexpr_affine_dequantize()[axis = tensor<int32, []>(0), name = tensor<string, []>("op_3419_to_fp16_affine_quantized"), quantized_data = tensor<int8, [512, 512, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(30755904))), scale = tensor<fp16, [512]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(31018688))), zero_point = tensor<int8, [512]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(31018112)))];
            tensor<fp16, [512]> primary_encoder_encoders_2_self_attn_linear_v_bias_to_fp16 = const()[name = tensor<string, []>("primary_encoder_encoders_2_self_attn_linear_v_bias_to_fp16"), val = tensor<fp16, [512]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(31019776)))];
            tensor<fp16, [1, 512, 1, 4]> var_3424_cast = conv(bias = primary_encoder_encoders_2_self_attn_linear_v_bias_to_fp16, dilations = var_3422, groups = var_3280, pad = var_3424_pad_0, pad_type = var_3424_pad_type_0, strides = var_3420, weight = op_3419_to_fp16_affine_quantized, x = query_3_cast);
            tensor<int32, [8]> tile_28 = const()[name = tensor<string, []>("tile_28"), val = tensor<int32, [8]>([64, 64, 64, 64, 64, 64, 64, 64])];
            tensor<int32, []> var_3425_axis_0 = const()[name = tensor<string, []>("op_3425_axis_0"), val = tensor<int32, []>(1)];
            tensor<fp16, [1, 64, 1, 4]> var_3425_cast_0, tensor<fp16, [1, 64, 1, 4]> var_3425_cast_1, tensor<fp16, [1, 64, 1, 4]> var_3425_cast_2, tensor<fp16, [1, 64, 1, 4]> var_3425_cast_3, tensor<fp16, [1, 64, 1, 4]> var_3425_cast_4, tensor<fp16, [1, 64, 1, 4]> var_3425_cast_5, tensor<fp16, [1, 64, 1, 4]> var_3425_cast_6, tensor<fp16, [1, 64, 1, 4]> var_3425_cast_7 = split(axis = var_3425_axis_0, split_sizes = tile_28, x = var_3424_cast);
            tensor<int32, [8]> tile_29 = const()[name = tensor<string, []>("tile_29"), val = tensor<int32, [8]>([1, 1, 1, 1, 1, 1, 1, 1])];
            tensor<int32, []> var_3434_axis_0 = const()[name = tensor<string, []>("op_3434_axis_0"), val = tensor<int32, []>(2)];
            tensor<fp16, [1, 64, 1, 128]> var_3434_cast_0, tensor<fp16, [1, 64, 1, 128]> var_3434_cast_1, tensor<fp16, [1, 64, 1, 128]> var_3434_cast_2, tensor<fp16, [1, 64, 1, 128]> var_3434_cast_3, tensor<fp16, [1, 64, 1, 128]> var_3434_cast_4, tensor<fp16, [1, 64, 1, 128]> var_3434_cast_5, tensor<fp16, [1, 64, 1, 128]> var_3434_cast_6, tensor<fp16, [1, 64, 1, 128]> var_3434_cast_7 = split(axis = var_3434_axis_0, split_sizes = tile_29, x = var_321_cast_2);
            tensor<bool, []> var_3444_interleave_0 = const()[name = tensor<string, []>("op_3444_interleave_0"), val = tensor<bool, []>(false)];
            tensor<fp16, [1, 64, 1, 132]> var_3444_cast = concat(axis = var_3277, interleave = var_3444_interleave_0, values = (var_3434_cast_0, var_3425_cast_0));
            tensor<int32, [4]> var_3448_begin_0 = const()[name = tensor<string, []>("op_3448_begin_0"), val = tensor<int32, [4]>([0, 0, 0, 4])];
            tensor<int32, [4]> var_3448_end_0 = const()[name = tensor<string, []>("op_3448_end_0"), val = tensor<int32, [4]>([1, 64, 1, 132])];
            tensor<bool, [4]> var_3448_end_mask_0 = const()[name = tensor<string, []>("op_3448_end_mask_0"), val = tensor<bool, [4]>([true, true, true, true])];
            tensor<fp16, [1, 64, 1, 128]> var_3448_cast = slice_by_index(begin = var_3448_begin_0, end = var_3448_end_0, end_mask = var_3448_end_mask_0, x = var_3444_cast);
            tensor<bool, []> var_3450_interleave_0 = const()[name = tensor<string, []>("op_3450_interleave_0"), val = tensor<bool, []>(false)];
            tensor<fp16, [1, 64, 1, 132]> var_3450_cast = concat(axis = var_3277, interleave = var_3450_interleave_0, values = (var_3434_cast_1, var_3425_cast_1));
            tensor<int32, [4]> var_3454_begin_0 = const()[name = tensor<string, []>("op_3454_begin_0"), val = tensor<int32, [4]>([0, 0, 0, 4])];
            tensor<int32, [4]> var_3454_end_0 = const()[name = tensor<string, []>("op_3454_end_0"), val = tensor<int32, [4]>([1, 64, 1, 132])];
            tensor<bool, [4]> var_3454_end_mask_0 = const()[name = tensor<string, []>("op_3454_end_mask_0"), val = tensor<bool, [4]>([true, true, true, true])];
            tensor<fp16, [1, 64, 1, 128]> var_3454_cast = slice_by_index(begin = var_3454_begin_0, end = var_3454_end_0, end_mask = var_3454_end_mask_0, x = var_3450_cast);
            tensor<bool, []> var_3456_interleave_0 = const()[name = tensor<string, []>("op_3456_interleave_0"), val = tensor<bool, []>(false)];
            tensor<fp16, [1, 64, 1, 132]> var_3456_cast = concat(axis = var_3277, interleave = var_3456_interleave_0, values = (var_3434_cast_2, var_3425_cast_2));
            tensor<int32, [4]> var_3460_begin_0 = const()[name = tensor<string, []>("op_3460_begin_0"), val = tensor<int32, [4]>([0, 0, 0, 4])];
            tensor<int32, [4]> var_3460_end_0 = const()[name = tensor<string, []>("op_3460_end_0"), val = tensor<int32, [4]>([1, 64, 1, 132])];
            tensor<bool, [4]> var_3460_end_mask_0 = const()[name = tensor<string, []>("op_3460_end_mask_0"), val = tensor<bool, [4]>([true, true, true, true])];
            tensor<fp16, [1, 64, 1, 128]> var_3460_cast = slice_by_index(begin = var_3460_begin_0, end = var_3460_end_0, end_mask = var_3460_end_mask_0, x = var_3456_cast);
            tensor<bool, []> var_3462_interleave_0 = const()[name = tensor<string, []>("op_3462_interleave_0"), val = tensor<bool, []>(false)];
            tensor<fp16, [1, 64, 1, 132]> var_3462_cast = concat(axis = var_3277, interleave = var_3462_interleave_0, values = (var_3434_cast_3, var_3425_cast_3));
            tensor<int32, [4]> var_3466_begin_0 = const()[name = tensor<string, []>("op_3466_begin_0"), val = tensor<int32, [4]>([0, 0, 0, 4])];
            tensor<int32, [4]> var_3466_end_0 = const()[name = tensor<string, []>("op_3466_end_0"), val = tensor<int32, [4]>([1, 64, 1, 132])];
            tensor<bool, [4]> var_3466_end_mask_0 = const()[name = tensor<string, []>("op_3466_end_mask_0"), val = tensor<bool, [4]>([true, true, true, true])];
            tensor<fp16, [1, 64, 1, 128]> var_3466_cast = slice_by_index(begin = var_3466_begin_0, end = var_3466_end_0, end_mask = var_3466_end_mask_0, x = var_3462_cast);
            tensor<bool, []> var_3468_interleave_0 = const()[name = tensor<string, []>("op_3468_interleave_0"), val = tensor<bool, []>(false)];
            tensor<fp16, [1, 64, 1, 132]> var_3468_cast = concat(axis = var_3277, interleave = var_3468_interleave_0, values = (var_3434_cast_4, var_3425_cast_4));
            tensor<int32, [4]> var_3472_begin_0 = const()[name = tensor<string, []>("op_3472_begin_0"), val = tensor<int32, [4]>([0, 0, 0, 4])];
            tensor<int32, [4]> var_3472_end_0 = const()[name = tensor<string, []>("op_3472_end_0"), val = tensor<int32, [4]>([1, 64, 1, 132])];
            tensor<bool, [4]> var_3472_end_mask_0 = const()[name = tensor<string, []>("op_3472_end_mask_0"), val = tensor<bool, [4]>([true, true, true, true])];
            tensor<fp16, [1, 64, 1, 128]> var_3472_cast = slice_by_index(begin = var_3472_begin_0, end = var_3472_end_0, end_mask = var_3472_end_mask_0, x = var_3468_cast);
            tensor<bool, []> var_3474_interleave_0 = const()[name = tensor<string, []>("op_3474_interleave_0"), val = tensor<bool, []>(false)];
            tensor<fp16, [1, 64, 1, 132]> var_3474_cast = concat(axis = var_3277, interleave = var_3474_interleave_0, values = (var_3434_cast_5, var_3425_cast_5));
            tensor<int32, [4]> var_3478_begin_0 = const()[name = tensor<string, []>("op_3478_begin_0"), val = tensor<int32, [4]>([0, 0, 0, 4])];
            tensor<int32, [4]> var_3478_end_0 = const()[name = tensor<string, []>("op_3478_end_0"), val = tensor<int32, [4]>([1, 64, 1, 132])];
            tensor<bool, [4]> var_3478_end_mask_0 = const()[name = tensor<string, []>("op_3478_end_mask_0"), val = tensor<bool, [4]>([true, true, true, true])];
            tensor<fp16, [1, 64, 1, 128]> var_3478_cast = slice_by_index(begin = var_3478_begin_0, end = var_3478_end_0, end_mask = var_3478_end_mask_0, x = var_3474_cast);
            tensor<bool, []> var_3480_interleave_0 = const()[name = tensor<string, []>("op_3480_interleave_0"), val = tensor<bool, []>(false)];
            tensor<fp16, [1, 64, 1, 132]> var_3480_cast = concat(axis = var_3277, interleave = var_3480_interleave_0, values = (var_3434_cast_6, var_3425_cast_6));
            tensor<int32, [4]> var_3484_begin_0 = const()[name = tensor<string, []>("op_3484_begin_0"), val = tensor<int32, [4]>([0, 0, 0, 4])];
            tensor<int32, [4]> var_3484_end_0 = const()[name = tensor<string, []>("op_3484_end_0"), val = tensor<int32, [4]>([1, 64, 1, 132])];
            tensor<bool, [4]> var_3484_end_mask_0 = const()[name = tensor<string, []>("op_3484_end_mask_0"), val = tensor<bool, [4]>([true, true, true, true])];
            tensor<fp16, [1, 64, 1, 128]> var_3484_cast = slice_by_index(begin = var_3484_begin_0, end = var_3484_end_0, end_mask = var_3484_end_mask_0, x = var_3480_cast);
            tensor<bool, []> var_3486_interleave_0 = const()[name = tensor<string, []>("op_3486_interleave_0"), val = tensor<bool, []>(false)];
            tensor<fp16, [1, 64, 1, 132]> var_3486_cast = concat(axis = var_3277, interleave = var_3486_interleave_0, values = (var_3434_cast_7, var_3425_cast_7));
            tensor<int32, [4]> var_3490_begin_0 = const()[name = tensor<string, []>("op_3490_begin_0"), val = tensor<int32, [4]>([0, 0, 0, 4])];
            tensor<int32, [4]> var_3490_end_0 = const()[name = tensor<string, []>("op_3490_end_0"), val = tensor<int32, [4]>([1, 64, 1, 132])];
            tensor<bool, [4]> var_3490_end_mask_0 = const()[name = tensor<string, []>("op_3490_end_mask_0"), val = tensor<bool, [4]>([true, true, true, true])];
            tensor<fp16, [1, 64, 1, 128]> var_3490_cast = slice_by_index(begin = var_3490_begin_0, end = var_3490_end_0, end_mask = var_3490_end_mask_0, x = var_3486_cast);
            tensor<bool, []> var_3492_interleave_0 = const()[name = tensor<string, []>("op_3492_interleave_0"), val = tensor<bool, []>(false)];
            tensor<fp16, [1, 64, 8, 128]> var_3492_cast = concat(axis = var_3274, interleave = var_3492_interleave_0, values = (var_3448_cast, var_3454_cast, var_3460_cast, var_3466_cast, var_3472_cast, var_3478_cast, var_3484_cast, var_3490_cast));
            tensor<string, []> var_3494_equation_0 = const()[name = tensor<string, []>("op_3494_equation_0"), val = tensor<string, []>("bnhd,bdhm->bnhm")];
            tensor<fp16, [1, 64, 1, 4]> var_3494_cast = einsum(equation = var_3494_equation_0, values = (var_3448_cast, input_81_cast));
            tensor<string, []> var_3496_equation_0 = const()[name = tensor<string, []>("op_3496_equation_0"), val = tensor<string, []>("bnhd,bdhm->bnhm")];
            tensor<fp16, [1, 64, 1, 4]> var_3496_cast = einsum(equation = var_3496_equation_0, values = (var_3454_cast, input_83_cast));
            tensor<string, []> var_3498_equation_0 = const()[name = tensor<string, []>("op_3498_equation_0"), val = tensor<string, []>("bnhd,bdhm->bnhm")];
            tensor<fp16, [1, 64, 1, 4]> var_3498_cast = einsum(equation = var_3498_equation_0, values = (var_3460_cast, input_85_cast));
            tensor<string, []> var_3500_equation_0 = const()[name = tensor<string, []>("op_3500_equation_0"), val = tensor<string, []>("bnhd,bdhm->bnhm")];
            tensor<fp16, [1, 64, 1, 4]> var_3500_cast = einsum(equation = var_3500_equation_0, values = (var_3466_cast, input_87_cast));
            tensor<string, []> var_3502_equation_0 = const()[name = tensor<string, []>("op_3502_equation_0"), val = tensor<string, []>("bnhd,bdhm->bnhm")];
            tensor<fp16, [1, 64, 1, 4]> var_3502_cast = einsum(equation = var_3502_equation_0, values = (var_3472_cast, input_89_cast));
            tensor<string, []> var_3504_equation_0 = const()[name = tensor<string, []>("op_3504_equation_0"), val = tensor<string, []>("bnhd,bdhm->bnhm")];
            tensor<fp16, [1, 64, 1, 4]> var_3504_cast = einsum(equation = var_3504_equation_0, values = (var_3478_cast, input_91_cast));
            tensor<string, []> var_3506_equation_0 = const()[name = tensor<string, []>("op_3506_equation_0"), val = tensor<string, []>("bnhd,bdhm->bnhm")];
            tensor<fp16, [1, 64, 1, 4]> var_3506_cast = einsum(equation = var_3506_equation_0, values = (var_3484_cast, input_93_cast));
            tensor<string, []> var_3508_equation_0 = const()[name = tensor<string, []>("op_3508_equation_0"), val = tensor<string, []>("bnhd,bdhm->bnhm")];
            tensor<fp16, [1, 64, 1, 4]> var_3508_cast = einsum(equation = var_3508_equation_0, values = (var_3490_cast, input_95_cast));
            tensor<bool, []> y_15_interleave_0 = const()[name = tensor<string, []>("y_15_interleave_0"), val = tensor<bool, []>(false)];
            tensor<fp16, [1, 512, 1, 4]> y_15_cast = concat(axis = var_3280, interleave = y_15_interleave_0, values = (var_3494_cast, var_3496_cast, var_3498_cast, var_3500_cast, var_3502_cast, var_3504_cast, var_3506_cast, var_3508_cast));
            tensor<int32, [2]> var_3515 = const()[name = tensor<string, []>("op_3515"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_3517 = const()[name = tensor<string, []>("op_3517"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> input_133_pad_type_0 = const()[name = tensor<string, []>("input_133_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> input_133_pad_0 = const()[name = tensor<string, []>("input_133_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [512, 512, 1, 1]> op_3514_to_fp16_affine_quantized = constexpr_affine_dequantize()[axis = tensor<int32, []>(0), name = tensor<string, []>("op_3514_to_fp16_affine_quantized"), quantized_data = tensor<int8, [512, 512, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(31020864))), scale = tensor<fp16, [512]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(31283648))), zero_point = tensor<int8, [512]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(31283072)))];
            tensor<fp16, [512]> primary_encoder_encoders_2_self_attn_linear_out_bias_to_fp16 = const()[name = tensor<string, []>("primary_encoder_encoders_2_self_attn_linear_out_bias_to_fp16"), val = tensor<fp16, [512]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(31284736)))];
            tensor<fp16, [1, 512, 1, 4]> input_133_cast = conv(bias = primary_encoder_encoders_2_self_attn_linear_out_bias_to_fp16, dilations = var_3517, groups = var_3280, pad = input_133_pad_0, pad_type = input_133_pad_type_0, strides = var_3515, weight = op_3514_to_fp16_affine_quantized, x = y_15_cast);
            tensor<fp16, [1, 512, 1, 4]> x_261_cast = add(x = x_257_cast, y = input_133_cast);
            tensor<fp16, [1, 512, 1, 4]> var_3525_cast = abs(x = x_261_cast);
            tensor<fp16, []> var_3526_to_fp16 = const()[name = tensor<string, []>("op_3526_to_fp16"), val = tensor<fp16, []>(0.001953125)];
            tensor<fp16, [1, 512, 1, 4]> var_3527_cast = mul(x = var_3525_cast, y = var_3526_to_fp16);
            tensor<int32, [1]> var_3528 = const()[name = tensor<string, []>("op_3528"), val = tensor<int32, [1]>([1])];
            tensor<fp16, [1, 1, 1, 4]> scale_163_cast = reduce_sum(axes = var_3528, keep_dims = var_3279, x = var_3527_cast);
            tensor<fp16, []> scale_165_epsilon_0_to_fp16 = const()[name = tensor<string, []>("scale_165_epsilon_0_to_fp16"), val = tensor<fp16, []>(5.96046448e-08)];
            tensor<fp16, [1, 1, 1, 4]> scale_165_cast = rsqrt(epsilon = scale_165_epsilon_0_to_fp16, x = scale_163_cast);
            tensor<fp16, [1, 1, 1, 4]> scale_167_cast = mul(x = scale_165_cast, y = scale_165_cast);
            tensor<fp16, [1, 512, 1, 4]> x_263_cast = mul(x = x_261_cast, y = scale_167_cast);
            tensor<fp16, []> var_3533_to_fp16 = const()[name = tensor<string, []>("op_3533_to_fp16"), val = tensor<fp16, []>(-0.001953125)];
            tensor<fp16, [1, 512, 1, 4]> var_3534_cast = mul(x = x_263_cast, y = var_3533_to_fp16);
            tensor<int32, [1]> var_3535 = const()[name = tensor<string, []>("op_3535"), val = tensor<int32, [1]>([1])];
            tensor<fp16, [1, 1, 1, 4]> x_mean_55_cast = reduce_sum(axes = var_3535, keep_dims = var_3279, x = var_3534_cast);
            tensor<fp16, [1, 512, 1, 4]> x_zero_mean_55_cast = add(x = x_263_cast, y = x_mean_55_cast);
            tensor<fp16, []> var_3538_to_fp16 = const()[name = tensor<string, []>("op_3538_to_fp16"), val = tensor<fp16, []>(0.001953125)];
            tensor<fp16, [1, 512, 1, 4]> var_3539_cast = mul(x = x_zero_mean_55_cast, y = var_3538_to_fp16);
            tensor<fp16, [1, 512, 1, 4]> var_3540_cast = mul(x = var_3539_cast, y = x_zero_mean_55_cast);
            tensor<int32, [1]> var_3541 = const()[name = tensor<string, []>("op_3541"), val = tensor<int32, [1]>([1])];
            tensor<fp16, [1, 1, 1, 4]> x_var_55_cast = reduce_sum(axes = var_3541, keep_dims = var_3279, x = var_3540_cast);
            tensor<fp16, []> var_3543_to_fp16 = const()[name = tensor<string, []>("op_3543_to_fp16"), val = tensor<fp16, []>(1.00135803e-05)];
            tensor<fp16, [1, 1, 1, 4]> var_3544_cast = add(x = x_var_55_cast, y = var_3543_to_fp16);
            tensor<fp16, []> var_3545_epsilon_0_to_fp16 = const()[name = tensor<string, []>("op_3545_epsilon_0_to_fp16"), val = tensor<fp16, []>(5.96046448e-08)];
            tensor<fp16, [1, 1, 1, 4]> var_3545_cast = rsqrt(epsilon = var_3545_epsilon_0_to_fp16, x = var_3544_cast);
            tensor<fp16, [1, 512, 1, 4]> var_3546_cast = mul(x = x_zero_mean_55_cast, y = var_3545_cast);
            tensor<fp16, [512]> x_265_mean_0_to_fp16 = const()[name = tensor<string, []>("x_265_mean_0_to_fp16"), val = tensor<fp16, [512]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(31285824)))];
            tensor<fp16, [512]> x_265_variance_0_to_fp16 = const()[name = tensor<string, []>("x_265_variance_0_to_fp16"), val = tensor<fp16, [512]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(31286912)))];
            tensor<fp16, [512]> x_265_gamma_0_to_fp16 = const()[name = tensor<string, []>("x_265_gamma_0_to_fp16"), val = tensor<fp16, [512]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(31288000)))];
            tensor<fp16, [512]> x_265_beta_0_to_fp16 = const()[name = tensor<string, []>("x_265_beta_0_to_fp16"), val = tensor<fp16, [512]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(31289088)))];
            tensor<fp16, []> x_265_epsilon_0_to_fp16 = const()[name = tensor<string, []>("x_265_epsilon_0_to_fp16"), val = tensor<fp16, []>(1.00135803e-05)];
            tensor<fp16, [1, 512, 1, 4]> x_265_cast = batch_norm(beta = x_265_beta_0_to_fp16, epsilon = x_265_epsilon_0_to_fp16, gamma = x_265_gamma_0_to_fp16, mean = x_265_mean_0_to_fp16, variance = x_265_variance_0_to_fp16, x = var_3546_cast);
            tensor<bool, []> x_267_interleave_0 = const()[name = tensor<string, []>("x_267_interleave_0"), val = tensor<bool, []>(false)];
            tensor<fp16, [1, 512, 1, 36]> x_267_cast = concat(axis = var_3277, interleave = x_267_interleave_0, values = (var_301_cast_2, x_265_cast));
            tensor<int32, [4]> x_269_begin_0 = const()[name = tensor<string, []>("x_269_begin_0"), val = tensor<int32, [4]>([0, 0, 0, 12])];
            tensor<int32, [4]> x_269_end_0 = const()[name = tensor<string, []>("x_269_end_0"), val = tensor<int32, [4]>([1, 512, 1, 36])];
            tensor<bool, [4]> x_269_end_mask_0 = const()[name = tensor<string, []>("x_269_end_mask_0"), val = tensor<bool, [4]>([true, true, true, true])];
            tensor<fp16, [1, 512, 1, 24]> x_269_cast = slice_by_index(begin = x_269_begin_0, end = x_269_end_0, end_mask = x_269_end_mask_0, x = x_267_cast);
            tensor<int32, [4]> x_271_begin_0 = const()[name = tensor<string, []>("x_271_begin_0"), val = tensor<int32, [4]>([0, 0, 0, 12])];
            tensor<int32, [4]> x_271_end_0 = const()[name = tensor<string, []>("x_271_end_0"), val = tensor<int32, [4]>([1, 512, 1, 24])];
            tensor<bool, [4]> x_271_end_mask_0 = const()[name = tensor<string, []>("x_271_end_mask_0"), val = tensor<bool, [4]>([true, true, true, true])];
            tensor<fp16, [1, 512, 1, 12]> x_271_cast = slice_by_index(begin = x_271_begin_0, end = x_271_end_0, end_mask = x_271_end_mask_0, x = x_269_cast);
            tensor<int32, [4]> x_273_begin_0 = const()[name = tensor<string, []>("x_273_begin_0"), val = tensor<int32, [4]>([0, 0, 0, 1])];
            tensor<int32, [4]> x_273_end_0 = const()[name = tensor<string, []>("x_273_end_0"), val = tensor<int32, [4]>([1, 512, 1, 12])];
            tensor<bool, [4]> x_273_end_mask_0 = const()[name = tensor<string, []>("x_273_end_mask_0"), val = tensor<bool, [4]>([true, true, true, true])];
            tensor<fp16, [1, 512, 1, 11]> x_273_cast = slice_by_index(begin = x_273_begin_0, end = x_273_end_0, end_mask = x_273_end_mask_0, x = x_271_cast);
            tensor<int32, [4]> var_3586_begin_0 = const()[name = tensor<string, []>("op_3586_begin_0"), val = tensor<int32, [4]>([0, 0, 0, -7])];
            tensor<int32, [4]> var_3586_end_0 = const()[name = tensor<string, []>("op_3586_end_0"), val = tensor<int32, [4]>([1, 512, 1, 11])];
            tensor<bool, [4]> var_3586_end_mask_0 = const()[name = tensor<string, []>("op_3586_end_mask_0"), val = tensor<bool, [4]>([true, true, true, true])];
            tensor<fp16, [1, 512, 1, 7]> var_3586_cast = slice_by_index(begin = var_3586_begin_0, end = var_3586_end_0, end_mask = var_3586_end_mask_0, x = x_273_cast);
            tensor<int32, [2]> var_3588 = const()[name = tensor<string, []>("op_3588"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_3590 = const()[name = tensor<string, []>("op_3590"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> x_275_pad_type_0 = const()[name = tensor<string, []>("x_275_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> x_275_pad_0 = const()[name = tensor<string, []>("x_275_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [1024, 512, 1, 1]> op_3587_to_fp16_affine_quantized = constexpr_affine_dequantize()[axis = tensor<int32, []>(0), name = tensor<string, []>("op_3587_to_fp16_affine_quantized"), quantized_data = tensor<int8, [1024, 512, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(31290176))), scale = tensor<fp16, [1024]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(31815616))), zero_point = tensor<int8, [1024]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(31814528)))];
            tensor<fp16, [1024]> primary_encoder_encoders_2_conv_module_pointwise_conv1_bias_to_fp16 = const()[name = tensor<string, []>("primary_encoder_encoders_2_conv_module_pointwise_conv1_bias_to_fp16"), val = tensor<fp16, [1024]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(31817728)))];
            tensor<fp16, [1, 1024, 1, 11]> x_275_cast = conv(bias = primary_encoder_encoders_2_conv_module_pointwise_conv1_bias_to_fp16, dilations = var_3590, groups = var_3280, pad = x_275_pad_0, pad_type = x_275_pad_type_0, strides = var_3588, weight = op_3587_to_fp16_affine_quantized, x = x_273_cast);
            tensor<int32, [4]> var_3599_begin_0 = const()[name = tensor<string, []>("op_3599_begin_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<int32, [4]> var_3599_end_0 = const()[name = tensor<string, []>("op_3599_end_0"), val = tensor<int32, [4]>([1, 512, 1, 11])];
            tensor<bool, [4]> var_3599_end_mask_0 = const()[name = tensor<string, []>("op_3599_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [1, 512, 1, 11]> var_3599_cast = slice_by_index(begin = var_3599_begin_0, end = var_3599_end_0, end_mask = var_3599_end_mask_0, x = x_275_cast);
            tensor<int32, [4]> var_3603_begin_0 = const()[name = tensor<string, []>("op_3603_begin_0"), val = tensor<int32, [4]>([0, 512, 0, 0])];
            tensor<int32, [4]> var_3603_end_0 = const()[name = tensor<string, []>("op_3603_end_0"), val = tensor<int32, [4]>([1, 1024, 1, 11])];
            tensor<bool, [4]> var_3603_end_mask_0 = const()[name = tensor<string, []>("op_3603_end_mask_0"), val = tensor<bool, [4]>([true, true, true, true])];
            tensor<fp16, [1, 512, 1, 11]> var_3603_cast = slice_by_index(begin = var_3603_begin_0, end = var_3603_end_0, end_mask = var_3603_end_mask_0, x = x_275_cast);
            tensor<fp16, [1, 512, 1, 11]> var_3606_cast = sigmoid(x = var_3603_cast);
            tensor<fp16, [1, 512, 1, 11]> x_277_cast = mul(x = var_3599_cast, y = var_3606_cast);
            tensor<int32, [2]> var_3609 = const()[name = tensor<string, []>("op_3609"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_3611 = const()[name = tensor<string, []>("op_3611"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> x_279_pad_type_0 = const()[name = tensor<string, []>("x_279_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> x_279_pad_0 = const()[name = tensor<string, []>("x_279_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [512, 1, 1, 8]> op_3608_to_fp16_affine_quantized = constexpr_affine_dequantize()[axis = tensor<int32, []>(0), name = tensor<string, []>("op_3608_to_fp16_affine_quantized"), quantized_data = tensor<int8, [512, 1, 1, 8]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(31819840))), scale = tensor<fp16, [512]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(31824576))), zero_point = tensor<int8, [512]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(31824000)))];
            tensor<fp16, [512]> primary_encoder_encoders_2_conv_module_depthwise_conv_bias_to_fp16 = const()[name = tensor<string, []>("primary_encoder_encoders_2_conv_module_depthwise_conv_bias_to_fp16"), val = tensor<fp16, [512]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(31825664)))];
            tensor<fp16, [1, 512, 1, 4]> x_279_cast = conv(bias = primary_encoder_encoders_2_conv_module_depthwise_conv_bias_to_fp16, dilations = var_3611, groups = var_3268, pad = x_279_pad_0, pad_type = x_279_pad_type_0, strides = var_3609, weight = op_3608_to_fp16_affine_quantized, x = x_277_cast);
            tensor<fp16, [1, 512, 1, 4]> var_3614_cast = abs(x = x_279_cast);
            tensor<fp16, []> var_3615_to_fp16 = const()[name = tensor<string, []>("op_3615_to_fp16"), val = tensor<fp16, []>(0.001953125)];
            tensor<fp16, [1, 512, 1, 4]> var_3616_cast = mul(x = var_3614_cast, y = var_3615_to_fp16);
            tensor<int32, [1]> var_3617 = const()[name = tensor<string, []>("op_3617"), val = tensor<int32, [1]>([1])];
            tensor<fp16, [1, 1, 1, 4]> scale_169_cast = reduce_sum(axes = var_3617, keep_dims = var_3279, x = var_3616_cast);
            tensor<fp16, []> scale_171_epsilon_0_to_fp16 = const()[name = tensor<string, []>("scale_171_epsilon_0_to_fp16"), val = tensor<fp16, []>(5.96046448e-08)];
            tensor<fp16, [1, 1, 1, 4]> scale_171_cast = rsqrt(epsilon = scale_171_epsilon_0_to_fp16, x = scale_169_cast);
            tensor<fp16, [1, 1, 1, 4]> scale_173_cast = mul(x = scale_171_cast, y = scale_171_cast);
            tensor<fp16, [1, 512, 1, 4]> x_281_cast = mul(x = x_279_cast, y = scale_173_cast);
            tensor<fp16, []> var_3622_to_fp16 = const()[name = tensor<string, []>("op_3622_to_fp16"), val = tensor<fp16, []>(-0.001953125)];
            tensor<fp16, [1, 512, 1, 4]> var_3623_cast = mul(x = x_281_cast, y = var_3622_to_fp16);
            tensor<int32, [1]> var_3624 = const()[name = tensor<string, []>("op_3624"), val = tensor<int32, [1]>([1])];
            tensor<fp16, [1, 1, 1, 4]> x_mean_57_cast = reduce_sum(axes = var_3624, keep_dims = var_3279, x = var_3623_cast);
            tensor<fp16, [1, 512, 1, 4]> x_zero_mean_57_cast = add(x = x_281_cast, y = x_mean_57_cast);
            tensor<fp16, []> var_3627_to_fp16 = const()[name = tensor<string, []>("op_3627_to_fp16"), val = tensor<fp16, []>(0.001953125)];
            tensor<fp16, [1, 512, 1, 4]> var_3628_cast = mul(x = x_zero_mean_57_cast, y = var_3627_to_fp16);
            tensor<fp16, [1, 512, 1, 4]> var_3629_cast = mul(x = var_3628_cast, y = x_zero_mean_57_cast);
            tensor<int32, [1]> var_3630 = const()[name = tensor<string, []>("op_3630"), val = tensor<int32, [1]>([1])];
            tensor<fp16, [1, 1, 1, 4]> x_var_57_cast = reduce_sum(axes = var_3630, keep_dims = var_3279, x = var_3629_cast);
            tensor<fp16, []> var_3632_to_fp16 = const()[name = tensor<string, []>("op_3632_to_fp16"), val = tensor<fp16, []>(1.00135803e-05)];
            tensor<fp16, [1, 1, 1, 4]> var_3633_cast = add(x = x_var_57_cast, y = var_3632_to_fp16);
            tensor<fp16, []> var_3634_epsilon_0_to_fp16 = const()[name = tensor<string, []>("op_3634_epsilon_0_to_fp16"), val = tensor<fp16, []>(5.96046448e-08)];
            tensor<fp16, [1, 1, 1, 4]> var_3634_cast = rsqrt(epsilon = var_3634_epsilon_0_to_fp16, x = var_3633_cast);
            tensor<fp16, [1, 512, 1, 4]> var_3635_cast = mul(x = x_zero_mean_57_cast, y = var_3634_cast);
            tensor<fp16, [512]> input_135_mean_0_to_fp16 = const()[name = tensor<string, []>("input_135_mean_0_to_fp16"), val = tensor<fp16, [512]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(31826752)))];
            tensor<fp16, [512]> input_135_variance_0_to_fp16 = const()[name = tensor<string, []>("input_135_variance_0_to_fp16"), val = tensor<fp16, [512]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(31827840)))];
            tensor<fp16, [512]> input_135_gamma_0_to_fp16 = const()[name = tensor<string, []>("input_135_gamma_0_to_fp16"), val = tensor<fp16, [512]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(31828928)))];
            tensor<fp16, [512]> input_135_beta_0_to_fp16 = const()[name = tensor<string, []>("input_135_beta_0_to_fp16"), val = tensor<fp16, [512]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(31830016)))];
            tensor<fp16, []> input_135_epsilon_0_to_fp16 = const()[name = tensor<string, []>("input_135_epsilon_0_to_fp16"), val = tensor<fp16, []>(1.00135803e-05)];
            tensor<fp16, [1, 512, 1, 4]> input_135_cast = batch_norm(beta = input_135_beta_0_to_fp16, epsilon = input_135_epsilon_0_to_fp16, gamma = input_135_gamma_0_to_fp16, mean = input_135_mean_0_to_fp16, variance = input_135_variance_0_to_fp16, x = var_3635_cast);
            tensor<fp16, [1, 512, 1, 4]> x_283_cast = silu(x = input_135_cast);
            tensor<int32, [2]> var_3644 = const()[name = tensor<string, []>("op_3644"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_3646 = const()[name = tensor<string, []>("op_3646"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> input_137_pad_type_0 = const()[name = tensor<string, []>("input_137_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> input_137_pad_0 = const()[name = tensor<string, []>("input_137_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [512, 512, 1, 1]> op_3643_to_fp16_affine_quantized = constexpr_affine_dequantize()[axis = tensor<int32, []>(0), name = tensor<string, []>("op_3643_to_fp16_affine_quantized"), quantized_data = tensor<int8, [512, 512, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(31831104))), scale = tensor<fp16, [512]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(32093888))), zero_point = tensor<int8, [512]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(32093312)))];
            tensor<fp16, [512]> primary_encoder_encoders_2_conv_module_pointwise_conv2_bias_to_fp16 = const()[name = tensor<string, []>("primary_encoder_encoders_2_conv_module_pointwise_conv2_bias_to_fp16"), val = tensor<fp16, [512]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(32094976)))];
            tensor<fp16, [1, 512, 1, 4]> input_137_cast = conv(bias = primary_encoder_encoders_2_conv_module_pointwise_conv2_bias_to_fp16, dilations = var_3646, groups = var_3280, pad = input_137_pad_0, pad_type = input_137_pad_type_0, strides = var_3644, weight = op_3643_to_fp16_affine_quantized, x = x_283_cast);
            tensor<fp16, [1, 512, 1, 4]> x_287_cast = add(x = x_261_cast, y = input_137_cast);
            tensor<fp16, [1, 512, 1, 4]> var_3654_cast = abs(x = x_287_cast);
            tensor<fp16, []> var_3655_to_fp16 = const()[name = tensor<string, []>("op_3655_to_fp16"), val = tensor<fp16, []>(0.001953125)];
            tensor<fp16, [1, 512, 1, 4]> var_3656_cast = mul(x = var_3654_cast, y = var_3655_to_fp16);
            tensor<int32, [1]> var_3657 = const()[name = tensor<string, []>("op_3657"), val = tensor<int32, [1]>([1])];
            tensor<fp16, [1, 1, 1, 4]> scale_175_cast = reduce_sum(axes = var_3657, keep_dims = var_3279, x = var_3656_cast);
            tensor<fp16, []> scale_177_epsilon_0_to_fp16 = const()[name = tensor<string, []>("scale_177_epsilon_0_to_fp16"), val = tensor<fp16, []>(5.96046448e-08)];
            tensor<fp16, [1, 1, 1, 4]> scale_177_cast = rsqrt(epsilon = scale_177_epsilon_0_to_fp16, x = scale_175_cast);
            tensor<fp16, [1, 1, 1, 4]> scale_179_cast = mul(x = scale_177_cast, y = scale_177_cast);
            tensor<fp16, [1, 512, 1, 4]> x_289_cast = mul(x = x_287_cast, y = scale_179_cast);
            tensor<fp16, []> var_3662_to_fp16 = const()[name = tensor<string, []>("op_3662_to_fp16"), val = tensor<fp16, []>(-0.001953125)];
            tensor<fp16, [1, 512, 1, 4]> var_3663_cast = mul(x = x_289_cast, y = var_3662_to_fp16);
            tensor<int32, [1]> var_3664 = const()[name = tensor<string, []>("op_3664"), val = tensor<int32, [1]>([1])];
            tensor<fp16, [1, 1, 1, 4]> x_mean_59_cast = reduce_sum(axes = var_3664, keep_dims = var_3279, x = var_3663_cast);
            tensor<fp16, [1, 512, 1, 4]> x_zero_mean_59_cast = add(x = x_289_cast, y = x_mean_59_cast);
            tensor<fp16, []> var_3667_to_fp16 = const()[name = tensor<string, []>("op_3667_to_fp16"), val = tensor<fp16, []>(0.001953125)];
            tensor<fp16, [1, 512, 1, 4]> var_3668_cast = mul(x = x_zero_mean_59_cast, y = var_3667_to_fp16);
            tensor<fp16, [1, 512, 1, 4]> var_3669_cast = mul(x = var_3668_cast, y = x_zero_mean_59_cast);
            tensor<int32, [1]> var_3670 = const()[name = tensor<string, []>("op_3670"), val = tensor<int32, [1]>([1])];
            tensor<fp16, [1, 1, 1, 4]> x_var_59_cast = reduce_sum(axes = var_3670, keep_dims = var_3279, x = var_3669_cast);
            tensor<fp16, []> var_3672_to_fp16 = const()[name = tensor<string, []>("op_3672_to_fp16"), val = tensor<fp16, []>(1.00135803e-05)];
            tensor<fp16, [1, 1, 1, 4]> var_3673_cast = add(x = x_var_59_cast, y = var_3672_to_fp16);
            tensor<fp16, []> var_3674_epsilon_0_to_fp16 = const()[name = tensor<string, []>("op_3674_epsilon_0_to_fp16"), val = tensor<fp16, []>(5.96046448e-08)];
            tensor<fp16, [1, 1, 1, 4]> var_3674_cast = rsqrt(epsilon = var_3674_epsilon_0_to_fp16, x = var_3673_cast);
            tensor<fp16, [1, 512, 1, 4]> var_3675_cast = mul(x = x_zero_mean_59_cast, y = var_3674_cast);
            tensor<fp16, [512]> x_291_mean_0_to_fp16 = const()[name = tensor<string, []>("x_291_mean_0_to_fp16"), val = tensor<fp16, [512]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(32096064)))];
            tensor<fp16, [512]> x_291_variance_0_to_fp16 = const()[name = tensor<string, []>("x_291_variance_0_to_fp16"), val = tensor<fp16, [512]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(32097152)))];
            tensor<fp16, [512]> x_291_gamma_0_to_fp16 = const()[name = tensor<string, []>("x_291_gamma_0_to_fp16"), val = tensor<fp16, [512]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(32098240)))];
            tensor<fp16, [512]> x_291_beta_0_to_fp16 = const()[name = tensor<string, []>("x_291_beta_0_to_fp16"), val = tensor<fp16, [512]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(32099328)))];
            tensor<fp16, []> x_291_epsilon_0_to_fp16 = const()[name = tensor<string, []>("x_291_epsilon_0_to_fp16"), val = tensor<fp16, []>(1.00135803e-05)];
            tensor<fp16, [1, 512, 1, 4]> x_291_cast = batch_norm(beta = x_291_beta_0_to_fp16, epsilon = x_291_epsilon_0_to_fp16, gamma = x_291_gamma_0_to_fp16, mean = x_291_mean_0_to_fp16, variance = x_291_variance_0_to_fp16, x = var_3675_cast);
            tensor<int32, [2]> var_3686 = const()[name = tensor<string, []>("op_3686"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_3688 = const()[name = tensor<string, []>("op_3688"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> input_139_pad_type_0 = const()[name = tensor<string, []>("input_139_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> input_139_pad_0 = const()[name = tensor<string, []>("input_139_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [2048, 512, 1, 1]> op_3685_to_fp16_affine_quantized = constexpr_affine_dequantize()[axis = tensor<int32, []>(0), name = tensor<string, []>("op_3685_to_fp16_affine_quantized"), quantized_data = tensor<int8, [2048, 512, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(32100416))), scale = tensor<fp16, [2048]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(33151168))), zero_point = tensor<int8, [2048]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(33149056)))];
            tensor<fp16, [2048]> primary_encoder_encoders_2_feed_forward_w_1_bias_to_fp16 = const()[name = tensor<string, []>("primary_encoder_encoders_2_feed_forward_w_1_bias_to_fp16"), val = tensor<fp16, [2048]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(33155328)))];
            tensor<fp16, [1, 2048, 1, 4]> input_139_cast = conv(bias = primary_encoder_encoders_2_feed_forward_w_1_bias_to_fp16, dilations = var_3688, groups = var_3280, pad = input_139_pad_0, pad_type = input_139_pad_type_0, strides = var_3686, weight = op_3685_to_fp16_affine_quantized, x = x_291_cast);
            tensor<fp16, [1, 2048, 1, 4]> input_141_cast = silu(x = input_139_cast);
            tensor<int32, [2]> var_3697 = const()[name = tensor<string, []>("op_3697"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_3699 = const()[name = tensor<string, []>("op_3699"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> input_143_pad_type_0 = const()[name = tensor<string, []>("input_143_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> input_143_pad_0 = const()[name = tensor<string, []>("input_143_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [512, 2048, 1, 1]> op_3704_weight_0_to_fp16_affine_quantized = constexpr_affine_dequantize()[axis = tensor<int32, []>(0), name = tensor<string, []>("op_3704_weight_0_to_fp16_affine_quantized"), quantized_data = tensor<int8, [512, 2048, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(33159488))), scale = tensor<fp16, [512]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(34208704))), zero_point = tensor<int8, [512]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(34208128)))];
            tensor<fp16, [512]> var_3704_bias_0_to_fp16 = const()[name = tensor<string, []>("op_3704_bias_0_to_fp16"), val = tensor<fp16, [512]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(34209792)))];
            tensor<fp16, [1, 512, 1, 4]> var_3704_cast = conv(bias = var_3704_bias_0_to_fp16, dilations = var_3699, groups = var_3280, pad = input_143_pad_0, pad_type = input_143_pad_type_0, strides = var_3697, weight = op_3704_weight_0_to_fp16_affine_quantized, x = input_141_cast);
            tensor<fp16, [1, 512, 1, 4]> x_297_cast = add(x = x_287_cast, y = var_3704_cast);
            tensor<fp16, [1, 512, 1, 4]> var_3706_cast = abs(x = x_297_cast);
            tensor<fp16, []> var_3707_to_fp16 = const()[name = tensor<string, []>("op_3707_to_fp16"), val = tensor<fp16, []>(0.001953125)];
            tensor<fp16, [1, 512, 1, 4]> var_3708_cast = mul(x = var_3706_cast, y = var_3707_to_fp16);
            tensor<int32, [1]> var_3709 = const()[name = tensor<string, []>("op_3709"), val = tensor<int32, [1]>([1])];
            tensor<fp16, [1, 1, 1, 4]> scale_181_cast = reduce_sum(axes = var_3709, keep_dims = var_3279, x = var_3708_cast);
            tensor<fp16, []> scale_183_epsilon_0_to_fp16 = const()[name = tensor<string, []>("scale_183_epsilon_0_to_fp16"), val = tensor<fp16, []>(5.96046448e-08)];
            tensor<fp16, [1, 1, 1, 4]> scale_183_cast = rsqrt(epsilon = scale_183_epsilon_0_to_fp16, x = scale_181_cast);
            tensor<fp16, [1, 1, 1, 4]> scale_185_cast = mul(x = scale_183_cast, y = scale_183_cast);
            tensor<fp16, [1, 512, 1, 4]> x_299_cast = mul(x = x_297_cast, y = scale_185_cast);
            tensor<fp16, []> var_3714_to_fp16 = const()[name = tensor<string, []>("op_3714_to_fp16"), val = tensor<fp16, []>(-0.001953125)];
            tensor<fp16, [1, 512, 1, 4]> var_3715_cast = mul(x = x_299_cast, y = var_3714_to_fp16);
            tensor<int32, [1]> var_3716 = const()[name = tensor<string, []>("op_3716"), val = tensor<int32, [1]>([1])];
            tensor<fp16, [1, 1, 1, 4]> x_mean_61_cast = reduce_sum(axes = var_3716, keep_dims = var_3279, x = var_3715_cast);
            tensor<fp16, [1, 512, 1, 4]> x_zero_mean_61_cast = add(x = x_299_cast, y = x_mean_61_cast);
            tensor<fp16, []> var_3719_to_fp16 = const()[name = tensor<string, []>("op_3719_to_fp16"), val = tensor<fp16, []>(0.001953125)];
            tensor<fp16, [1, 512, 1, 4]> var_3720_cast = mul(x = x_zero_mean_61_cast, y = var_3719_to_fp16);
            tensor<fp16, [1, 512, 1, 4]> var_3721_cast = mul(x = var_3720_cast, y = x_zero_mean_61_cast);
            tensor<int32, [1]> var_3722 = const()[name = tensor<string, []>("op_3722"), val = tensor<int32, [1]>([1])];
            tensor<fp16, [1, 1, 1, 4]> x_var_61_cast = reduce_sum(axes = var_3722, keep_dims = var_3279, x = var_3721_cast);
            tensor<fp16, []> var_3724_to_fp16 = const()[name = tensor<string, []>("op_3724_to_fp16"), val = tensor<fp16, []>(1.00135803e-05)];
            tensor<fp16, [1, 1, 1, 4]> var_3725_cast = add(x = x_var_61_cast, y = var_3724_to_fp16);
            tensor<fp16, []> var_3726_epsilon_0_to_fp16 = const()[name = tensor<string, []>("op_3726_epsilon_0_to_fp16"), val = tensor<fp16, []>(5.96046448e-08)];
            tensor<fp16, [1, 1, 1, 4]> var_3726_cast = rsqrt(epsilon = var_3726_epsilon_0_to_fp16, x = var_3725_cast);
            tensor<fp16, [1, 512, 1, 4]> var_3727_cast = mul(x = x_zero_mean_61_cast, y = var_3726_cast);
            tensor<fp16, [512]> x_301_mean_0_to_fp16 = const()[name = tensor<string, []>("x_301_mean_0_to_fp16"), val = tensor<fp16, [512]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(34210880)))];
            tensor<fp16, [512]> x_301_variance_0_to_fp16 = const()[name = tensor<string, []>("x_301_variance_0_to_fp16"), val = tensor<fp16, [512]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(34211968)))];
            tensor<fp16, [512]> x_301_gamma_0_to_fp16 = const()[name = tensor<string, []>("x_301_gamma_0_to_fp16"), val = tensor<fp16, [512]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(34213056)))];
            tensor<fp16, [512]> x_301_beta_0_to_fp16 = const()[name = tensor<string, []>("x_301_beta_0_to_fp16"), val = tensor<fp16, [512]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(34214144)))];
            tensor<fp16, []> x_301_epsilon_0_to_fp16 = const()[name = tensor<string, []>("x_301_epsilon_0_to_fp16"), val = tensor<fp16, []>(1.00135803e-05)];
            tensor<fp16, [1, 512, 1, 4]> x_301_cast = batch_norm(beta = x_301_beta_0_to_fp16, epsilon = x_301_epsilon_0_to_fp16, gamma = x_301_gamma_0_to_fp16, mean = x_301_mean_0_to_fp16, variance = x_301_variance_0_to_fp16, x = var_3727_cast);
            tensor<int32, []> var_3742 = const()[name = tensor<string, []>("op_3742"), val = tensor<int32, []>(512)];
            tensor<int32, []> var_3748 = const()[name = tensor<string, []>("op_3748"), val = tensor<int32, []>(2)];
            tensor<int32, []> var_3751 = const()[name = tensor<string, []>("op_3751"), val = tensor<int32, []>(-1)];
            tensor<bool, []> var_3753 = const()[name = tensor<string, []>("op_3753"), val = tensor<bool, []>(true)];
            tensor<int32, []> var_3754 = const()[name = tensor<string, []>("op_3754"), val = tensor<int32, []>(1)];
            tensor<fp16, [1, 512, 1, 4]> var_3801_cast = abs(x = x_301_cast);
            tensor<fp16, []> var_3802_to_fp16 = const()[name = tensor<string, []>("op_3802_to_fp16"), val = tensor<fp16, []>(0.001953125)];
            tensor<fp16, [1, 512, 1, 4]> var_3803_cast = mul(x = var_3801_cast, y = var_3802_to_fp16);
            tensor<int32, [1]> var_3804 = const()[name = tensor<string, []>("op_3804"), val = tensor<int32, [1]>([1])];
            tensor<fp16, [1, 1, 1, 4]> scale_187_cast = reduce_sum(axes = var_3804, keep_dims = var_3753, x = var_3803_cast);
            tensor<fp16, []> scale_189_epsilon_0_to_fp16 = const()[name = tensor<string, []>("scale_189_epsilon_0_to_fp16"), val = tensor<fp16, []>(5.96046448e-08)];
            tensor<fp16, [1, 1, 1, 4]> scale_189_cast = rsqrt(epsilon = scale_189_epsilon_0_to_fp16, x = scale_187_cast);
            tensor<fp16, [1, 1, 1, 4]> scale_191_cast = mul(x = scale_189_cast, y = scale_189_cast);
            tensor<fp16, [1, 512, 1, 4]> x_303_cast = mul(x = x_301_cast, y = scale_191_cast);
            tensor<fp16, []> var_3809_to_fp16 = const()[name = tensor<string, []>("op_3809_to_fp16"), val = tensor<fp16, []>(-0.001953125)];
            tensor<fp16, [1, 512, 1, 4]> var_3810_cast = mul(x = x_303_cast, y = var_3809_to_fp16);
            tensor<int32, [1]> var_3811 = const()[name = tensor<string, []>("op_3811"), val = tensor<int32, [1]>([1])];
            tensor<fp16, [1, 1, 1, 4]> x_mean_63_cast = reduce_sum(axes = var_3811, keep_dims = var_3753, x = var_3810_cast);
            tensor<fp16, [1, 512, 1, 4]> x_zero_mean_63_cast = add(x = x_303_cast, y = x_mean_63_cast);
            tensor<fp16, []> var_3814_to_fp16 = const()[name = tensor<string, []>("op_3814_to_fp16"), val = tensor<fp16, []>(0.001953125)];
            tensor<fp16, [1, 512, 1, 4]> var_3815_cast = mul(x = x_zero_mean_63_cast, y = var_3814_to_fp16);
            tensor<fp16, [1, 512, 1, 4]> var_3816_cast = mul(x = var_3815_cast, y = x_zero_mean_63_cast);
            tensor<int32, [1]> var_3817 = const()[name = tensor<string, []>("op_3817"), val = tensor<int32, [1]>([1])];
            tensor<fp16, [1, 1, 1, 4]> x_var_63_cast = reduce_sum(axes = var_3817, keep_dims = var_3753, x = var_3816_cast);
            tensor<fp16, []> var_3819_to_fp16 = const()[name = tensor<string, []>("op_3819_to_fp16"), val = tensor<fp16, []>(1.00135803e-05)];
            tensor<fp16, [1, 1, 1, 4]> var_3820_cast = add(x = x_var_63_cast, y = var_3819_to_fp16);
            tensor<fp16, []> var_3821_epsilon_0_to_fp16 = const()[name = tensor<string, []>("op_3821_epsilon_0_to_fp16"), val = tensor<fp16, []>(5.96046448e-08)];
            tensor<fp16, [1, 1, 1, 4]> var_3821_cast = rsqrt(epsilon = var_3821_epsilon_0_to_fp16, x = var_3820_cast);
            tensor<fp16, [1, 512, 1, 4]> var_3822_cast = mul(x = x_zero_mean_63_cast, y = var_3821_cast);
            tensor<fp16, [512]> x_305_mean_0_to_fp16 = const()[name = tensor<string, []>("x_305_mean_0_to_fp16"), val = tensor<fp16, [512]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(34215232)))];
            tensor<fp16, [512]> x_305_variance_0_to_fp16 = const()[name = tensor<string, []>("x_305_variance_0_to_fp16"), val = tensor<fp16, [512]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(34216320)))];
            tensor<fp16, [512]> x_305_gamma_0_to_fp16 = const()[name = tensor<string, []>("x_305_gamma_0_to_fp16"), val = tensor<fp16, [512]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(34217408)))];
            tensor<fp16, [512]> x_305_beta_0_to_fp16 = const()[name = tensor<string, []>("x_305_beta_0_to_fp16"), val = tensor<fp16, [512]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(34218496)))];
            tensor<fp16, []> x_305_epsilon_0_to_fp16 = const()[name = tensor<string, []>("x_305_epsilon_0_to_fp16"), val = tensor<fp16, []>(1.00135803e-05)];
            tensor<fp16, [1, 512, 1, 4]> x_305_cast = batch_norm(beta = x_305_beta_0_to_fp16, epsilon = x_305_epsilon_0_to_fp16, gamma = x_305_gamma_0_to_fp16, mean = x_305_mean_0_to_fp16, variance = x_305_variance_0_to_fp16, x = var_3822_cast);
            tensor<int32, [2]> var_3833 = const()[name = tensor<string, []>("op_3833"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_3835 = const()[name = tensor<string, []>("op_3835"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> input_145_pad_type_0 = const()[name = tensor<string, []>("input_145_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> input_145_pad_0 = const()[name = tensor<string, []>("input_145_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [2048, 512, 1, 1]> op_3832_to_fp16_affine_quantized = constexpr_affine_dequantize()[axis = tensor<int32, []>(0), name = tensor<string, []>("op_3832_to_fp16_affine_quantized"), quantized_data = tensor<int8, [2048, 512, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(34219584))), scale = tensor<fp16, [2048]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(35270336))), zero_point = tensor<int8, [2048]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(35268224)))];
            tensor<fp16, [2048]> primary_encoder_encoders_3_feed_forward_macaron_w_1_bias_to_fp16 = const()[name = tensor<string, []>("primary_encoder_encoders_3_feed_forward_macaron_w_1_bias_to_fp16"), val = tensor<fp16, [2048]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(35274496)))];
            tensor<fp16, [1, 2048, 1, 4]> input_145_cast = conv(bias = primary_encoder_encoders_3_feed_forward_macaron_w_1_bias_to_fp16, dilations = var_3835, groups = var_3754, pad = input_145_pad_0, pad_type = input_145_pad_type_0, strides = var_3833, weight = op_3832_to_fp16_affine_quantized, x = x_305_cast);
            tensor<fp16, [1, 2048, 1, 4]> input_147_cast = silu(x = input_145_cast);
            tensor<int32, [2]> var_3844 = const()[name = tensor<string, []>("op_3844"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_3846 = const()[name = tensor<string, []>("op_3846"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> input_149_pad_type_0 = const()[name = tensor<string, []>("input_149_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> input_149_pad_0 = const()[name = tensor<string, []>("input_149_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [512, 2048, 1, 1]> op_3851_weight_0_to_fp16_affine_quantized = constexpr_affine_dequantize()[axis = tensor<int32, []>(0), name = tensor<string, []>("op_3851_weight_0_to_fp16_affine_quantized"), quantized_data = tensor<int8, [512, 2048, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(35278656))), scale = tensor<fp16, [512]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(36327872))), zero_point = tensor<int8, [512]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(36327296)))];
            tensor<fp16, [512]> var_3851_bias_0_to_fp16 = const()[name = tensor<string, []>("op_3851_bias_0_to_fp16"), val = tensor<fp16, [512]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(36328960)))];
            tensor<fp16, [1, 512, 1, 4]> var_3851_cast = conv(bias = var_3851_bias_0_to_fp16, dilations = var_3846, groups = var_3754, pad = input_149_pad_0, pad_type = input_149_pad_type_0, strides = var_3844, weight = op_3851_weight_0_to_fp16_affine_quantized, x = input_147_cast);
            tensor<fp16, [1, 512, 1, 4]> x_311_cast = add(x = x_301_cast, y = var_3851_cast);
            tensor<fp16, [1, 512, 1, 4]> var_3853_cast = abs(x = x_311_cast);
            tensor<fp16, []> var_3854_to_fp16 = const()[name = tensor<string, []>("op_3854_to_fp16"), val = tensor<fp16, []>(0.001953125)];
            tensor<fp16, [1, 512, 1, 4]> var_3855_cast = mul(x = var_3853_cast, y = var_3854_to_fp16);
            tensor<int32, [1]> var_3856 = const()[name = tensor<string, []>("op_3856"), val = tensor<int32, [1]>([1])];
            tensor<fp16, [1, 1, 1, 4]> scale_193_cast = reduce_sum(axes = var_3856, keep_dims = var_3753, x = var_3855_cast);
            tensor<fp16, []> scale_195_epsilon_0_to_fp16 = const()[name = tensor<string, []>("scale_195_epsilon_0_to_fp16"), val = tensor<fp16, []>(5.96046448e-08)];
            tensor<fp16, [1, 1, 1, 4]> scale_195_cast = rsqrt(epsilon = scale_195_epsilon_0_to_fp16, x = scale_193_cast);
            tensor<fp16, [1, 1, 1, 4]> scale_197_cast = mul(x = scale_195_cast, y = scale_195_cast);
            tensor<fp16, [1, 512, 1, 4]> x_313_cast = mul(x = x_311_cast, y = scale_197_cast);
            tensor<fp16, []> var_3861_to_fp16 = const()[name = tensor<string, []>("op_3861_to_fp16"), val = tensor<fp16, []>(-0.001953125)];
            tensor<fp16, [1, 512, 1, 4]> var_3862_cast = mul(x = x_313_cast, y = var_3861_to_fp16);
            tensor<int32, [1]> var_3863 = const()[name = tensor<string, []>("op_3863"), val = tensor<int32, [1]>([1])];
            tensor<fp16, [1, 1, 1, 4]> x_mean_65_cast = reduce_sum(axes = var_3863, keep_dims = var_3753, x = var_3862_cast);
            tensor<fp16, [1, 512, 1, 4]> x_zero_mean_65_cast = add(x = x_313_cast, y = x_mean_65_cast);
            tensor<fp16, []> var_3866_to_fp16 = const()[name = tensor<string, []>("op_3866_to_fp16"), val = tensor<fp16, []>(0.001953125)];
            tensor<fp16, [1, 512, 1, 4]> var_3867_cast = mul(x = x_zero_mean_65_cast, y = var_3866_to_fp16);
            tensor<fp16, [1, 512, 1, 4]> var_3868_cast = mul(x = var_3867_cast, y = x_zero_mean_65_cast);
            tensor<int32, [1]> var_3869 = const()[name = tensor<string, []>("op_3869"), val = tensor<int32, [1]>([1])];
            tensor<fp16, [1, 1, 1, 4]> x_var_65_cast = reduce_sum(axes = var_3869, keep_dims = var_3753, x = var_3868_cast);
            tensor<fp16, []> var_3871_to_fp16 = const()[name = tensor<string, []>("op_3871_to_fp16"), val = tensor<fp16, []>(1.00135803e-05)];
            tensor<fp16, [1, 1, 1, 4]> var_3872_cast = add(x = x_var_65_cast, y = var_3871_to_fp16);
            tensor<fp16, []> var_3873_epsilon_0_to_fp16 = const()[name = tensor<string, []>("op_3873_epsilon_0_to_fp16"), val = tensor<fp16, []>(5.96046448e-08)];
            tensor<fp16, [1, 1, 1, 4]> var_3873_cast = rsqrt(epsilon = var_3873_epsilon_0_to_fp16, x = var_3872_cast);
            tensor<fp16, [1, 512, 1, 4]> var_3874_cast = mul(x = x_zero_mean_65_cast, y = var_3873_cast);
            tensor<fp16, [512]> query_5_mean_0_to_fp16 = const()[name = tensor<string, []>("query_5_mean_0_to_fp16"), val = tensor<fp16, [512]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(36330048)))];
            tensor<fp16, [512]> query_5_variance_0_to_fp16 = const()[name = tensor<string, []>("query_5_variance_0_to_fp16"), val = tensor<fp16, [512]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(36331136)))];
            tensor<fp16, [512]> query_5_gamma_0_to_fp16 = const()[name = tensor<string, []>("query_5_gamma_0_to_fp16"), val = tensor<fp16, [512]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(36332224)))];
            tensor<fp16, [512]> query_5_beta_0_to_fp16 = const()[name = tensor<string, []>("query_5_beta_0_to_fp16"), val = tensor<fp16, [512]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(36333312)))];
            tensor<fp16, []> query_5_epsilon_0_to_fp16 = const()[name = tensor<string, []>("query_5_epsilon_0_to_fp16"), val = tensor<fp16, []>(1.00135803e-05)];
            tensor<fp16, [1, 512, 1, 4]> query_5_cast = batch_norm(beta = query_5_beta_0_to_fp16, epsilon = query_5_epsilon_0_to_fp16, gamma = query_5_gamma_0_to_fp16, mean = query_5_mean_0_to_fp16, variance = query_5_variance_0_to_fp16, x = var_3874_cast);
            tensor<int32, [2]> var_3894 = const()[name = tensor<string, []>("op_3894"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_3896 = const()[name = tensor<string, []>("op_3896"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> var_3898_pad_type_0 = const()[name = tensor<string, []>("op_3898_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> var_3898_pad_0 = const()[name = tensor<string, []>("op_3898_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [512, 512, 1, 1]> op_3893_to_fp16_affine_quantized = constexpr_affine_dequantize()[axis = tensor<int32, []>(0), name = tensor<string, []>("op_3893_to_fp16_affine_quantized"), quantized_data = tensor<int8, [512, 512, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(36334400))), scale = tensor<fp16, [512]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(36597184))), zero_point = tensor<int8, [512]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(36596608)))];
            tensor<fp16, [512]> primary_encoder_encoders_3_self_attn_linear_v_bias_to_fp16 = const()[name = tensor<string, []>("primary_encoder_encoders_3_self_attn_linear_v_bias_to_fp16"), val = tensor<fp16, [512]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(36598272)))];
            tensor<fp16, [1, 512, 1, 4]> var_3898_cast = conv(bias = primary_encoder_encoders_3_self_attn_linear_v_bias_to_fp16, dilations = var_3896, groups = var_3754, pad = var_3898_pad_0, pad_type = var_3898_pad_type_0, strides = var_3894, weight = op_3893_to_fp16_affine_quantized, x = query_5_cast);
            tensor<int32, [8]> tile_30 = const()[name = tensor<string, []>("tile_30"), val = tensor<int32, [8]>([64, 64, 64, 64, 64, 64, 64, 64])];
            tensor<int32, []> var_3899_axis_0 = const()[name = tensor<string, []>("op_3899_axis_0"), val = tensor<int32, []>(1)];
            tensor<fp16, [1, 64, 1, 4]> var_3899_cast_0, tensor<fp16, [1, 64, 1, 4]> var_3899_cast_1, tensor<fp16, [1, 64, 1, 4]> var_3899_cast_2, tensor<fp16, [1, 64, 1, 4]> var_3899_cast_3, tensor<fp16, [1, 64, 1, 4]> var_3899_cast_4, tensor<fp16, [1, 64, 1, 4]> var_3899_cast_5, tensor<fp16, [1, 64, 1, 4]> var_3899_cast_6, tensor<fp16, [1, 64, 1, 4]> var_3899_cast_7 = split(axis = var_3899_axis_0, split_sizes = tile_30, x = var_3898_cast);
            tensor<int32, [8]> tile_31 = const()[name = tensor<string, []>("tile_31"), val = tensor<int32, [8]>([1, 1, 1, 1, 1, 1, 1, 1])];
            tensor<int32, []> var_3908_axis_0 = const()[name = tensor<string, []>("op_3908_axis_0"), val = tensor<int32, []>(2)];
            tensor<fp16, [1, 64, 1, 128]> var_3908_cast_0, tensor<fp16, [1, 64, 1, 128]> var_3908_cast_1, tensor<fp16, [1, 64, 1, 128]> var_3908_cast_2, tensor<fp16, [1, 64, 1, 128]> var_3908_cast_3, tensor<fp16, [1, 64, 1, 128]> var_3908_cast_4, tensor<fp16, [1, 64, 1, 128]> var_3908_cast_5, tensor<fp16, [1, 64, 1, 128]> var_3908_cast_6, tensor<fp16, [1, 64, 1, 128]> var_3908_cast_7 = split(axis = var_3908_axis_0, split_sizes = tile_31, x = var_321_cast_3);
            tensor<bool, []> var_3918_interleave_0 = const()[name = tensor<string, []>("op_3918_interleave_0"), val = tensor<bool, []>(false)];
            tensor<fp16, [1, 64, 1, 132]> var_3918_cast = concat(axis = var_3751, interleave = var_3918_interleave_0, values = (var_3908_cast_0, var_3899_cast_0));
            tensor<int32, [4]> var_3922_begin_0 = const()[name = tensor<string, []>("op_3922_begin_0"), val = tensor<int32, [4]>([0, 0, 0, 4])];
            tensor<int32, [4]> var_3922_end_0 = const()[name = tensor<string, []>("op_3922_end_0"), val = tensor<int32, [4]>([1, 64, 1, 132])];
            tensor<bool, [4]> var_3922_end_mask_0 = const()[name = tensor<string, []>("op_3922_end_mask_0"), val = tensor<bool, [4]>([true, true, true, true])];
            tensor<fp16, [1, 64, 1, 128]> var_3922_cast = slice_by_index(begin = var_3922_begin_0, end = var_3922_end_0, end_mask = var_3922_end_mask_0, x = var_3918_cast);
            tensor<bool, []> var_3924_interleave_0 = const()[name = tensor<string, []>("op_3924_interleave_0"), val = tensor<bool, []>(false)];
            tensor<fp16, [1, 64, 1, 132]> var_3924_cast = concat(axis = var_3751, interleave = var_3924_interleave_0, values = (var_3908_cast_1, var_3899_cast_1));
            tensor<int32, [4]> var_3928_begin_0 = const()[name = tensor<string, []>("op_3928_begin_0"), val = tensor<int32, [4]>([0, 0, 0, 4])];
            tensor<int32, [4]> var_3928_end_0 = const()[name = tensor<string, []>("op_3928_end_0"), val = tensor<int32, [4]>([1, 64, 1, 132])];
            tensor<bool, [4]> var_3928_end_mask_0 = const()[name = tensor<string, []>("op_3928_end_mask_0"), val = tensor<bool, [4]>([true, true, true, true])];
            tensor<fp16, [1, 64, 1, 128]> var_3928_cast = slice_by_index(begin = var_3928_begin_0, end = var_3928_end_0, end_mask = var_3928_end_mask_0, x = var_3924_cast);
            tensor<bool, []> var_3930_interleave_0 = const()[name = tensor<string, []>("op_3930_interleave_0"), val = tensor<bool, []>(false)];
            tensor<fp16, [1, 64, 1, 132]> var_3930_cast = concat(axis = var_3751, interleave = var_3930_interleave_0, values = (var_3908_cast_2, var_3899_cast_2));
            tensor<int32, [4]> var_3934_begin_0 = const()[name = tensor<string, []>("op_3934_begin_0"), val = tensor<int32, [4]>([0, 0, 0, 4])];
            tensor<int32, [4]> var_3934_end_0 = const()[name = tensor<string, []>("op_3934_end_0"), val = tensor<int32, [4]>([1, 64, 1, 132])];
            tensor<bool, [4]> var_3934_end_mask_0 = const()[name = tensor<string, []>("op_3934_end_mask_0"), val = tensor<bool, [4]>([true, true, true, true])];
            tensor<fp16, [1, 64, 1, 128]> var_3934_cast = slice_by_index(begin = var_3934_begin_0, end = var_3934_end_0, end_mask = var_3934_end_mask_0, x = var_3930_cast);
            tensor<bool, []> var_3936_interleave_0 = const()[name = tensor<string, []>("op_3936_interleave_0"), val = tensor<bool, []>(false)];
            tensor<fp16, [1, 64, 1, 132]> var_3936_cast = concat(axis = var_3751, interleave = var_3936_interleave_0, values = (var_3908_cast_3, var_3899_cast_3));
            tensor<int32, [4]> var_3940_begin_0 = const()[name = tensor<string, []>("op_3940_begin_0"), val = tensor<int32, [4]>([0, 0, 0, 4])];
            tensor<int32, [4]> var_3940_end_0 = const()[name = tensor<string, []>("op_3940_end_0"), val = tensor<int32, [4]>([1, 64, 1, 132])];
            tensor<bool, [4]> var_3940_end_mask_0 = const()[name = tensor<string, []>("op_3940_end_mask_0"), val = tensor<bool, [4]>([true, true, true, true])];
            tensor<fp16, [1, 64, 1, 128]> var_3940_cast = slice_by_index(begin = var_3940_begin_0, end = var_3940_end_0, end_mask = var_3940_end_mask_0, x = var_3936_cast);
            tensor<bool, []> var_3942_interleave_0 = const()[name = tensor<string, []>("op_3942_interleave_0"), val = tensor<bool, []>(false)];
            tensor<fp16, [1, 64, 1, 132]> var_3942_cast = concat(axis = var_3751, interleave = var_3942_interleave_0, values = (var_3908_cast_4, var_3899_cast_4));
            tensor<int32, [4]> var_3946_begin_0 = const()[name = tensor<string, []>("op_3946_begin_0"), val = tensor<int32, [4]>([0, 0, 0, 4])];
            tensor<int32, [4]> var_3946_end_0 = const()[name = tensor<string, []>("op_3946_end_0"), val = tensor<int32, [4]>([1, 64, 1, 132])];
            tensor<bool, [4]> var_3946_end_mask_0 = const()[name = tensor<string, []>("op_3946_end_mask_0"), val = tensor<bool, [4]>([true, true, true, true])];
            tensor<fp16, [1, 64, 1, 128]> var_3946_cast = slice_by_index(begin = var_3946_begin_0, end = var_3946_end_0, end_mask = var_3946_end_mask_0, x = var_3942_cast);
            tensor<bool, []> var_3948_interleave_0 = const()[name = tensor<string, []>("op_3948_interleave_0"), val = tensor<bool, []>(false)];
            tensor<fp16, [1, 64, 1, 132]> var_3948_cast = concat(axis = var_3751, interleave = var_3948_interleave_0, values = (var_3908_cast_5, var_3899_cast_5));
            tensor<int32, [4]> var_3952_begin_0 = const()[name = tensor<string, []>("op_3952_begin_0"), val = tensor<int32, [4]>([0, 0, 0, 4])];
            tensor<int32, [4]> var_3952_end_0 = const()[name = tensor<string, []>("op_3952_end_0"), val = tensor<int32, [4]>([1, 64, 1, 132])];
            tensor<bool, [4]> var_3952_end_mask_0 = const()[name = tensor<string, []>("op_3952_end_mask_0"), val = tensor<bool, [4]>([true, true, true, true])];
            tensor<fp16, [1, 64, 1, 128]> var_3952_cast = slice_by_index(begin = var_3952_begin_0, end = var_3952_end_0, end_mask = var_3952_end_mask_0, x = var_3948_cast);
            tensor<bool, []> var_3954_interleave_0 = const()[name = tensor<string, []>("op_3954_interleave_0"), val = tensor<bool, []>(false)];
            tensor<fp16, [1, 64, 1, 132]> var_3954_cast = concat(axis = var_3751, interleave = var_3954_interleave_0, values = (var_3908_cast_6, var_3899_cast_6));
            tensor<int32, [4]> var_3958_begin_0 = const()[name = tensor<string, []>("op_3958_begin_0"), val = tensor<int32, [4]>([0, 0, 0, 4])];
            tensor<int32, [4]> var_3958_end_0 = const()[name = tensor<string, []>("op_3958_end_0"), val = tensor<int32, [4]>([1, 64, 1, 132])];
            tensor<bool, [4]> var_3958_end_mask_0 = const()[name = tensor<string, []>("op_3958_end_mask_0"), val = tensor<bool, [4]>([true, true, true, true])];
            tensor<fp16, [1, 64, 1, 128]> var_3958_cast = slice_by_index(begin = var_3958_begin_0, end = var_3958_end_0, end_mask = var_3958_end_mask_0, x = var_3954_cast);
            tensor<bool, []> var_3960_interleave_0 = const()[name = tensor<string, []>("op_3960_interleave_0"), val = tensor<bool, []>(false)];
            tensor<fp16, [1, 64, 1, 132]> var_3960_cast = concat(axis = var_3751, interleave = var_3960_interleave_0, values = (var_3908_cast_7, var_3899_cast_7));
            tensor<int32, [4]> var_3964_begin_0 = const()[name = tensor<string, []>("op_3964_begin_0"), val = tensor<int32, [4]>([0, 0, 0, 4])];
            tensor<int32, [4]> var_3964_end_0 = const()[name = tensor<string, []>("op_3964_end_0"), val = tensor<int32, [4]>([1, 64, 1, 132])];
            tensor<bool, [4]> var_3964_end_mask_0 = const()[name = tensor<string, []>("op_3964_end_mask_0"), val = tensor<bool, [4]>([true, true, true, true])];
            tensor<fp16, [1, 64, 1, 128]> var_3964_cast = slice_by_index(begin = var_3964_begin_0, end = var_3964_end_0, end_mask = var_3964_end_mask_0, x = var_3960_cast);
            tensor<bool, []> var_3966_interleave_0 = const()[name = tensor<string, []>("op_3966_interleave_0"), val = tensor<bool, []>(false)];
            tensor<fp16, [1, 64, 8, 128]> var_3966_cast = concat(axis = var_3748, interleave = var_3966_interleave_0, values = (var_3922_cast, var_3928_cast, var_3934_cast, var_3940_cast, var_3946_cast, var_3952_cast, var_3958_cast, var_3964_cast));
            tensor<string, []> var_3968_equation_0 = const()[name = tensor<string, []>("op_3968_equation_0"), val = tensor<string, []>("bnhd,bdhm->bnhm")];
            tensor<fp16, [1, 64, 1, 4]> var_3968_cast = einsum(equation = var_3968_equation_0, values = (var_3922_cast, input_81_cast));
            tensor<string, []> var_3970_equation_0 = const()[name = tensor<string, []>("op_3970_equation_0"), val = tensor<string, []>("bnhd,bdhm->bnhm")];
            tensor<fp16, [1, 64, 1, 4]> var_3970_cast = einsum(equation = var_3970_equation_0, values = (var_3928_cast, input_83_cast));
            tensor<string, []> var_3972_equation_0 = const()[name = tensor<string, []>("op_3972_equation_0"), val = tensor<string, []>("bnhd,bdhm->bnhm")];
            tensor<fp16, [1, 64, 1, 4]> var_3972_cast = einsum(equation = var_3972_equation_0, values = (var_3934_cast, input_85_cast));
            tensor<string, []> var_3974_equation_0 = const()[name = tensor<string, []>("op_3974_equation_0"), val = tensor<string, []>("bnhd,bdhm->bnhm")];
            tensor<fp16, [1, 64, 1, 4]> var_3974_cast = einsum(equation = var_3974_equation_0, values = (var_3940_cast, input_87_cast));
            tensor<string, []> var_3976_equation_0 = const()[name = tensor<string, []>("op_3976_equation_0"), val = tensor<string, []>("bnhd,bdhm->bnhm")];
            tensor<fp16, [1, 64, 1, 4]> var_3976_cast = einsum(equation = var_3976_equation_0, values = (var_3946_cast, input_89_cast));
            tensor<string, []> var_3978_equation_0 = const()[name = tensor<string, []>("op_3978_equation_0"), val = tensor<string, []>("bnhd,bdhm->bnhm")];
            tensor<fp16, [1, 64, 1, 4]> var_3978_cast = einsum(equation = var_3978_equation_0, values = (var_3952_cast, input_91_cast));
            tensor<string, []> var_3980_equation_0 = const()[name = tensor<string, []>("op_3980_equation_0"), val = tensor<string, []>("bnhd,bdhm->bnhm")];
            tensor<fp16, [1, 64, 1, 4]> var_3980_cast = einsum(equation = var_3980_equation_0, values = (var_3958_cast, input_93_cast));
            tensor<string, []> var_3982_equation_0 = const()[name = tensor<string, []>("op_3982_equation_0"), val = tensor<string, []>("bnhd,bdhm->bnhm")];
            tensor<fp16, [1, 64, 1, 4]> var_3982_cast = einsum(equation = var_3982_equation_0, values = (var_3964_cast, input_95_cast));
            tensor<bool, []> y_17_interleave_0 = const()[name = tensor<string, []>("y_17_interleave_0"), val = tensor<bool, []>(false)];
            tensor<fp16, [1, 512, 1, 4]> y_17_cast = concat(axis = var_3754, interleave = y_17_interleave_0, values = (var_3968_cast, var_3970_cast, var_3972_cast, var_3974_cast, var_3976_cast, var_3978_cast, var_3980_cast, var_3982_cast));
            tensor<int32, [2]> var_3989 = const()[name = tensor<string, []>("op_3989"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_3991 = const()[name = tensor<string, []>("op_3991"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> input_151_pad_type_0 = const()[name = tensor<string, []>("input_151_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> input_151_pad_0 = const()[name = tensor<string, []>("input_151_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [512, 512, 1, 1]> op_3988_to_fp16_affine_quantized = constexpr_affine_dequantize()[axis = tensor<int32, []>(0), name = tensor<string, []>("op_3988_to_fp16_affine_quantized"), quantized_data = tensor<int8, [512, 512, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(36599360))), scale = tensor<fp16, [512]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(36862144))), zero_point = tensor<int8, [512]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(36861568)))];
            tensor<fp16, [512]> primary_encoder_encoders_3_self_attn_linear_out_bias_to_fp16 = const()[name = tensor<string, []>("primary_encoder_encoders_3_self_attn_linear_out_bias_to_fp16"), val = tensor<fp16, [512]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(36863232)))];
            tensor<fp16, [1, 512, 1, 4]> input_151_cast = conv(bias = primary_encoder_encoders_3_self_attn_linear_out_bias_to_fp16, dilations = var_3991, groups = var_3754, pad = input_151_pad_0, pad_type = input_151_pad_type_0, strides = var_3989, weight = op_3988_to_fp16_affine_quantized, x = y_17_cast);
            tensor<fp16, [1, 512, 1, 4]> x_315_cast = add(x = x_311_cast, y = input_151_cast);
            tensor<fp16, [1, 512, 1, 4]> var_3999_cast = abs(x = x_315_cast);
            tensor<fp16, []> var_4000_to_fp16 = const()[name = tensor<string, []>("op_4000_to_fp16"), val = tensor<fp16, []>(0.001953125)];
            tensor<fp16, [1, 512, 1, 4]> var_4001_cast = mul(x = var_3999_cast, y = var_4000_to_fp16);
            tensor<int32, [1]> var_4002 = const()[name = tensor<string, []>("op_4002"), val = tensor<int32, [1]>([1])];
            tensor<fp16, [1, 1, 1, 4]> scale_199_cast = reduce_sum(axes = var_4002, keep_dims = var_3753, x = var_4001_cast);
            tensor<fp16, []> scale_201_epsilon_0_to_fp16 = const()[name = tensor<string, []>("scale_201_epsilon_0_to_fp16"), val = tensor<fp16, []>(5.96046448e-08)];
            tensor<fp16, [1, 1, 1, 4]> scale_201_cast = rsqrt(epsilon = scale_201_epsilon_0_to_fp16, x = scale_199_cast);
            tensor<fp16, [1, 1, 1, 4]> scale_203_cast = mul(x = scale_201_cast, y = scale_201_cast);
            tensor<fp16, [1, 512, 1, 4]> x_317_cast = mul(x = x_315_cast, y = scale_203_cast);
            tensor<fp16, []> var_4007_to_fp16 = const()[name = tensor<string, []>("op_4007_to_fp16"), val = tensor<fp16, []>(-0.001953125)];
            tensor<fp16, [1, 512, 1, 4]> var_4008_cast = mul(x = x_317_cast, y = var_4007_to_fp16);
            tensor<int32, [1]> var_4009 = const()[name = tensor<string, []>("op_4009"), val = tensor<int32, [1]>([1])];
            tensor<fp16, [1, 1, 1, 4]> x_mean_67_cast = reduce_sum(axes = var_4009, keep_dims = var_3753, x = var_4008_cast);
            tensor<fp16, [1, 512, 1, 4]> x_zero_mean_67_cast = add(x = x_317_cast, y = x_mean_67_cast);
            tensor<fp16, []> var_4012_to_fp16 = const()[name = tensor<string, []>("op_4012_to_fp16"), val = tensor<fp16, []>(0.001953125)];
            tensor<fp16, [1, 512, 1, 4]> var_4013_cast = mul(x = x_zero_mean_67_cast, y = var_4012_to_fp16);
            tensor<fp16, [1, 512, 1, 4]> var_4014_cast = mul(x = var_4013_cast, y = x_zero_mean_67_cast);
            tensor<int32, [1]> var_4015 = const()[name = tensor<string, []>("op_4015"), val = tensor<int32, [1]>([1])];
            tensor<fp16, [1, 1, 1, 4]> x_var_67_cast = reduce_sum(axes = var_4015, keep_dims = var_3753, x = var_4014_cast);
            tensor<fp16, []> var_4017_to_fp16 = const()[name = tensor<string, []>("op_4017_to_fp16"), val = tensor<fp16, []>(1.00135803e-05)];
            tensor<fp16, [1, 1, 1, 4]> var_4018_cast = add(x = x_var_67_cast, y = var_4017_to_fp16);
            tensor<fp16, []> var_4019_epsilon_0_to_fp16 = const()[name = tensor<string, []>("op_4019_epsilon_0_to_fp16"), val = tensor<fp16, []>(5.96046448e-08)];
            tensor<fp16, [1, 1, 1, 4]> var_4019_cast = rsqrt(epsilon = var_4019_epsilon_0_to_fp16, x = var_4018_cast);
            tensor<fp16, [1, 512, 1, 4]> var_4020_cast = mul(x = x_zero_mean_67_cast, y = var_4019_cast);
            tensor<fp16, [512]> x_319_mean_0_to_fp16 = const()[name = tensor<string, []>("x_319_mean_0_to_fp16"), val = tensor<fp16, [512]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(36864320)))];
            tensor<fp16, [512]> x_319_variance_0_to_fp16 = const()[name = tensor<string, []>("x_319_variance_0_to_fp16"), val = tensor<fp16, [512]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(36865408)))];
            tensor<fp16, [512]> x_319_gamma_0_to_fp16 = const()[name = tensor<string, []>("x_319_gamma_0_to_fp16"), val = tensor<fp16, [512]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(36866496)))];
            tensor<fp16, [512]> x_319_beta_0_to_fp16 = const()[name = tensor<string, []>("x_319_beta_0_to_fp16"), val = tensor<fp16, [512]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(36867584)))];
            tensor<fp16, []> x_319_epsilon_0_to_fp16 = const()[name = tensor<string, []>("x_319_epsilon_0_to_fp16"), val = tensor<fp16, []>(1.00135803e-05)];
            tensor<fp16, [1, 512, 1, 4]> x_319_cast = batch_norm(beta = x_319_beta_0_to_fp16, epsilon = x_319_epsilon_0_to_fp16, gamma = x_319_gamma_0_to_fp16, mean = x_319_mean_0_to_fp16, variance = x_319_variance_0_to_fp16, x = var_4020_cast);
            tensor<bool, []> x_321_interleave_0 = const()[name = tensor<string, []>("x_321_interleave_0"), val = tensor<bool, []>(false)];
            tensor<fp16, [1, 512, 1, 36]> x_321_cast = concat(axis = var_3751, interleave = x_321_interleave_0, values = (var_301_cast_3, x_319_cast));
            tensor<int32, [4]> x_323_begin_0 = const()[name = tensor<string, []>("x_323_begin_0"), val = tensor<int32, [4]>([0, 0, 0, 12])];
            tensor<int32, [4]> x_323_end_0 = const()[name = tensor<string, []>("x_323_end_0"), val = tensor<int32, [4]>([1, 512, 1, 36])];
            tensor<bool, [4]> x_323_end_mask_0 = const()[name = tensor<string, []>("x_323_end_mask_0"), val = tensor<bool, [4]>([true, true, true, true])];
            tensor<fp16, [1, 512, 1, 24]> x_323_cast = slice_by_index(begin = x_323_begin_0, end = x_323_end_0, end_mask = x_323_end_mask_0, x = x_321_cast);
            tensor<int32, [4]> x_325_begin_0 = const()[name = tensor<string, []>("x_325_begin_0"), val = tensor<int32, [4]>([0, 0, 0, 12])];
            tensor<int32, [4]> x_325_end_0 = const()[name = tensor<string, []>("x_325_end_0"), val = tensor<int32, [4]>([1, 512, 1, 24])];
            tensor<bool, [4]> x_325_end_mask_0 = const()[name = tensor<string, []>("x_325_end_mask_0"), val = tensor<bool, [4]>([true, true, true, true])];
            tensor<fp16, [1, 512, 1, 12]> x_325_cast = slice_by_index(begin = x_325_begin_0, end = x_325_end_0, end_mask = x_325_end_mask_0, x = x_323_cast);
            tensor<int32, [4]> x_327_begin_0 = const()[name = tensor<string, []>("x_327_begin_0"), val = tensor<int32, [4]>([0, 0, 0, 1])];
            tensor<int32, [4]> x_327_end_0 = const()[name = tensor<string, []>("x_327_end_0"), val = tensor<int32, [4]>([1, 512, 1, 12])];
            tensor<bool, [4]> x_327_end_mask_0 = const()[name = tensor<string, []>("x_327_end_mask_0"), val = tensor<bool, [4]>([true, true, true, true])];
            tensor<fp16, [1, 512, 1, 11]> x_327_cast = slice_by_index(begin = x_327_begin_0, end = x_327_end_0, end_mask = x_327_end_mask_0, x = x_325_cast);
            tensor<int32, [4]> var_4060_begin_0 = const()[name = tensor<string, []>("op_4060_begin_0"), val = tensor<int32, [4]>([0, 0, 0, -7])];
            tensor<int32, [4]> var_4060_end_0 = const()[name = tensor<string, []>("op_4060_end_0"), val = tensor<int32, [4]>([1, 512, 1, 11])];
            tensor<bool, [4]> var_4060_end_mask_0 = const()[name = tensor<string, []>("op_4060_end_mask_0"), val = tensor<bool, [4]>([true, true, true, true])];
            tensor<fp16, [1, 512, 1, 7]> var_4060_cast = slice_by_index(begin = var_4060_begin_0, end = var_4060_end_0, end_mask = var_4060_end_mask_0, x = x_327_cast);
            tensor<int32, [2]> var_4062 = const()[name = tensor<string, []>("op_4062"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_4064 = const()[name = tensor<string, []>("op_4064"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> x_329_pad_type_0 = const()[name = tensor<string, []>("x_329_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> x_329_pad_0 = const()[name = tensor<string, []>("x_329_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [1024, 512, 1, 1]> op_4061_to_fp16_affine_quantized = constexpr_affine_dequantize()[axis = tensor<int32, []>(0), name = tensor<string, []>("op_4061_to_fp16_affine_quantized"), quantized_data = tensor<int8, [1024, 512, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(36868672))), scale = tensor<fp16, [1024]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(37394112))), zero_point = tensor<int8, [1024]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(37393024)))];
            tensor<fp16, [1024]> primary_encoder_encoders_3_conv_module_pointwise_conv1_bias_to_fp16 = const()[name = tensor<string, []>("primary_encoder_encoders_3_conv_module_pointwise_conv1_bias_to_fp16"), val = tensor<fp16, [1024]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(37396224)))];
            tensor<fp16, [1, 1024, 1, 11]> x_329_cast = conv(bias = primary_encoder_encoders_3_conv_module_pointwise_conv1_bias_to_fp16, dilations = var_4064, groups = var_3754, pad = x_329_pad_0, pad_type = x_329_pad_type_0, strides = var_4062, weight = op_4061_to_fp16_affine_quantized, x = x_327_cast);
            tensor<int32, [4]> var_4073_begin_0 = const()[name = tensor<string, []>("op_4073_begin_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<int32, [4]> var_4073_end_0 = const()[name = tensor<string, []>("op_4073_end_0"), val = tensor<int32, [4]>([1, 512, 1, 11])];
            tensor<bool, [4]> var_4073_end_mask_0 = const()[name = tensor<string, []>("op_4073_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [1, 512, 1, 11]> var_4073_cast = slice_by_index(begin = var_4073_begin_0, end = var_4073_end_0, end_mask = var_4073_end_mask_0, x = x_329_cast);
            tensor<int32, [4]> var_4077_begin_0 = const()[name = tensor<string, []>("op_4077_begin_0"), val = tensor<int32, [4]>([0, 512, 0, 0])];
            tensor<int32, [4]> var_4077_end_0 = const()[name = tensor<string, []>("op_4077_end_0"), val = tensor<int32, [4]>([1, 1024, 1, 11])];
            tensor<bool, [4]> var_4077_end_mask_0 = const()[name = tensor<string, []>("op_4077_end_mask_0"), val = tensor<bool, [4]>([true, true, true, true])];
            tensor<fp16, [1, 512, 1, 11]> var_4077_cast = slice_by_index(begin = var_4077_begin_0, end = var_4077_end_0, end_mask = var_4077_end_mask_0, x = x_329_cast);
            tensor<fp16, [1, 512, 1, 11]> var_4080_cast = sigmoid(x = var_4077_cast);
            tensor<fp16, [1, 512, 1, 11]> x_331_cast = mul(x = var_4073_cast, y = var_4080_cast);
            tensor<int32, [2]> var_4083 = const()[name = tensor<string, []>("op_4083"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_4085 = const()[name = tensor<string, []>("op_4085"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> x_333_pad_type_0 = const()[name = tensor<string, []>("x_333_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> x_333_pad_0 = const()[name = tensor<string, []>("x_333_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [512, 1, 1, 8]> op_4082_to_fp16_affine_quantized = constexpr_affine_dequantize()[axis = tensor<int32, []>(0), name = tensor<string, []>("op_4082_to_fp16_affine_quantized"), quantized_data = tensor<int8, [512, 1, 1, 8]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(37398336))), scale = tensor<fp16, [512]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(37403072))), zero_point = tensor<int8, [512]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(37402496)))];
            tensor<fp16, [512]> primary_encoder_encoders_3_conv_module_depthwise_conv_bias_to_fp16 = const()[name = tensor<string, []>("primary_encoder_encoders_3_conv_module_depthwise_conv_bias_to_fp16"), val = tensor<fp16, [512]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(37404160)))];
            tensor<fp16, [1, 512, 1, 4]> x_333_cast = conv(bias = primary_encoder_encoders_3_conv_module_depthwise_conv_bias_to_fp16, dilations = var_4085, groups = var_3742, pad = x_333_pad_0, pad_type = x_333_pad_type_0, strides = var_4083, weight = op_4082_to_fp16_affine_quantized, x = x_331_cast);
            tensor<fp16, [1, 512, 1, 4]> var_4088_cast = abs(x = x_333_cast);
            tensor<fp16, []> var_4089_to_fp16 = const()[name = tensor<string, []>("op_4089_to_fp16"), val = tensor<fp16, []>(0.001953125)];
            tensor<fp16, [1, 512, 1, 4]> var_4090_cast = mul(x = var_4088_cast, y = var_4089_to_fp16);
            tensor<int32, [1]> var_4091 = const()[name = tensor<string, []>("op_4091"), val = tensor<int32, [1]>([1])];
            tensor<fp16, [1, 1, 1, 4]> scale_205_cast = reduce_sum(axes = var_4091, keep_dims = var_3753, x = var_4090_cast);
            tensor<fp16, []> scale_207_epsilon_0_to_fp16 = const()[name = tensor<string, []>("scale_207_epsilon_0_to_fp16"), val = tensor<fp16, []>(5.96046448e-08)];
            tensor<fp16, [1, 1, 1, 4]> scale_207_cast = rsqrt(epsilon = scale_207_epsilon_0_to_fp16, x = scale_205_cast);
            tensor<fp16, [1, 1, 1, 4]> scale_209_cast = mul(x = scale_207_cast, y = scale_207_cast);
            tensor<fp16, [1, 512, 1, 4]> x_335_cast = mul(x = x_333_cast, y = scale_209_cast);
            tensor<fp16, []> var_4096_to_fp16 = const()[name = tensor<string, []>("op_4096_to_fp16"), val = tensor<fp16, []>(-0.001953125)];
            tensor<fp16, [1, 512, 1, 4]> var_4097_cast = mul(x = x_335_cast, y = var_4096_to_fp16);
            tensor<int32, [1]> var_4098 = const()[name = tensor<string, []>("op_4098"), val = tensor<int32, [1]>([1])];
            tensor<fp16, [1, 1, 1, 4]> x_mean_69_cast = reduce_sum(axes = var_4098, keep_dims = var_3753, x = var_4097_cast);
            tensor<fp16, [1, 512, 1, 4]> x_zero_mean_69_cast = add(x = x_335_cast, y = x_mean_69_cast);
            tensor<fp16, []> var_4101_to_fp16 = const()[name = tensor<string, []>("op_4101_to_fp16"), val = tensor<fp16, []>(0.001953125)];
            tensor<fp16, [1, 512, 1, 4]> var_4102_cast = mul(x = x_zero_mean_69_cast, y = var_4101_to_fp16);
            tensor<fp16, [1, 512, 1, 4]> var_4103_cast = mul(x = var_4102_cast, y = x_zero_mean_69_cast);
            tensor<int32, [1]> var_4104 = const()[name = tensor<string, []>("op_4104"), val = tensor<int32, [1]>([1])];
            tensor<fp16, [1, 1, 1, 4]> x_var_69_cast = reduce_sum(axes = var_4104, keep_dims = var_3753, x = var_4103_cast);
            tensor<fp16, []> var_4106_to_fp16 = const()[name = tensor<string, []>("op_4106_to_fp16"), val = tensor<fp16, []>(1.00135803e-05)];
            tensor<fp16, [1, 1, 1, 4]> var_4107_cast = add(x = x_var_69_cast, y = var_4106_to_fp16);
            tensor<fp16, []> var_4108_epsilon_0_to_fp16 = const()[name = tensor<string, []>("op_4108_epsilon_0_to_fp16"), val = tensor<fp16, []>(5.96046448e-08)];
            tensor<fp16, [1, 1, 1, 4]> var_4108_cast = rsqrt(epsilon = var_4108_epsilon_0_to_fp16, x = var_4107_cast);
            tensor<fp16, [1, 512, 1, 4]> var_4109_cast = mul(x = x_zero_mean_69_cast, y = var_4108_cast);
            tensor<fp16, [512]> input_153_mean_0_to_fp16 = const()[name = tensor<string, []>("input_153_mean_0_to_fp16"), val = tensor<fp16, [512]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(37405248)))];
            tensor<fp16, [512]> input_153_variance_0_to_fp16 = const()[name = tensor<string, []>("input_153_variance_0_to_fp16"), val = tensor<fp16, [512]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(37406336)))];
            tensor<fp16, [512]> input_153_gamma_0_to_fp16 = const()[name = tensor<string, []>("input_153_gamma_0_to_fp16"), val = tensor<fp16, [512]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(37407424)))];
            tensor<fp16, [512]> input_153_beta_0_to_fp16 = const()[name = tensor<string, []>("input_153_beta_0_to_fp16"), val = tensor<fp16, [512]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(37408512)))];
            tensor<fp16, []> input_153_epsilon_0_to_fp16 = const()[name = tensor<string, []>("input_153_epsilon_0_to_fp16"), val = tensor<fp16, []>(1.00135803e-05)];
            tensor<fp16, [1, 512, 1, 4]> input_153_cast = batch_norm(beta = input_153_beta_0_to_fp16, epsilon = input_153_epsilon_0_to_fp16, gamma = input_153_gamma_0_to_fp16, mean = input_153_mean_0_to_fp16, variance = input_153_variance_0_to_fp16, x = var_4109_cast);
            tensor<fp16, [1, 512, 1, 4]> x_337_cast = silu(x = input_153_cast);
            tensor<int32, [2]> var_4118 = const()[name = tensor<string, []>("op_4118"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_4120 = const()[name = tensor<string, []>("op_4120"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> input_155_pad_type_0 = const()[name = tensor<string, []>("input_155_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> input_155_pad_0 = const()[name = tensor<string, []>("input_155_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [512, 512, 1, 1]> op_4117_to_fp16_affine_quantized = constexpr_affine_dequantize()[axis = tensor<int32, []>(0), name = tensor<string, []>("op_4117_to_fp16_affine_quantized"), quantized_data = tensor<int8, [512, 512, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(37409600))), scale = tensor<fp16, [512]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(37672384))), zero_point = tensor<int8, [512]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(37671808)))];
            tensor<fp16, [512]> primary_encoder_encoders_3_conv_module_pointwise_conv2_bias_to_fp16 = const()[name = tensor<string, []>("primary_encoder_encoders_3_conv_module_pointwise_conv2_bias_to_fp16"), val = tensor<fp16, [512]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(37673472)))];
            tensor<fp16, [1, 512, 1, 4]> input_155_cast = conv(bias = primary_encoder_encoders_3_conv_module_pointwise_conv2_bias_to_fp16, dilations = var_4120, groups = var_3754, pad = input_155_pad_0, pad_type = input_155_pad_type_0, strides = var_4118, weight = op_4117_to_fp16_affine_quantized, x = x_337_cast);
            tensor<fp16, [1, 512, 1, 4]> x_341_cast = add(x = x_315_cast, y = input_155_cast);
            tensor<fp16, [1, 512, 1, 4]> var_4128_cast = abs(x = x_341_cast);
            tensor<fp16, []> var_4129_to_fp16 = const()[name = tensor<string, []>("op_4129_to_fp16"), val = tensor<fp16, []>(0.001953125)];
            tensor<fp16, [1, 512, 1, 4]> var_4130_cast = mul(x = var_4128_cast, y = var_4129_to_fp16);
            tensor<int32, [1]> var_4131 = const()[name = tensor<string, []>("op_4131"), val = tensor<int32, [1]>([1])];
            tensor<fp16, [1, 1, 1, 4]> scale_211_cast = reduce_sum(axes = var_4131, keep_dims = var_3753, x = var_4130_cast);
            tensor<fp16, []> scale_213_epsilon_0_to_fp16 = const()[name = tensor<string, []>("scale_213_epsilon_0_to_fp16"), val = tensor<fp16, []>(5.96046448e-08)];
            tensor<fp16, [1, 1, 1, 4]> scale_213_cast = rsqrt(epsilon = scale_213_epsilon_0_to_fp16, x = scale_211_cast);
            tensor<fp16, [1, 1, 1, 4]> scale_215_cast = mul(x = scale_213_cast, y = scale_213_cast);
            tensor<fp16, [1, 512, 1, 4]> x_343_cast = mul(x = x_341_cast, y = scale_215_cast);
            tensor<fp16, []> var_4136_to_fp16 = const()[name = tensor<string, []>("op_4136_to_fp16"), val = tensor<fp16, []>(-0.001953125)];
            tensor<fp16, [1, 512, 1, 4]> var_4137_cast = mul(x = x_343_cast, y = var_4136_to_fp16);
            tensor<int32, [1]> var_4138 = const()[name = tensor<string, []>("op_4138"), val = tensor<int32, [1]>([1])];
            tensor<fp16, [1, 1, 1, 4]> x_mean_71_cast = reduce_sum(axes = var_4138, keep_dims = var_3753, x = var_4137_cast);
            tensor<fp16, [1, 512, 1, 4]> x_zero_mean_71_cast = add(x = x_343_cast, y = x_mean_71_cast);
            tensor<fp16, []> var_4141_to_fp16 = const()[name = tensor<string, []>("op_4141_to_fp16"), val = tensor<fp16, []>(0.001953125)];
            tensor<fp16, [1, 512, 1, 4]> var_4142_cast = mul(x = x_zero_mean_71_cast, y = var_4141_to_fp16);
            tensor<fp16, [1, 512, 1, 4]> var_4143_cast = mul(x = var_4142_cast, y = x_zero_mean_71_cast);
            tensor<int32, [1]> var_4144 = const()[name = tensor<string, []>("op_4144"), val = tensor<int32, [1]>([1])];
            tensor<fp16, [1, 1, 1, 4]> x_var_71_cast = reduce_sum(axes = var_4144, keep_dims = var_3753, x = var_4143_cast);
            tensor<fp16, []> var_4146_to_fp16 = const()[name = tensor<string, []>("op_4146_to_fp16"), val = tensor<fp16, []>(1.00135803e-05)];
            tensor<fp16, [1, 1, 1, 4]> var_4147_cast = add(x = x_var_71_cast, y = var_4146_to_fp16);
            tensor<fp16, []> var_4148_epsilon_0_to_fp16 = const()[name = tensor<string, []>("op_4148_epsilon_0_to_fp16"), val = tensor<fp16, []>(5.96046448e-08)];
            tensor<fp16, [1, 1, 1, 4]> var_4148_cast = rsqrt(epsilon = var_4148_epsilon_0_to_fp16, x = var_4147_cast);
            tensor<fp16, [1, 512, 1, 4]> var_4149_cast = mul(x = x_zero_mean_71_cast, y = var_4148_cast);
            tensor<fp16, [512]> x_345_mean_0_to_fp16 = const()[name = tensor<string, []>("x_345_mean_0_to_fp16"), val = tensor<fp16, [512]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(37674560)))];
            tensor<fp16, [512]> x_345_variance_0_to_fp16 = const()[name = tensor<string, []>("x_345_variance_0_to_fp16"), val = tensor<fp16, [512]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(37675648)))];
            tensor<fp16, [512]> x_345_gamma_0_to_fp16 = const()[name = tensor<string, []>("x_345_gamma_0_to_fp16"), val = tensor<fp16, [512]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(37676736)))];
            tensor<fp16, [512]> x_345_beta_0_to_fp16 = const()[name = tensor<string, []>("x_345_beta_0_to_fp16"), val = tensor<fp16, [512]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(37677824)))];
            tensor<fp16, []> x_345_epsilon_0_to_fp16 = const()[name = tensor<string, []>("x_345_epsilon_0_to_fp16"), val = tensor<fp16, []>(1.00135803e-05)];
            tensor<fp16, [1, 512, 1, 4]> x_345_cast = batch_norm(beta = x_345_beta_0_to_fp16, epsilon = x_345_epsilon_0_to_fp16, gamma = x_345_gamma_0_to_fp16, mean = x_345_mean_0_to_fp16, variance = x_345_variance_0_to_fp16, x = var_4149_cast);
            tensor<int32, [2]> var_4160 = const()[name = tensor<string, []>("op_4160"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_4162 = const()[name = tensor<string, []>("op_4162"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> input_157_pad_type_0 = const()[name = tensor<string, []>("input_157_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> input_157_pad_0 = const()[name = tensor<string, []>("input_157_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [2048, 512, 1, 1]> op_4159_to_fp16_affine_quantized = constexpr_affine_dequantize()[axis = tensor<int32, []>(0), name = tensor<string, []>("op_4159_to_fp16_affine_quantized"), quantized_data = tensor<int8, [2048, 512, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(37678912))), scale = tensor<fp16, [2048]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(38729664))), zero_point = tensor<int8, [2048]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(38727552)))];
            tensor<fp16, [2048]> primary_encoder_encoders_3_feed_forward_w_1_bias_to_fp16 = const()[name = tensor<string, []>("primary_encoder_encoders_3_feed_forward_w_1_bias_to_fp16"), val = tensor<fp16, [2048]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(38733824)))];
            tensor<fp16, [1, 2048, 1, 4]> input_157_cast = conv(bias = primary_encoder_encoders_3_feed_forward_w_1_bias_to_fp16, dilations = var_4162, groups = var_3754, pad = input_157_pad_0, pad_type = input_157_pad_type_0, strides = var_4160, weight = op_4159_to_fp16_affine_quantized, x = x_345_cast);
            tensor<fp16, [1, 2048, 1, 4]> input_159_cast = silu(x = input_157_cast);
            tensor<int32, [2]> var_4171 = const()[name = tensor<string, []>("op_4171"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_4173 = const()[name = tensor<string, []>("op_4173"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> input_161_pad_type_0 = const()[name = tensor<string, []>("input_161_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> input_161_pad_0 = const()[name = tensor<string, []>("input_161_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [512, 2048, 1, 1]> op_4178_weight_0_to_fp16_affine_quantized = constexpr_affine_dequantize()[axis = tensor<int32, []>(0), name = tensor<string, []>("op_4178_weight_0_to_fp16_affine_quantized"), quantized_data = tensor<int8, [512, 2048, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(38737984))), scale = tensor<fp16, [512]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(39787200))), zero_point = tensor<int8, [512]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(39786624)))];
            tensor<fp16, [512]> var_4178_bias_0_to_fp16 = const()[name = tensor<string, []>("op_4178_bias_0_to_fp16"), val = tensor<fp16, [512]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(39788288)))];
            tensor<fp16, [1, 512, 1, 4]> var_4178_cast = conv(bias = var_4178_bias_0_to_fp16, dilations = var_4173, groups = var_3754, pad = input_161_pad_0, pad_type = input_161_pad_type_0, strides = var_4171, weight = op_4178_weight_0_to_fp16_affine_quantized, x = input_159_cast);
            tensor<fp16, [1, 512, 1, 4]> x_351_cast = add(x = x_341_cast, y = var_4178_cast);
            tensor<fp16, [1, 512, 1, 4]> var_4180_cast = abs(x = x_351_cast);
            tensor<fp16, []> var_4181_to_fp16 = const()[name = tensor<string, []>("op_4181_to_fp16"), val = tensor<fp16, []>(0.001953125)];
            tensor<fp16, [1, 512, 1, 4]> var_4182_cast = mul(x = var_4180_cast, y = var_4181_to_fp16);
            tensor<int32, [1]> var_4183 = const()[name = tensor<string, []>("op_4183"), val = tensor<int32, [1]>([1])];
            tensor<fp16, [1, 1, 1, 4]> scale_217_cast = reduce_sum(axes = var_4183, keep_dims = var_3753, x = var_4182_cast);
            tensor<fp16, []> scale_219_epsilon_0_to_fp16 = const()[name = tensor<string, []>("scale_219_epsilon_0_to_fp16"), val = tensor<fp16, []>(5.96046448e-08)];
            tensor<fp16, [1, 1, 1, 4]> scale_219_cast = rsqrt(epsilon = scale_219_epsilon_0_to_fp16, x = scale_217_cast);
            tensor<fp16, [1, 1, 1, 4]> scale_221_cast = mul(x = scale_219_cast, y = scale_219_cast);
            tensor<fp16, [1, 512, 1, 4]> x_353_cast = mul(x = x_351_cast, y = scale_221_cast);
            tensor<fp16, []> var_4188_to_fp16 = const()[name = tensor<string, []>("op_4188_to_fp16"), val = tensor<fp16, []>(-0.001953125)];
            tensor<fp16, [1, 512, 1, 4]> var_4189_cast = mul(x = x_353_cast, y = var_4188_to_fp16);
            tensor<int32, [1]> var_4190 = const()[name = tensor<string, []>("op_4190"), val = tensor<int32, [1]>([1])];
            tensor<fp16, [1, 1, 1, 4]> x_mean_73_cast = reduce_sum(axes = var_4190, keep_dims = var_3753, x = var_4189_cast);
            tensor<fp16, [1, 512, 1, 4]> x_zero_mean_73_cast = add(x = x_353_cast, y = x_mean_73_cast);
            tensor<fp16, []> var_4193_to_fp16 = const()[name = tensor<string, []>("op_4193_to_fp16"), val = tensor<fp16, []>(0.001953125)];
            tensor<fp16, [1, 512, 1, 4]> var_4194_cast = mul(x = x_zero_mean_73_cast, y = var_4193_to_fp16);
            tensor<fp16, [1, 512, 1, 4]> var_4195_cast = mul(x = var_4194_cast, y = x_zero_mean_73_cast);
            tensor<int32, [1]> var_4196 = const()[name = tensor<string, []>("op_4196"), val = tensor<int32, [1]>([1])];
            tensor<fp16, [1, 1, 1, 4]> x_var_73_cast = reduce_sum(axes = var_4196, keep_dims = var_3753, x = var_4195_cast);
            tensor<fp16, []> var_4198_to_fp16 = const()[name = tensor<string, []>("op_4198_to_fp16"), val = tensor<fp16, []>(1.00135803e-05)];
            tensor<fp16, [1, 1, 1, 4]> var_4199_cast = add(x = x_var_73_cast, y = var_4198_to_fp16);
            tensor<fp16, []> var_4200_epsilon_0_to_fp16 = const()[name = tensor<string, []>("op_4200_epsilon_0_to_fp16"), val = tensor<fp16, []>(5.96046448e-08)];
            tensor<fp16, [1, 1, 1, 4]> var_4200_cast = rsqrt(epsilon = var_4200_epsilon_0_to_fp16, x = var_4199_cast);
            tensor<fp16, [1, 512, 1, 4]> var_4201_cast = mul(x = x_zero_mean_73_cast, y = var_4200_cast);
            tensor<fp16, [512]> x_355_mean_0_to_fp16 = const()[name = tensor<string, []>("x_355_mean_0_to_fp16"), val = tensor<fp16, [512]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(39789376)))];
            tensor<fp16, [512]> x_355_variance_0_to_fp16 = const()[name = tensor<string, []>("x_355_variance_0_to_fp16"), val = tensor<fp16, [512]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(39790464)))];
            tensor<fp16, [512]> x_355_gamma_0_to_fp16 = const()[name = tensor<string, []>("x_355_gamma_0_to_fp16"), val = tensor<fp16, [512]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(39791552)))];
            tensor<fp16, [512]> x_355_beta_0_to_fp16 = const()[name = tensor<string, []>("x_355_beta_0_to_fp16"), val = tensor<fp16, [512]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(39792640)))];
            tensor<fp16, []> x_355_epsilon_0_to_fp16 = const()[name = tensor<string, []>("x_355_epsilon_0_to_fp16"), val = tensor<fp16, []>(1.00135803e-05)];
            tensor<fp16, [1, 512, 1, 4]> x_355_cast = batch_norm(beta = x_355_beta_0_to_fp16, epsilon = x_355_epsilon_0_to_fp16, gamma = x_355_gamma_0_to_fp16, mean = x_355_mean_0_to_fp16, variance = x_355_variance_0_to_fp16, x = var_4201_cast);
            tensor<int32, []> var_4216 = const()[name = tensor<string, []>("op_4216"), val = tensor<int32, []>(512)];
            tensor<int32, []> var_4222 = const()[name = tensor<string, []>("op_4222"), val = tensor<int32, []>(2)];
            tensor<int32, []> var_4225 = const()[name = tensor<string, []>("op_4225"), val = tensor<int32, []>(-1)];
            tensor<bool, []> var_4227 = const()[name = tensor<string, []>("op_4227"), val = tensor<bool, []>(true)];
            tensor<int32, []> var_4228 = const()[name = tensor<string, []>("op_4228"), val = tensor<int32, []>(1)];
            tensor<fp16, [1, 512, 1, 4]> var_4275_cast = abs(x = x_355_cast);
            tensor<fp16, []> var_4276_to_fp16 = const()[name = tensor<string, []>("op_4276_to_fp16"), val = tensor<fp16, []>(0.001953125)];
            tensor<fp16, [1, 512, 1, 4]> var_4277_cast = mul(x = var_4275_cast, y = var_4276_to_fp16);
            tensor<int32, [1]> var_4278 = const()[name = tensor<string, []>("op_4278"), val = tensor<int32, [1]>([1])];
            tensor<fp16, [1, 1, 1, 4]> scale_223_cast = reduce_sum(axes = var_4278, keep_dims = var_4227, x = var_4277_cast);
            tensor<fp16, []> scale_225_epsilon_0_to_fp16 = const()[name = tensor<string, []>("scale_225_epsilon_0_to_fp16"), val = tensor<fp16, []>(5.96046448e-08)];
            tensor<fp16, [1, 1, 1, 4]> scale_225_cast = rsqrt(epsilon = scale_225_epsilon_0_to_fp16, x = scale_223_cast);
            tensor<fp16, [1, 1, 1, 4]> scale_227_cast = mul(x = scale_225_cast, y = scale_225_cast);
            tensor<fp16, [1, 512, 1, 4]> x_357_cast = mul(x = x_355_cast, y = scale_227_cast);
            tensor<fp16, []> var_4283_to_fp16 = const()[name = tensor<string, []>("op_4283_to_fp16"), val = tensor<fp16, []>(-0.001953125)];
            tensor<fp16, [1, 512, 1, 4]> var_4284_cast = mul(x = x_357_cast, y = var_4283_to_fp16);
            tensor<int32, [1]> var_4285 = const()[name = tensor<string, []>("op_4285"), val = tensor<int32, [1]>([1])];
            tensor<fp16, [1, 1, 1, 4]> x_mean_75_cast = reduce_sum(axes = var_4285, keep_dims = var_4227, x = var_4284_cast);
            tensor<fp16, [1, 512, 1, 4]> x_zero_mean_75_cast = add(x = x_357_cast, y = x_mean_75_cast);
            tensor<fp16, []> var_4288_to_fp16 = const()[name = tensor<string, []>("op_4288_to_fp16"), val = tensor<fp16, []>(0.001953125)];
            tensor<fp16, [1, 512, 1, 4]> var_4289_cast = mul(x = x_zero_mean_75_cast, y = var_4288_to_fp16);
            tensor<fp16, [1, 512, 1, 4]> var_4290_cast = mul(x = var_4289_cast, y = x_zero_mean_75_cast);
            tensor<int32, [1]> var_4291 = const()[name = tensor<string, []>("op_4291"), val = tensor<int32, [1]>([1])];
            tensor<fp16, [1, 1, 1, 4]> x_var_75_cast = reduce_sum(axes = var_4291, keep_dims = var_4227, x = var_4290_cast);
            tensor<fp16, []> var_4293_to_fp16 = const()[name = tensor<string, []>("op_4293_to_fp16"), val = tensor<fp16, []>(1.00135803e-05)];
            tensor<fp16, [1, 1, 1, 4]> var_4294_cast = add(x = x_var_75_cast, y = var_4293_to_fp16);
            tensor<fp16, []> var_4295_epsilon_0_to_fp16 = const()[name = tensor<string, []>("op_4295_epsilon_0_to_fp16"), val = tensor<fp16, []>(5.96046448e-08)];
            tensor<fp16, [1, 1, 1, 4]> var_4295_cast = rsqrt(epsilon = var_4295_epsilon_0_to_fp16, x = var_4294_cast);
            tensor<fp16, [1, 512, 1, 4]> var_4296_cast = mul(x = x_zero_mean_75_cast, y = var_4295_cast);
            tensor<fp16, [512]> x_359_mean_0_to_fp16 = const()[name = tensor<string, []>("x_359_mean_0_to_fp16"), val = tensor<fp16, [512]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(39793728)))];
            tensor<fp16, [512]> x_359_variance_0_to_fp16 = const()[name = tensor<string, []>("x_359_variance_0_to_fp16"), val = tensor<fp16, [512]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(39794816)))];
            tensor<fp16, [512]> x_359_gamma_0_to_fp16 = const()[name = tensor<string, []>("x_359_gamma_0_to_fp16"), val = tensor<fp16, [512]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(39795904)))];
            tensor<fp16, [512]> x_359_beta_0_to_fp16 = const()[name = tensor<string, []>("x_359_beta_0_to_fp16"), val = tensor<fp16, [512]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(39796992)))];
            tensor<fp16, []> x_359_epsilon_0_to_fp16 = const()[name = tensor<string, []>("x_359_epsilon_0_to_fp16"), val = tensor<fp16, []>(1.00135803e-05)];
            tensor<fp16, [1, 512, 1, 4]> x_359_cast = batch_norm(beta = x_359_beta_0_to_fp16, epsilon = x_359_epsilon_0_to_fp16, gamma = x_359_gamma_0_to_fp16, mean = x_359_mean_0_to_fp16, variance = x_359_variance_0_to_fp16, x = var_4296_cast);
            tensor<int32, [2]> var_4307 = const()[name = tensor<string, []>("op_4307"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_4309 = const()[name = tensor<string, []>("op_4309"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> input_163_pad_type_0 = const()[name = tensor<string, []>("input_163_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> input_163_pad_0 = const()[name = tensor<string, []>("input_163_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [2048, 512, 1, 1]> op_4306_to_fp16_affine_quantized = constexpr_affine_dequantize()[axis = tensor<int32, []>(0), name = tensor<string, []>("op_4306_to_fp16_affine_quantized"), quantized_data = tensor<int8, [2048, 512, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(39798080))), scale = tensor<fp16, [2048]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(40848832))), zero_point = tensor<int8, [2048]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(40846720)))];
            tensor<fp16, [2048]> primary_encoder_encoders_4_feed_forward_macaron_w_1_bias_to_fp16 = const()[name = tensor<string, []>("primary_encoder_encoders_4_feed_forward_macaron_w_1_bias_to_fp16"), val = tensor<fp16, [2048]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(40852992)))];
            tensor<fp16, [1, 2048, 1, 4]> input_163_cast = conv(bias = primary_encoder_encoders_4_feed_forward_macaron_w_1_bias_to_fp16, dilations = var_4309, groups = var_4228, pad = input_163_pad_0, pad_type = input_163_pad_type_0, strides = var_4307, weight = op_4306_to_fp16_affine_quantized, x = x_359_cast);
            tensor<fp16, [1, 2048, 1, 4]> input_165_cast = silu(x = input_163_cast);
            tensor<int32, [2]> var_4318 = const()[name = tensor<string, []>("op_4318"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_4320 = const()[name = tensor<string, []>("op_4320"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> input_167_pad_type_0 = const()[name = tensor<string, []>("input_167_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> input_167_pad_0 = const()[name = tensor<string, []>("input_167_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [512, 2048, 1, 1]> op_4325_weight_0_to_fp16_affine_quantized = constexpr_affine_dequantize()[axis = tensor<int32, []>(0), name = tensor<string, []>("op_4325_weight_0_to_fp16_affine_quantized"), quantized_data = tensor<int8, [512, 2048, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(40857152))), scale = tensor<fp16, [512]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(41906368))), zero_point = tensor<int8, [512]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(41905792)))];
            tensor<fp16, [512]> var_4325_bias_0_to_fp16 = const()[name = tensor<string, []>("op_4325_bias_0_to_fp16"), val = tensor<fp16, [512]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(41907456)))];
            tensor<fp16, [1, 512, 1, 4]> var_4325_cast = conv(bias = var_4325_bias_0_to_fp16, dilations = var_4320, groups = var_4228, pad = input_167_pad_0, pad_type = input_167_pad_type_0, strides = var_4318, weight = op_4325_weight_0_to_fp16_affine_quantized, x = input_165_cast);
            tensor<fp16, [1, 512, 1, 4]> x_365_cast = add(x = x_355_cast, y = var_4325_cast);
            tensor<fp16, [1, 512, 1, 4]> var_4327_cast = abs(x = x_365_cast);
            tensor<fp16, []> var_4328_to_fp16 = const()[name = tensor<string, []>("op_4328_to_fp16"), val = tensor<fp16, []>(0.001953125)];
            tensor<fp16, [1, 512, 1, 4]> var_4329_cast = mul(x = var_4327_cast, y = var_4328_to_fp16);
            tensor<int32, [1]> var_4330 = const()[name = tensor<string, []>("op_4330"), val = tensor<int32, [1]>([1])];
            tensor<fp16, [1, 1, 1, 4]> scale_229_cast = reduce_sum(axes = var_4330, keep_dims = var_4227, x = var_4329_cast);
            tensor<fp16, []> scale_231_epsilon_0_to_fp16 = const()[name = tensor<string, []>("scale_231_epsilon_0_to_fp16"), val = tensor<fp16, []>(5.96046448e-08)];
            tensor<fp16, [1, 1, 1, 4]> scale_231_cast = rsqrt(epsilon = scale_231_epsilon_0_to_fp16, x = scale_229_cast);
            tensor<fp16, [1, 1, 1, 4]> scale_233_cast = mul(x = scale_231_cast, y = scale_231_cast);
            tensor<fp16, [1, 512, 1, 4]> x_367_cast = mul(x = x_365_cast, y = scale_233_cast);
            tensor<fp16, []> var_4335_to_fp16 = const()[name = tensor<string, []>("op_4335_to_fp16"), val = tensor<fp16, []>(-0.001953125)];
            tensor<fp16, [1, 512, 1, 4]> var_4336_cast = mul(x = x_367_cast, y = var_4335_to_fp16);
            tensor<int32, [1]> var_4337 = const()[name = tensor<string, []>("op_4337"), val = tensor<int32, [1]>([1])];
            tensor<fp16, [1, 1, 1, 4]> x_mean_77_cast = reduce_sum(axes = var_4337, keep_dims = var_4227, x = var_4336_cast);
            tensor<fp16, [1, 512, 1, 4]> x_zero_mean_77_cast = add(x = x_367_cast, y = x_mean_77_cast);
            tensor<fp16, []> var_4340_to_fp16 = const()[name = tensor<string, []>("op_4340_to_fp16"), val = tensor<fp16, []>(0.001953125)];
            tensor<fp16, [1, 512, 1, 4]> var_4341_cast = mul(x = x_zero_mean_77_cast, y = var_4340_to_fp16);
            tensor<fp16, [1, 512, 1, 4]> var_4342_cast = mul(x = var_4341_cast, y = x_zero_mean_77_cast);
            tensor<int32, [1]> var_4343 = const()[name = tensor<string, []>("op_4343"), val = tensor<int32, [1]>([1])];
            tensor<fp16, [1, 1, 1, 4]> x_var_77_cast = reduce_sum(axes = var_4343, keep_dims = var_4227, x = var_4342_cast);
            tensor<fp16, []> var_4345_to_fp16 = const()[name = tensor<string, []>("op_4345_to_fp16"), val = tensor<fp16, []>(1.00135803e-05)];
            tensor<fp16, [1, 1, 1, 4]> var_4346_cast = add(x = x_var_77_cast, y = var_4345_to_fp16);
            tensor<fp16, []> var_4347_epsilon_0_to_fp16 = const()[name = tensor<string, []>("op_4347_epsilon_0_to_fp16"), val = tensor<fp16, []>(5.96046448e-08)];
            tensor<fp16, [1, 1, 1, 4]> var_4347_cast = rsqrt(epsilon = var_4347_epsilon_0_to_fp16, x = var_4346_cast);
            tensor<fp16, [1, 512, 1, 4]> var_4348_cast = mul(x = x_zero_mean_77_cast, y = var_4347_cast);
            tensor<fp16, [512]> query_7_mean_0_to_fp16 = const()[name = tensor<string, []>("query_7_mean_0_to_fp16"), val = tensor<fp16, [512]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(41908544)))];
            tensor<fp16, [512]> query_7_variance_0_to_fp16 = const()[name = tensor<string, []>("query_7_variance_0_to_fp16"), val = tensor<fp16, [512]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(41909632)))];
            tensor<fp16, [512]> query_7_gamma_0_to_fp16 = const()[name = tensor<string, []>("query_7_gamma_0_to_fp16"), val = tensor<fp16, [512]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(41910720)))];
            tensor<fp16, [512]> query_7_beta_0_to_fp16 = const()[name = tensor<string, []>("query_7_beta_0_to_fp16"), val = tensor<fp16, [512]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(41911808)))];
            tensor<fp16, []> query_7_epsilon_0_to_fp16 = const()[name = tensor<string, []>("query_7_epsilon_0_to_fp16"), val = tensor<fp16, []>(1.00135803e-05)];
            tensor<fp16, [1, 512, 1, 4]> query_7_cast = batch_norm(beta = query_7_beta_0_to_fp16, epsilon = query_7_epsilon_0_to_fp16, gamma = query_7_gamma_0_to_fp16, mean = query_7_mean_0_to_fp16, variance = query_7_variance_0_to_fp16, x = var_4348_cast);
            tensor<int32, [2]> var_4368 = const()[name = tensor<string, []>("op_4368"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_4370 = const()[name = tensor<string, []>("op_4370"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> var_4372_pad_type_0 = const()[name = tensor<string, []>("op_4372_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> var_4372_pad_0 = const()[name = tensor<string, []>("op_4372_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [512, 512, 1, 1]> op_4367_to_fp16_affine_quantized = constexpr_affine_dequantize()[axis = tensor<int32, []>(0), name = tensor<string, []>("op_4367_to_fp16_affine_quantized"), quantized_data = tensor<int8, [512, 512, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(41912896))), scale = tensor<fp16, [512]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(42175680))), zero_point = tensor<int8, [512]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(42175104)))];
            tensor<fp16, [512]> primary_encoder_encoders_4_self_attn_linear_v_bias_to_fp16 = const()[name = tensor<string, []>("primary_encoder_encoders_4_self_attn_linear_v_bias_to_fp16"), val = tensor<fp16, [512]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(42176768)))];
            tensor<fp16, [1, 512, 1, 4]> var_4372_cast = conv(bias = primary_encoder_encoders_4_self_attn_linear_v_bias_to_fp16, dilations = var_4370, groups = var_4228, pad = var_4372_pad_0, pad_type = var_4372_pad_type_0, strides = var_4368, weight = op_4367_to_fp16_affine_quantized, x = query_7_cast);
            tensor<int32, [8]> tile_32 = const()[name = tensor<string, []>("tile_32"), val = tensor<int32, [8]>([64, 64, 64, 64, 64, 64, 64, 64])];
            tensor<int32, []> var_4373_axis_0 = const()[name = tensor<string, []>("op_4373_axis_0"), val = tensor<int32, []>(1)];
            tensor<fp16, [1, 64, 1, 4]> var_4373_cast_0, tensor<fp16, [1, 64, 1, 4]> var_4373_cast_1, tensor<fp16, [1, 64, 1, 4]> var_4373_cast_2, tensor<fp16, [1, 64, 1, 4]> var_4373_cast_3, tensor<fp16, [1, 64, 1, 4]> var_4373_cast_4, tensor<fp16, [1, 64, 1, 4]> var_4373_cast_5, tensor<fp16, [1, 64, 1, 4]> var_4373_cast_6, tensor<fp16, [1, 64, 1, 4]> var_4373_cast_7 = split(axis = var_4373_axis_0, split_sizes = tile_32, x = var_4372_cast);
            tensor<int32, [8]> tile_33 = const()[name = tensor<string, []>("tile_33"), val = tensor<int32, [8]>([1, 1, 1, 1, 1, 1, 1, 1])];
            tensor<int32, []> var_4382_axis_0 = const()[name = tensor<string, []>("op_4382_axis_0"), val = tensor<int32, []>(2)];
            tensor<fp16, [1, 64, 1, 128]> var_4382_cast_0, tensor<fp16, [1, 64, 1, 128]> var_4382_cast_1, tensor<fp16, [1, 64, 1, 128]> var_4382_cast_2, tensor<fp16, [1, 64, 1, 128]> var_4382_cast_3, tensor<fp16, [1, 64, 1, 128]> var_4382_cast_4, tensor<fp16, [1, 64, 1, 128]> var_4382_cast_5, tensor<fp16, [1, 64, 1, 128]> var_4382_cast_6, tensor<fp16, [1, 64, 1, 128]> var_4382_cast_7 = split(axis = var_4382_axis_0, split_sizes = tile_33, x = var_321_cast_4);
            tensor<bool, []> var_4392_interleave_0 = const()[name = tensor<string, []>("op_4392_interleave_0"), val = tensor<bool, []>(false)];
            tensor<fp16, [1, 64, 1, 132]> var_4392_cast = concat(axis = var_4225, interleave = var_4392_interleave_0, values = (var_4382_cast_0, var_4373_cast_0));
            tensor<int32, [4]> var_4396_begin_0 = const()[name = tensor<string, []>("op_4396_begin_0"), val = tensor<int32, [4]>([0, 0, 0, 4])];
            tensor<int32, [4]> var_4396_end_0 = const()[name = tensor<string, []>("op_4396_end_0"), val = tensor<int32, [4]>([1, 64, 1, 132])];
            tensor<bool, [4]> var_4396_end_mask_0 = const()[name = tensor<string, []>("op_4396_end_mask_0"), val = tensor<bool, [4]>([true, true, true, true])];
            tensor<fp16, [1, 64, 1, 128]> var_4396_cast = slice_by_index(begin = var_4396_begin_0, end = var_4396_end_0, end_mask = var_4396_end_mask_0, x = var_4392_cast);
            tensor<bool, []> var_4398_interleave_0 = const()[name = tensor<string, []>("op_4398_interleave_0"), val = tensor<bool, []>(false)];
            tensor<fp16, [1, 64, 1, 132]> var_4398_cast = concat(axis = var_4225, interleave = var_4398_interleave_0, values = (var_4382_cast_1, var_4373_cast_1));
            tensor<int32, [4]> var_4402_begin_0 = const()[name = tensor<string, []>("op_4402_begin_0"), val = tensor<int32, [4]>([0, 0, 0, 4])];
            tensor<int32, [4]> var_4402_end_0 = const()[name = tensor<string, []>("op_4402_end_0"), val = tensor<int32, [4]>([1, 64, 1, 132])];
            tensor<bool, [4]> var_4402_end_mask_0 = const()[name = tensor<string, []>("op_4402_end_mask_0"), val = tensor<bool, [4]>([true, true, true, true])];
            tensor<fp16, [1, 64, 1, 128]> var_4402_cast = slice_by_index(begin = var_4402_begin_0, end = var_4402_end_0, end_mask = var_4402_end_mask_0, x = var_4398_cast);
            tensor<bool, []> var_4404_interleave_0 = const()[name = tensor<string, []>("op_4404_interleave_0"), val = tensor<bool, []>(false)];
            tensor<fp16, [1, 64, 1, 132]> var_4404_cast = concat(axis = var_4225, interleave = var_4404_interleave_0, values = (var_4382_cast_2, var_4373_cast_2));
            tensor<int32, [4]> var_4408_begin_0 = const()[name = tensor<string, []>("op_4408_begin_0"), val = tensor<int32, [4]>([0, 0, 0, 4])];
            tensor<int32, [4]> var_4408_end_0 = const()[name = tensor<string, []>("op_4408_end_0"), val = tensor<int32, [4]>([1, 64, 1, 132])];
            tensor<bool, [4]> var_4408_end_mask_0 = const()[name = tensor<string, []>("op_4408_end_mask_0"), val = tensor<bool, [4]>([true, true, true, true])];
            tensor<fp16, [1, 64, 1, 128]> var_4408_cast = slice_by_index(begin = var_4408_begin_0, end = var_4408_end_0, end_mask = var_4408_end_mask_0, x = var_4404_cast);
            tensor<bool, []> var_4410_interleave_0 = const()[name = tensor<string, []>("op_4410_interleave_0"), val = tensor<bool, []>(false)];
            tensor<fp16, [1, 64, 1, 132]> var_4410_cast = concat(axis = var_4225, interleave = var_4410_interleave_0, values = (var_4382_cast_3, var_4373_cast_3));
            tensor<int32, [4]> var_4414_begin_0 = const()[name = tensor<string, []>("op_4414_begin_0"), val = tensor<int32, [4]>([0, 0, 0, 4])];
            tensor<int32, [4]> var_4414_end_0 = const()[name = tensor<string, []>("op_4414_end_0"), val = tensor<int32, [4]>([1, 64, 1, 132])];
            tensor<bool, [4]> var_4414_end_mask_0 = const()[name = tensor<string, []>("op_4414_end_mask_0"), val = tensor<bool, [4]>([true, true, true, true])];
            tensor<fp16, [1, 64, 1, 128]> var_4414_cast = slice_by_index(begin = var_4414_begin_0, end = var_4414_end_0, end_mask = var_4414_end_mask_0, x = var_4410_cast);
            tensor<bool, []> var_4416_interleave_0 = const()[name = tensor<string, []>("op_4416_interleave_0"), val = tensor<bool, []>(false)];
            tensor<fp16, [1, 64, 1, 132]> var_4416_cast = concat(axis = var_4225, interleave = var_4416_interleave_0, values = (var_4382_cast_4, var_4373_cast_4));
            tensor<int32, [4]> var_4420_begin_0 = const()[name = tensor<string, []>("op_4420_begin_0"), val = tensor<int32, [4]>([0, 0, 0, 4])];
            tensor<int32, [4]> var_4420_end_0 = const()[name = tensor<string, []>("op_4420_end_0"), val = tensor<int32, [4]>([1, 64, 1, 132])];
            tensor<bool, [4]> var_4420_end_mask_0 = const()[name = tensor<string, []>("op_4420_end_mask_0"), val = tensor<bool, [4]>([true, true, true, true])];
            tensor<fp16, [1, 64, 1, 128]> var_4420_cast = slice_by_index(begin = var_4420_begin_0, end = var_4420_end_0, end_mask = var_4420_end_mask_0, x = var_4416_cast);
            tensor<bool, []> var_4422_interleave_0 = const()[name = tensor<string, []>("op_4422_interleave_0"), val = tensor<bool, []>(false)];
            tensor<fp16, [1, 64, 1, 132]> var_4422_cast = concat(axis = var_4225, interleave = var_4422_interleave_0, values = (var_4382_cast_5, var_4373_cast_5));
            tensor<int32, [4]> var_4426_begin_0 = const()[name = tensor<string, []>("op_4426_begin_0"), val = tensor<int32, [4]>([0, 0, 0, 4])];
            tensor<int32, [4]> var_4426_end_0 = const()[name = tensor<string, []>("op_4426_end_0"), val = tensor<int32, [4]>([1, 64, 1, 132])];
            tensor<bool, [4]> var_4426_end_mask_0 = const()[name = tensor<string, []>("op_4426_end_mask_0"), val = tensor<bool, [4]>([true, true, true, true])];
            tensor<fp16, [1, 64, 1, 128]> var_4426_cast = slice_by_index(begin = var_4426_begin_0, end = var_4426_end_0, end_mask = var_4426_end_mask_0, x = var_4422_cast);
            tensor<bool, []> var_4428_interleave_0 = const()[name = tensor<string, []>("op_4428_interleave_0"), val = tensor<bool, []>(false)];
            tensor<fp16, [1, 64, 1, 132]> var_4428_cast = concat(axis = var_4225, interleave = var_4428_interleave_0, values = (var_4382_cast_6, var_4373_cast_6));
            tensor<int32, [4]> var_4432_begin_0 = const()[name = tensor<string, []>("op_4432_begin_0"), val = tensor<int32, [4]>([0, 0, 0, 4])];
            tensor<int32, [4]> var_4432_end_0 = const()[name = tensor<string, []>("op_4432_end_0"), val = tensor<int32, [4]>([1, 64, 1, 132])];
            tensor<bool, [4]> var_4432_end_mask_0 = const()[name = tensor<string, []>("op_4432_end_mask_0"), val = tensor<bool, [4]>([true, true, true, true])];
            tensor<fp16, [1, 64, 1, 128]> var_4432_cast = slice_by_index(begin = var_4432_begin_0, end = var_4432_end_0, end_mask = var_4432_end_mask_0, x = var_4428_cast);
            tensor<bool, []> var_4434_interleave_0 = const()[name = tensor<string, []>("op_4434_interleave_0"), val = tensor<bool, []>(false)];
            tensor<fp16, [1, 64, 1, 132]> var_4434_cast = concat(axis = var_4225, interleave = var_4434_interleave_0, values = (var_4382_cast_7, var_4373_cast_7));
            tensor<int32, [4]> var_4438_begin_0 = const()[name = tensor<string, []>("op_4438_begin_0"), val = tensor<int32, [4]>([0, 0, 0, 4])];
            tensor<int32, [4]> var_4438_end_0 = const()[name = tensor<string, []>("op_4438_end_0"), val = tensor<int32, [4]>([1, 64, 1, 132])];
            tensor<bool, [4]> var_4438_end_mask_0 = const()[name = tensor<string, []>("op_4438_end_mask_0"), val = tensor<bool, [4]>([true, true, true, true])];
            tensor<fp16, [1, 64, 1, 128]> var_4438_cast = slice_by_index(begin = var_4438_begin_0, end = var_4438_end_0, end_mask = var_4438_end_mask_0, x = var_4434_cast);
            tensor<bool, []> var_4440_interleave_0 = const()[name = tensor<string, []>("op_4440_interleave_0"), val = tensor<bool, []>(false)];
            tensor<fp16, [1, 64, 8, 128]> var_4440_cast = concat(axis = var_4222, interleave = var_4440_interleave_0, values = (var_4396_cast, var_4402_cast, var_4408_cast, var_4414_cast, var_4420_cast, var_4426_cast, var_4432_cast, var_4438_cast));
            tensor<string, []> var_4442_equation_0 = const()[name = tensor<string, []>("op_4442_equation_0"), val = tensor<string, []>("bnhd,bdhm->bnhm")];
            tensor<fp16, [1, 64, 1, 4]> var_4442_cast = einsum(equation = var_4442_equation_0, values = (var_4396_cast, input_81_cast));
            tensor<string, []> var_4444_equation_0 = const()[name = tensor<string, []>("op_4444_equation_0"), val = tensor<string, []>("bnhd,bdhm->bnhm")];
            tensor<fp16, [1, 64, 1, 4]> var_4444_cast = einsum(equation = var_4444_equation_0, values = (var_4402_cast, input_83_cast));
            tensor<string, []> var_4446_equation_0 = const()[name = tensor<string, []>("op_4446_equation_0"), val = tensor<string, []>("bnhd,bdhm->bnhm")];
            tensor<fp16, [1, 64, 1, 4]> var_4446_cast = einsum(equation = var_4446_equation_0, values = (var_4408_cast, input_85_cast));
            tensor<string, []> var_4448_equation_0 = const()[name = tensor<string, []>("op_4448_equation_0"), val = tensor<string, []>("bnhd,bdhm->bnhm")];
            tensor<fp16, [1, 64, 1, 4]> var_4448_cast = einsum(equation = var_4448_equation_0, values = (var_4414_cast, input_87_cast));
            tensor<string, []> var_4450_equation_0 = const()[name = tensor<string, []>("op_4450_equation_0"), val = tensor<string, []>("bnhd,bdhm->bnhm")];
            tensor<fp16, [1, 64, 1, 4]> var_4450_cast = einsum(equation = var_4450_equation_0, values = (var_4420_cast, input_89_cast));
            tensor<string, []> var_4452_equation_0 = const()[name = tensor<string, []>("op_4452_equation_0"), val = tensor<string, []>("bnhd,bdhm->bnhm")];
            tensor<fp16, [1, 64, 1, 4]> var_4452_cast = einsum(equation = var_4452_equation_0, values = (var_4426_cast, input_91_cast));
            tensor<string, []> var_4454_equation_0 = const()[name = tensor<string, []>("op_4454_equation_0"), val = tensor<string, []>("bnhd,bdhm->bnhm")];
            tensor<fp16, [1, 64, 1, 4]> var_4454_cast = einsum(equation = var_4454_equation_0, values = (var_4432_cast, input_93_cast));
            tensor<string, []> var_4456_equation_0 = const()[name = tensor<string, []>("op_4456_equation_0"), val = tensor<string, []>("bnhd,bdhm->bnhm")];
            tensor<fp16, [1, 64, 1, 4]> var_4456_cast = einsum(equation = var_4456_equation_0, values = (var_4438_cast, input_95_cast));
            tensor<bool, []> y_19_interleave_0 = const()[name = tensor<string, []>("y_19_interleave_0"), val = tensor<bool, []>(false)];
            tensor<fp16, [1, 512, 1, 4]> y_19_cast = concat(axis = var_4228, interleave = y_19_interleave_0, values = (var_4442_cast, var_4444_cast, var_4446_cast, var_4448_cast, var_4450_cast, var_4452_cast, var_4454_cast, var_4456_cast));
            tensor<int32, [2]> var_4463 = const()[name = tensor<string, []>("op_4463"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_4465 = const()[name = tensor<string, []>("op_4465"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> input_169_pad_type_0 = const()[name = tensor<string, []>("input_169_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> input_169_pad_0 = const()[name = tensor<string, []>("input_169_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [512, 512, 1, 1]> op_4462_to_fp16_affine_quantized = constexpr_affine_dequantize()[axis = tensor<int32, []>(0), name = tensor<string, []>("op_4462_to_fp16_affine_quantized"), quantized_data = tensor<int8, [512, 512, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(42177856))), scale = tensor<fp16, [512]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(42440640))), zero_point = tensor<int8, [512]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(42440064)))];
            tensor<fp16, [512]> primary_encoder_encoders_4_self_attn_linear_out_bias_to_fp16 = const()[name = tensor<string, []>("primary_encoder_encoders_4_self_attn_linear_out_bias_to_fp16"), val = tensor<fp16, [512]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(42441728)))];
            tensor<fp16, [1, 512, 1, 4]> input_169_cast = conv(bias = primary_encoder_encoders_4_self_attn_linear_out_bias_to_fp16, dilations = var_4465, groups = var_4228, pad = input_169_pad_0, pad_type = input_169_pad_type_0, strides = var_4463, weight = op_4462_to_fp16_affine_quantized, x = y_19_cast);
            tensor<fp16, [1, 512, 1, 4]> x_369_cast = add(x = x_365_cast, y = input_169_cast);
            tensor<fp16, [1, 512, 1, 4]> var_4473_cast = abs(x = x_369_cast);
            tensor<fp16, []> var_4474_to_fp16 = const()[name = tensor<string, []>("op_4474_to_fp16"), val = tensor<fp16, []>(0.001953125)];
            tensor<fp16, [1, 512, 1, 4]> var_4475_cast = mul(x = var_4473_cast, y = var_4474_to_fp16);
            tensor<int32, [1]> var_4476 = const()[name = tensor<string, []>("op_4476"), val = tensor<int32, [1]>([1])];
            tensor<fp16, [1, 1, 1, 4]> scale_235_cast = reduce_sum(axes = var_4476, keep_dims = var_4227, x = var_4475_cast);
            tensor<fp16, []> scale_237_epsilon_0_to_fp16 = const()[name = tensor<string, []>("scale_237_epsilon_0_to_fp16"), val = tensor<fp16, []>(5.96046448e-08)];
            tensor<fp16, [1, 1, 1, 4]> scale_237_cast = rsqrt(epsilon = scale_237_epsilon_0_to_fp16, x = scale_235_cast);
            tensor<fp16, [1, 1, 1, 4]> scale_239_cast = mul(x = scale_237_cast, y = scale_237_cast);
            tensor<fp16, [1, 512, 1, 4]> x_371_cast = mul(x = x_369_cast, y = scale_239_cast);
            tensor<fp16, []> var_4481_to_fp16 = const()[name = tensor<string, []>("op_4481_to_fp16"), val = tensor<fp16, []>(-0.001953125)];
            tensor<fp16, [1, 512, 1, 4]> var_4482_cast = mul(x = x_371_cast, y = var_4481_to_fp16);
            tensor<int32, [1]> var_4483 = const()[name = tensor<string, []>("op_4483"), val = tensor<int32, [1]>([1])];
            tensor<fp16, [1, 1, 1, 4]> x_mean_79_cast = reduce_sum(axes = var_4483, keep_dims = var_4227, x = var_4482_cast);
            tensor<fp16, [1, 512, 1, 4]> x_zero_mean_79_cast = add(x = x_371_cast, y = x_mean_79_cast);
            tensor<fp16, []> var_4486_to_fp16 = const()[name = tensor<string, []>("op_4486_to_fp16"), val = tensor<fp16, []>(0.001953125)];
            tensor<fp16, [1, 512, 1, 4]> var_4487_cast = mul(x = x_zero_mean_79_cast, y = var_4486_to_fp16);
            tensor<fp16, [1, 512, 1, 4]> var_4488_cast = mul(x = var_4487_cast, y = x_zero_mean_79_cast);
            tensor<int32, [1]> var_4489 = const()[name = tensor<string, []>("op_4489"), val = tensor<int32, [1]>([1])];
            tensor<fp16, [1, 1, 1, 4]> x_var_79_cast = reduce_sum(axes = var_4489, keep_dims = var_4227, x = var_4488_cast);
            tensor<fp16, []> var_4491_to_fp16 = const()[name = tensor<string, []>("op_4491_to_fp16"), val = tensor<fp16, []>(1.00135803e-05)];
            tensor<fp16, [1, 1, 1, 4]> var_4492_cast = add(x = x_var_79_cast, y = var_4491_to_fp16);
            tensor<fp16, []> var_4493_epsilon_0_to_fp16 = const()[name = tensor<string, []>("op_4493_epsilon_0_to_fp16"), val = tensor<fp16, []>(5.96046448e-08)];
            tensor<fp16, [1, 1, 1, 4]> var_4493_cast = rsqrt(epsilon = var_4493_epsilon_0_to_fp16, x = var_4492_cast);
            tensor<fp16, [1, 512, 1, 4]> var_4494_cast = mul(x = x_zero_mean_79_cast, y = var_4493_cast);
            tensor<fp16, [512]> x_373_mean_0_to_fp16 = const()[name = tensor<string, []>("x_373_mean_0_to_fp16"), val = tensor<fp16, [512]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(42442816)))];
            tensor<fp16, [512]> x_373_variance_0_to_fp16 = const()[name = tensor<string, []>("x_373_variance_0_to_fp16"), val = tensor<fp16, [512]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(42443904)))];
            tensor<fp16, [512]> x_373_gamma_0_to_fp16 = const()[name = tensor<string, []>("x_373_gamma_0_to_fp16"), val = tensor<fp16, [512]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(42444992)))];
            tensor<fp16, [512]> x_373_beta_0_to_fp16 = const()[name = tensor<string, []>("x_373_beta_0_to_fp16"), val = tensor<fp16, [512]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(42446080)))];
            tensor<fp16, []> x_373_epsilon_0_to_fp16 = const()[name = tensor<string, []>("x_373_epsilon_0_to_fp16"), val = tensor<fp16, []>(1.00135803e-05)];
            tensor<fp16, [1, 512, 1, 4]> x_373_cast = batch_norm(beta = x_373_beta_0_to_fp16, epsilon = x_373_epsilon_0_to_fp16, gamma = x_373_gamma_0_to_fp16, mean = x_373_mean_0_to_fp16, variance = x_373_variance_0_to_fp16, x = var_4494_cast);
            tensor<bool, []> x_375_interleave_0 = const()[name = tensor<string, []>("x_375_interleave_0"), val = tensor<bool, []>(false)];
            tensor<fp16, [1, 512, 1, 36]> x_375_cast = concat(axis = var_4225, interleave = x_375_interleave_0, values = (var_301_cast_4, x_373_cast));
            tensor<int32, [4]> x_377_begin_0 = const()[name = tensor<string, []>("x_377_begin_0"), val = tensor<int32, [4]>([0, 0, 0, 12])];
            tensor<int32, [4]> x_377_end_0 = const()[name = tensor<string, []>("x_377_end_0"), val = tensor<int32, [4]>([1, 512, 1, 36])];
            tensor<bool, [4]> x_377_end_mask_0 = const()[name = tensor<string, []>("x_377_end_mask_0"), val = tensor<bool, [4]>([true, true, true, true])];
            tensor<fp16, [1, 512, 1, 24]> x_377_cast = slice_by_index(begin = x_377_begin_0, end = x_377_end_0, end_mask = x_377_end_mask_0, x = x_375_cast);
            tensor<int32, [4]> x_379_begin_0 = const()[name = tensor<string, []>("x_379_begin_0"), val = tensor<int32, [4]>([0, 0, 0, 12])];
            tensor<int32, [4]> x_379_end_0 = const()[name = tensor<string, []>("x_379_end_0"), val = tensor<int32, [4]>([1, 512, 1, 24])];
            tensor<bool, [4]> x_379_end_mask_0 = const()[name = tensor<string, []>("x_379_end_mask_0"), val = tensor<bool, [4]>([true, true, true, true])];
            tensor<fp16, [1, 512, 1, 12]> x_379_cast = slice_by_index(begin = x_379_begin_0, end = x_379_end_0, end_mask = x_379_end_mask_0, x = x_377_cast);
            tensor<int32, [4]> x_381_begin_0 = const()[name = tensor<string, []>("x_381_begin_0"), val = tensor<int32, [4]>([0, 0, 0, 1])];
            tensor<int32, [4]> x_381_end_0 = const()[name = tensor<string, []>("x_381_end_0"), val = tensor<int32, [4]>([1, 512, 1, 12])];
            tensor<bool, [4]> x_381_end_mask_0 = const()[name = tensor<string, []>("x_381_end_mask_0"), val = tensor<bool, [4]>([true, true, true, true])];
            tensor<fp16, [1, 512, 1, 11]> x_381_cast = slice_by_index(begin = x_381_begin_0, end = x_381_end_0, end_mask = x_381_end_mask_0, x = x_379_cast);
            tensor<int32, [4]> var_4534_begin_0 = const()[name = tensor<string, []>("op_4534_begin_0"), val = tensor<int32, [4]>([0, 0, 0, -7])];
            tensor<int32, [4]> var_4534_end_0 = const()[name = tensor<string, []>("op_4534_end_0"), val = tensor<int32, [4]>([1, 512, 1, 11])];
            tensor<bool, [4]> var_4534_end_mask_0 = const()[name = tensor<string, []>("op_4534_end_mask_0"), val = tensor<bool, [4]>([true, true, true, true])];
            tensor<fp16, [1, 512, 1, 7]> var_4534_cast = slice_by_index(begin = var_4534_begin_0, end = var_4534_end_0, end_mask = var_4534_end_mask_0, x = x_381_cast);
            tensor<int32, [2]> var_4536 = const()[name = tensor<string, []>("op_4536"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_4538 = const()[name = tensor<string, []>("op_4538"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> x_383_pad_type_0 = const()[name = tensor<string, []>("x_383_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> x_383_pad_0 = const()[name = tensor<string, []>("x_383_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [1024, 512, 1, 1]> op_4535_to_fp16_affine_quantized = constexpr_affine_dequantize()[axis = tensor<int32, []>(0), name = tensor<string, []>("op_4535_to_fp16_affine_quantized"), quantized_data = tensor<int8, [1024, 512, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(42447168))), scale = tensor<fp16, [1024]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(42972608))), zero_point = tensor<int8, [1024]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(42971520)))];
            tensor<fp16, [1024]> primary_encoder_encoders_4_conv_module_pointwise_conv1_bias_to_fp16 = const()[name = tensor<string, []>("primary_encoder_encoders_4_conv_module_pointwise_conv1_bias_to_fp16"), val = tensor<fp16, [1024]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(42974720)))];
            tensor<fp16, [1, 1024, 1, 11]> x_383_cast = conv(bias = primary_encoder_encoders_4_conv_module_pointwise_conv1_bias_to_fp16, dilations = var_4538, groups = var_4228, pad = x_383_pad_0, pad_type = x_383_pad_type_0, strides = var_4536, weight = op_4535_to_fp16_affine_quantized, x = x_381_cast);
            tensor<int32, [4]> var_4547_begin_0 = const()[name = tensor<string, []>("op_4547_begin_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<int32, [4]> var_4547_end_0 = const()[name = tensor<string, []>("op_4547_end_0"), val = tensor<int32, [4]>([1, 512, 1, 11])];
            tensor<bool, [4]> var_4547_end_mask_0 = const()[name = tensor<string, []>("op_4547_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [1, 512, 1, 11]> var_4547_cast = slice_by_index(begin = var_4547_begin_0, end = var_4547_end_0, end_mask = var_4547_end_mask_0, x = x_383_cast);
            tensor<int32, [4]> var_4551_begin_0 = const()[name = tensor<string, []>("op_4551_begin_0"), val = tensor<int32, [4]>([0, 512, 0, 0])];
            tensor<int32, [4]> var_4551_end_0 = const()[name = tensor<string, []>("op_4551_end_0"), val = tensor<int32, [4]>([1, 1024, 1, 11])];
            tensor<bool, [4]> var_4551_end_mask_0 = const()[name = tensor<string, []>("op_4551_end_mask_0"), val = tensor<bool, [4]>([true, true, true, true])];
            tensor<fp16, [1, 512, 1, 11]> var_4551_cast = slice_by_index(begin = var_4551_begin_0, end = var_4551_end_0, end_mask = var_4551_end_mask_0, x = x_383_cast);
            tensor<fp16, [1, 512, 1, 11]> var_4554_cast = sigmoid(x = var_4551_cast);
            tensor<fp16, [1, 512, 1, 11]> x_385_cast = mul(x = var_4547_cast, y = var_4554_cast);
            tensor<int32, [2]> var_4557 = const()[name = tensor<string, []>("op_4557"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_4559 = const()[name = tensor<string, []>("op_4559"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> x_387_pad_type_0 = const()[name = tensor<string, []>("x_387_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> x_387_pad_0 = const()[name = tensor<string, []>("x_387_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [512, 1, 1, 8]> op_4556_to_fp16_affine_quantized = constexpr_affine_dequantize()[axis = tensor<int32, []>(0), name = tensor<string, []>("op_4556_to_fp16_affine_quantized"), quantized_data = tensor<int8, [512, 1, 1, 8]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(42976832))), scale = tensor<fp16, [512]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(42981568))), zero_point = tensor<int8, [512]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(42980992)))];
            tensor<fp16, [512]> primary_encoder_encoders_4_conv_module_depthwise_conv_bias_to_fp16 = const()[name = tensor<string, []>("primary_encoder_encoders_4_conv_module_depthwise_conv_bias_to_fp16"), val = tensor<fp16, [512]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(42982656)))];
            tensor<fp16, [1, 512, 1, 4]> x_387_cast = conv(bias = primary_encoder_encoders_4_conv_module_depthwise_conv_bias_to_fp16, dilations = var_4559, groups = var_4216, pad = x_387_pad_0, pad_type = x_387_pad_type_0, strides = var_4557, weight = op_4556_to_fp16_affine_quantized, x = x_385_cast);
            tensor<fp16, [1, 512, 1, 4]> var_4562_cast = abs(x = x_387_cast);
            tensor<fp16, []> var_4563_to_fp16 = const()[name = tensor<string, []>("op_4563_to_fp16"), val = tensor<fp16, []>(0.001953125)];
            tensor<fp16, [1, 512, 1, 4]> var_4564_cast = mul(x = var_4562_cast, y = var_4563_to_fp16);
            tensor<int32, [1]> var_4565 = const()[name = tensor<string, []>("op_4565"), val = tensor<int32, [1]>([1])];
            tensor<fp16, [1, 1, 1, 4]> scale_241_cast = reduce_sum(axes = var_4565, keep_dims = var_4227, x = var_4564_cast);
            tensor<fp16, []> scale_243_epsilon_0_to_fp16 = const()[name = tensor<string, []>("scale_243_epsilon_0_to_fp16"), val = tensor<fp16, []>(5.96046448e-08)];
            tensor<fp16, [1, 1, 1, 4]> scale_243_cast = rsqrt(epsilon = scale_243_epsilon_0_to_fp16, x = scale_241_cast);
            tensor<fp16, [1, 1, 1, 4]> scale_245_cast = mul(x = scale_243_cast, y = scale_243_cast);
            tensor<fp16, [1, 512, 1, 4]> x_389_cast = mul(x = x_387_cast, y = scale_245_cast);
            tensor<fp16, []> var_4570_to_fp16 = const()[name = tensor<string, []>("op_4570_to_fp16"), val = tensor<fp16, []>(-0.001953125)];
            tensor<fp16, [1, 512, 1, 4]> var_4571_cast = mul(x = x_389_cast, y = var_4570_to_fp16);
            tensor<int32, [1]> var_4572 = const()[name = tensor<string, []>("op_4572"), val = tensor<int32, [1]>([1])];
            tensor<fp16, [1, 1, 1, 4]> x_mean_81_cast = reduce_sum(axes = var_4572, keep_dims = var_4227, x = var_4571_cast);
            tensor<fp16, [1, 512, 1, 4]> x_zero_mean_81_cast = add(x = x_389_cast, y = x_mean_81_cast);
            tensor<fp16, []> var_4575_to_fp16 = const()[name = tensor<string, []>("op_4575_to_fp16"), val = tensor<fp16, []>(0.001953125)];
            tensor<fp16, [1, 512, 1, 4]> var_4576_cast = mul(x = x_zero_mean_81_cast, y = var_4575_to_fp16);
            tensor<fp16, [1, 512, 1, 4]> var_4577_cast = mul(x = var_4576_cast, y = x_zero_mean_81_cast);
            tensor<int32, [1]> var_4578 = const()[name = tensor<string, []>("op_4578"), val = tensor<int32, [1]>([1])];
            tensor<fp16, [1, 1, 1, 4]> x_var_81_cast = reduce_sum(axes = var_4578, keep_dims = var_4227, x = var_4577_cast);
            tensor<fp16, []> var_4580_to_fp16 = const()[name = tensor<string, []>("op_4580_to_fp16"), val = tensor<fp16, []>(1.00135803e-05)];
            tensor<fp16, [1, 1, 1, 4]> var_4581_cast = add(x = x_var_81_cast, y = var_4580_to_fp16);
            tensor<fp16, []> var_4582_epsilon_0_to_fp16 = const()[name = tensor<string, []>("op_4582_epsilon_0_to_fp16"), val = tensor<fp16, []>(5.96046448e-08)];
            tensor<fp16, [1, 1, 1, 4]> var_4582_cast = rsqrt(epsilon = var_4582_epsilon_0_to_fp16, x = var_4581_cast);
            tensor<fp16, [1, 512, 1, 4]> var_4583_cast = mul(x = x_zero_mean_81_cast, y = var_4582_cast);
            tensor<fp16, [512]> input_171_mean_0_to_fp16 = const()[name = tensor<string, []>("input_171_mean_0_to_fp16"), val = tensor<fp16, [512]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(42983744)))];
            tensor<fp16, [512]> input_171_variance_0_to_fp16 = const()[name = tensor<string, []>("input_171_variance_0_to_fp16"), val = tensor<fp16, [512]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(42984832)))];
            tensor<fp16, [512]> input_171_gamma_0_to_fp16 = const()[name = tensor<string, []>("input_171_gamma_0_to_fp16"), val = tensor<fp16, [512]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(42985920)))];
            tensor<fp16, [512]> input_171_beta_0_to_fp16 = const()[name = tensor<string, []>("input_171_beta_0_to_fp16"), val = tensor<fp16, [512]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(42987008)))];
            tensor<fp16, []> input_171_epsilon_0_to_fp16 = const()[name = tensor<string, []>("input_171_epsilon_0_to_fp16"), val = tensor<fp16, []>(1.00135803e-05)];
            tensor<fp16, [1, 512, 1, 4]> input_171_cast = batch_norm(beta = input_171_beta_0_to_fp16, epsilon = input_171_epsilon_0_to_fp16, gamma = input_171_gamma_0_to_fp16, mean = input_171_mean_0_to_fp16, variance = input_171_variance_0_to_fp16, x = var_4583_cast);
            tensor<fp16, [1, 512, 1, 4]> x_391_cast = silu(x = input_171_cast);
            tensor<int32, [2]> var_4592 = const()[name = tensor<string, []>("op_4592"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_4594 = const()[name = tensor<string, []>("op_4594"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> input_173_pad_type_0 = const()[name = tensor<string, []>("input_173_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> input_173_pad_0 = const()[name = tensor<string, []>("input_173_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [512, 512, 1, 1]> op_4591_to_fp16_affine_quantized = constexpr_affine_dequantize()[axis = tensor<int32, []>(0), name = tensor<string, []>("op_4591_to_fp16_affine_quantized"), quantized_data = tensor<int8, [512, 512, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(42988096))), scale = tensor<fp16, [512]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(43250880))), zero_point = tensor<int8, [512]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(43250304)))];
            tensor<fp16, [512]> primary_encoder_encoders_4_conv_module_pointwise_conv2_bias_to_fp16 = const()[name = tensor<string, []>("primary_encoder_encoders_4_conv_module_pointwise_conv2_bias_to_fp16"), val = tensor<fp16, [512]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(43251968)))];
            tensor<fp16, [1, 512, 1, 4]> input_173_cast = conv(bias = primary_encoder_encoders_4_conv_module_pointwise_conv2_bias_to_fp16, dilations = var_4594, groups = var_4228, pad = input_173_pad_0, pad_type = input_173_pad_type_0, strides = var_4592, weight = op_4591_to_fp16_affine_quantized, x = x_391_cast);
            tensor<fp16, [1, 512, 1, 4]> x_395_cast = add(x = x_369_cast, y = input_173_cast);
            tensor<fp16, [1, 512, 1, 4]> var_4602_cast = abs(x = x_395_cast);
            tensor<fp16, []> var_4603_to_fp16 = const()[name = tensor<string, []>("op_4603_to_fp16"), val = tensor<fp16, []>(0.001953125)];
            tensor<fp16, [1, 512, 1, 4]> var_4604_cast = mul(x = var_4602_cast, y = var_4603_to_fp16);
            tensor<int32, [1]> var_4605 = const()[name = tensor<string, []>("op_4605"), val = tensor<int32, [1]>([1])];
            tensor<fp16, [1, 1, 1, 4]> scale_247_cast = reduce_sum(axes = var_4605, keep_dims = var_4227, x = var_4604_cast);
            tensor<fp16, []> scale_249_epsilon_0_to_fp16 = const()[name = tensor<string, []>("scale_249_epsilon_0_to_fp16"), val = tensor<fp16, []>(5.96046448e-08)];
            tensor<fp16, [1, 1, 1, 4]> scale_249_cast = rsqrt(epsilon = scale_249_epsilon_0_to_fp16, x = scale_247_cast);
            tensor<fp16, [1, 1, 1, 4]> scale_251_cast = mul(x = scale_249_cast, y = scale_249_cast);
            tensor<fp16, [1, 512, 1, 4]> x_397_cast = mul(x = x_395_cast, y = scale_251_cast);
            tensor<fp16, []> var_4610_to_fp16 = const()[name = tensor<string, []>("op_4610_to_fp16"), val = tensor<fp16, []>(-0.001953125)];
            tensor<fp16, [1, 512, 1, 4]> var_4611_cast = mul(x = x_397_cast, y = var_4610_to_fp16);
            tensor<int32, [1]> var_4612 = const()[name = tensor<string, []>("op_4612"), val = tensor<int32, [1]>([1])];
            tensor<fp16, [1, 1, 1, 4]> x_mean_83_cast = reduce_sum(axes = var_4612, keep_dims = var_4227, x = var_4611_cast);
            tensor<fp16, [1, 512, 1, 4]> x_zero_mean_83_cast = add(x = x_397_cast, y = x_mean_83_cast);
            tensor<fp16, []> var_4615_to_fp16 = const()[name = tensor<string, []>("op_4615_to_fp16"), val = tensor<fp16, []>(0.001953125)];
            tensor<fp16, [1, 512, 1, 4]> var_4616_cast = mul(x = x_zero_mean_83_cast, y = var_4615_to_fp16);
            tensor<fp16, [1, 512, 1, 4]> var_4617_cast = mul(x = var_4616_cast, y = x_zero_mean_83_cast);
            tensor<int32, [1]> var_4618 = const()[name = tensor<string, []>("op_4618"), val = tensor<int32, [1]>([1])];
            tensor<fp16, [1, 1, 1, 4]> x_var_83_cast = reduce_sum(axes = var_4618, keep_dims = var_4227, x = var_4617_cast);
            tensor<fp16, []> var_4620_to_fp16 = const()[name = tensor<string, []>("op_4620_to_fp16"), val = tensor<fp16, []>(1.00135803e-05)];
            tensor<fp16, [1, 1, 1, 4]> var_4621_cast = add(x = x_var_83_cast, y = var_4620_to_fp16);
            tensor<fp16, []> var_4622_epsilon_0_to_fp16 = const()[name = tensor<string, []>("op_4622_epsilon_0_to_fp16"), val = tensor<fp16, []>(5.96046448e-08)];
            tensor<fp16, [1, 1, 1, 4]> var_4622_cast = rsqrt(epsilon = var_4622_epsilon_0_to_fp16, x = var_4621_cast);
            tensor<fp16, [1, 512, 1, 4]> var_4623_cast = mul(x = x_zero_mean_83_cast, y = var_4622_cast);
            tensor<fp16, [512]> x_399_mean_0_to_fp16 = const()[name = tensor<string, []>("x_399_mean_0_to_fp16"), val = tensor<fp16, [512]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(43253056)))];
            tensor<fp16, [512]> x_399_variance_0_to_fp16 = const()[name = tensor<string, []>("x_399_variance_0_to_fp16"), val = tensor<fp16, [512]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(43254144)))];
            tensor<fp16, [512]> x_399_gamma_0_to_fp16 = const()[name = tensor<string, []>("x_399_gamma_0_to_fp16"), val = tensor<fp16, [512]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(43255232)))];
            tensor<fp16, [512]> x_399_beta_0_to_fp16 = const()[name = tensor<string, []>("x_399_beta_0_to_fp16"), val = tensor<fp16, [512]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(43256320)))];
            tensor<fp16, []> x_399_epsilon_0_to_fp16 = const()[name = tensor<string, []>("x_399_epsilon_0_to_fp16"), val = tensor<fp16, []>(1.00135803e-05)];
            tensor<fp16, [1, 512, 1, 4]> x_399_cast = batch_norm(beta = x_399_beta_0_to_fp16, epsilon = x_399_epsilon_0_to_fp16, gamma = x_399_gamma_0_to_fp16, mean = x_399_mean_0_to_fp16, variance = x_399_variance_0_to_fp16, x = var_4623_cast);
            tensor<int32, [2]> var_4634 = const()[name = tensor<string, []>("op_4634"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_4636 = const()[name = tensor<string, []>("op_4636"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> input_175_pad_type_0 = const()[name = tensor<string, []>("input_175_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> input_175_pad_0 = const()[name = tensor<string, []>("input_175_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [2048, 512, 1, 1]> op_4633_to_fp16_affine_quantized = constexpr_affine_dequantize()[axis = tensor<int32, []>(0), name = tensor<string, []>("op_4633_to_fp16_affine_quantized"), quantized_data = tensor<int8, [2048, 512, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(43257408))), scale = tensor<fp16, [2048]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(44308160))), zero_point = tensor<int8, [2048]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(44306048)))];
            tensor<fp16, [2048]> primary_encoder_encoders_4_feed_forward_w_1_bias_to_fp16 = const()[name = tensor<string, []>("primary_encoder_encoders_4_feed_forward_w_1_bias_to_fp16"), val = tensor<fp16, [2048]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(44312320)))];
            tensor<fp16, [1, 2048, 1, 4]> input_175_cast = conv(bias = primary_encoder_encoders_4_feed_forward_w_1_bias_to_fp16, dilations = var_4636, groups = var_4228, pad = input_175_pad_0, pad_type = input_175_pad_type_0, strides = var_4634, weight = op_4633_to_fp16_affine_quantized, x = x_399_cast);
            tensor<fp16, [1, 2048, 1, 4]> input_177_cast = silu(x = input_175_cast);
            tensor<int32, [2]> var_4645 = const()[name = tensor<string, []>("op_4645"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_4647 = const()[name = tensor<string, []>("op_4647"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> input_179_pad_type_0 = const()[name = tensor<string, []>("input_179_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> input_179_pad_0 = const()[name = tensor<string, []>("input_179_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [512, 2048, 1, 1]> op_4652_weight_0_to_fp16_affine_quantized = constexpr_affine_dequantize()[axis = tensor<int32, []>(0), name = tensor<string, []>("op_4652_weight_0_to_fp16_affine_quantized"), quantized_data = tensor<int8, [512, 2048, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(44316480))), scale = tensor<fp16, [512]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(45365696))), zero_point = tensor<int8, [512]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(45365120)))];
            tensor<fp16, [512]> var_4652_bias_0_to_fp16 = const()[name = tensor<string, []>("op_4652_bias_0_to_fp16"), val = tensor<fp16, [512]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(45366784)))];
            tensor<fp16, [1, 512, 1, 4]> var_4652_cast = conv(bias = var_4652_bias_0_to_fp16, dilations = var_4647, groups = var_4228, pad = input_179_pad_0, pad_type = input_179_pad_type_0, strides = var_4645, weight = op_4652_weight_0_to_fp16_affine_quantized, x = input_177_cast);
            tensor<fp16, [1, 512, 1, 4]> x_405_cast = add(x = x_395_cast, y = var_4652_cast);
            tensor<fp16, [1, 512, 1, 4]> var_4654_cast = abs(x = x_405_cast);
            tensor<fp16, []> var_4655_to_fp16 = const()[name = tensor<string, []>("op_4655_to_fp16"), val = tensor<fp16, []>(0.001953125)];
            tensor<fp16, [1, 512, 1, 4]> var_4656_cast = mul(x = var_4654_cast, y = var_4655_to_fp16);
            tensor<int32, [1]> var_4657 = const()[name = tensor<string, []>("op_4657"), val = tensor<int32, [1]>([1])];
            tensor<fp16, [1, 1, 1, 4]> scale_253_cast = reduce_sum(axes = var_4657, keep_dims = var_4227, x = var_4656_cast);
            tensor<fp16, []> scale_255_epsilon_0_to_fp16 = const()[name = tensor<string, []>("scale_255_epsilon_0_to_fp16"), val = tensor<fp16, []>(5.96046448e-08)];
            tensor<fp16, [1, 1, 1, 4]> scale_255_cast = rsqrt(epsilon = scale_255_epsilon_0_to_fp16, x = scale_253_cast);
            tensor<fp16, [1, 1, 1, 4]> scale_257_cast = mul(x = scale_255_cast, y = scale_255_cast);
            tensor<fp16, [1, 512, 1, 4]> x_407_cast = mul(x = x_405_cast, y = scale_257_cast);
            tensor<fp16, []> var_4662_to_fp16 = const()[name = tensor<string, []>("op_4662_to_fp16"), val = tensor<fp16, []>(-0.001953125)];
            tensor<fp16, [1, 512, 1, 4]> var_4663_cast = mul(x = x_407_cast, y = var_4662_to_fp16);
            tensor<int32, [1]> var_4664 = const()[name = tensor<string, []>("op_4664"), val = tensor<int32, [1]>([1])];
            tensor<fp16, [1, 1, 1, 4]> x_mean_85_cast = reduce_sum(axes = var_4664, keep_dims = var_4227, x = var_4663_cast);
            tensor<fp16, [1, 512, 1, 4]> x_zero_mean_85_cast = add(x = x_407_cast, y = x_mean_85_cast);
            tensor<fp16, []> var_4667_to_fp16 = const()[name = tensor<string, []>("op_4667_to_fp16"), val = tensor<fp16, []>(0.001953125)];
            tensor<fp16, [1, 512, 1, 4]> var_4668_cast = mul(x = x_zero_mean_85_cast, y = var_4667_to_fp16);
            tensor<fp16, [1, 512, 1, 4]> var_4669_cast = mul(x = var_4668_cast, y = x_zero_mean_85_cast);
            tensor<int32, [1]> var_4670 = const()[name = tensor<string, []>("op_4670"), val = tensor<int32, [1]>([1])];
            tensor<fp16, [1, 1, 1, 4]> x_var_85_cast = reduce_sum(axes = var_4670, keep_dims = var_4227, x = var_4669_cast);
            tensor<fp16, []> var_4672_to_fp16 = const()[name = tensor<string, []>("op_4672_to_fp16"), val = tensor<fp16, []>(1.00135803e-05)];
            tensor<fp16, [1, 1, 1, 4]> var_4673_cast = add(x = x_var_85_cast, y = var_4672_to_fp16);
            tensor<fp16, []> var_4674_epsilon_0_to_fp16 = const()[name = tensor<string, []>("op_4674_epsilon_0_to_fp16"), val = tensor<fp16, []>(5.96046448e-08)];
            tensor<fp16, [1, 1, 1, 4]> var_4674_cast = rsqrt(epsilon = var_4674_epsilon_0_to_fp16, x = var_4673_cast);
            tensor<fp16, [1, 512, 1, 4]> var_4675_cast = mul(x = x_zero_mean_85_cast, y = var_4674_cast);
            tensor<fp16, [512]> x_409_mean_0_to_fp16 = const()[name = tensor<string, []>("x_409_mean_0_to_fp16"), val = tensor<fp16, [512]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(45367872)))];
            tensor<fp16, [512]> x_409_variance_0_to_fp16 = const()[name = tensor<string, []>("x_409_variance_0_to_fp16"), val = tensor<fp16, [512]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(45368960)))];
            tensor<fp16, [512]> x_409_gamma_0_to_fp16 = const()[name = tensor<string, []>("x_409_gamma_0_to_fp16"), val = tensor<fp16, [512]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(45370048)))];
            tensor<fp16, [512]> x_409_beta_0_to_fp16 = const()[name = tensor<string, []>("x_409_beta_0_to_fp16"), val = tensor<fp16, [512]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(45371136)))];
            tensor<fp16, []> x_409_epsilon_0_to_fp16 = const()[name = tensor<string, []>("x_409_epsilon_0_to_fp16"), val = tensor<fp16, []>(1.00135803e-05)];
            tensor<fp16, [1, 512, 1, 4]> x_409_cast = batch_norm(beta = x_409_beta_0_to_fp16, epsilon = x_409_epsilon_0_to_fp16, gamma = x_409_gamma_0_to_fp16, mean = x_409_mean_0_to_fp16, variance = x_409_variance_0_to_fp16, x = var_4675_cast);
            tensor<int32, []> var_4690 = const()[name = tensor<string, []>("op_4690"), val = tensor<int32, []>(512)];
            tensor<int32, []> var_4696 = const()[name = tensor<string, []>("op_4696"), val = tensor<int32, []>(2)];
            tensor<int32, []> var_4699 = const()[name = tensor<string, []>("op_4699"), val = tensor<int32, []>(-1)];
            tensor<bool, []> var_4701 = const()[name = tensor<string, []>("op_4701"), val = tensor<bool, []>(true)];
            tensor<int32, []> var_4702 = const()[name = tensor<string, []>("op_4702"), val = tensor<int32, []>(1)];
            tensor<fp16, [1, 512, 1, 4]> var_4749_cast = abs(x = x_409_cast);
            tensor<fp16, []> var_4750_to_fp16 = const()[name = tensor<string, []>("op_4750_to_fp16"), val = tensor<fp16, []>(0.001953125)];
            tensor<fp16, [1, 512, 1, 4]> var_4751_cast = mul(x = var_4749_cast, y = var_4750_to_fp16);
            tensor<int32, [1]> var_4752 = const()[name = tensor<string, []>("op_4752"), val = tensor<int32, [1]>([1])];
            tensor<fp16, [1, 1, 1, 4]> scale_259_cast = reduce_sum(axes = var_4752, keep_dims = var_4701, x = var_4751_cast);
            tensor<fp16, []> scale_261_epsilon_0_to_fp16 = const()[name = tensor<string, []>("scale_261_epsilon_0_to_fp16"), val = tensor<fp16, []>(5.96046448e-08)];
            tensor<fp16, [1, 1, 1, 4]> scale_261_cast = rsqrt(epsilon = scale_261_epsilon_0_to_fp16, x = scale_259_cast);
            tensor<fp16, [1, 1, 1, 4]> scale_263_cast = mul(x = scale_261_cast, y = scale_261_cast);
            tensor<fp16, [1, 512, 1, 4]> x_411_cast = mul(x = x_409_cast, y = scale_263_cast);
            tensor<fp16, []> var_4757_to_fp16 = const()[name = tensor<string, []>("op_4757_to_fp16"), val = tensor<fp16, []>(-0.001953125)];
            tensor<fp16, [1, 512, 1, 4]> var_4758_cast = mul(x = x_411_cast, y = var_4757_to_fp16);
            tensor<int32, [1]> var_4759 = const()[name = tensor<string, []>("op_4759"), val = tensor<int32, [1]>([1])];
            tensor<fp16, [1, 1, 1, 4]> x_mean_87_cast = reduce_sum(axes = var_4759, keep_dims = var_4701, x = var_4758_cast);
            tensor<fp16, [1, 512, 1, 4]> x_zero_mean_87_cast = add(x = x_411_cast, y = x_mean_87_cast);
            tensor<fp16, []> var_4762_to_fp16 = const()[name = tensor<string, []>("op_4762_to_fp16"), val = tensor<fp16, []>(0.001953125)];
            tensor<fp16, [1, 512, 1, 4]> var_4763_cast = mul(x = x_zero_mean_87_cast, y = var_4762_to_fp16);
            tensor<fp16, [1, 512, 1, 4]> var_4764_cast = mul(x = var_4763_cast, y = x_zero_mean_87_cast);
            tensor<int32, [1]> var_4765 = const()[name = tensor<string, []>("op_4765"), val = tensor<int32, [1]>([1])];
            tensor<fp16, [1, 1, 1, 4]> x_var_87_cast = reduce_sum(axes = var_4765, keep_dims = var_4701, x = var_4764_cast);
            tensor<fp16, []> var_4767_to_fp16 = const()[name = tensor<string, []>("op_4767_to_fp16"), val = tensor<fp16, []>(1.00135803e-05)];
            tensor<fp16, [1, 1, 1, 4]> var_4768_cast = add(x = x_var_87_cast, y = var_4767_to_fp16);
            tensor<fp16, []> var_4769_epsilon_0_to_fp16 = const()[name = tensor<string, []>("op_4769_epsilon_0_to_fp16"), val = tensor<fp16, []>(5.96046448e-08)];
            tensor<fp16, [1, 1, 1, 4]> var_4769_cast = rsqrt(epsilon = var_4769_epsilon_0_to_fp16, x = var_4768_cast);
            tensor<fp16, [1, 512, 1, 4]> var_4770_cast = mul(x = x_zero_mean_87_cast, y = var_4769_cast);
            tensor<fp16, [512]> x_413_mean_0_to_fp16 = const()[name = tensor<string, []>("x_413_mean_0_to_fp16"), val = tensor<fp16, [512]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(45372224)))];
            tensor<fp16, [512]> x_413_variance_0_to_fp16 = const()[name = tensor<string, []>("x_413_variance_0_to_fp16"), val = tensor<fp16, [512]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(45373312)))];
            tensor<fp16, [512]> x_413_gamma_0_to_fp16 = const()[name = tensor<string, []>("x_413_gamma_0_to_fp16"), val = tensor<fp16, [512]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(45374400)))];
            tensor<fp16, [512]> x_413_beta_0_to_fp16 = const()[name = tensor<string, []>("x_413_beta_0_to_fp16"), val = tensor<fp16, [512]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(45375488)))];
            tensor<fp16, []> x_413_epsilon_0_to_fp16 = const()[name = tensor<string, []>("x_413_epsilon_0_to_fp16"), val = tensor<fp16, []>(1.00135803e-05)];
            tensor<fp16, [1, 512, 1, 4]> x_413_cast = batch_norm(beta = x_413_beta_0_to_fp16, epsilon = x_413_epsilon_0_to_fp16, gamma = x_413_gamma_0_to_fp16, mean = x_413_mean_0_to_fp16, variance = x_413_variance_0_to_fp16, x = var_4770_cast);
            tensor<int32, [2]> var_4781 = const()[name = tensor<string, []>("op_4781"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_4783 = const()[name = tensor<string, []>("op_4783"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> input_181_pad_type_0 = const()[name = tensor<string, []>("input_181_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> input_181_pad_0 = const()[name = tensor<string, []>("input_181_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [2048, 512, 1, 1]> op_4780_to_fp16_affine_quantized = constexpr_affine_dequantize()[axis = tensor<int32, []>(0), name = tensor<string, []>("op_4780_to_fp16_affine_quantized"), quantized_data = tensor<int8, [2048, 512, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(45376576))), scale = tensor<fp16, [2048]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(46427328))), zero_point = tensor<int8, [2048]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(46425216)))];
            tensor<fp16, [2048]> primary_encoder_encoders_5_feed_forward_macaron_w_1_bias_to_fp16 = const()[name = tensor<string, []>("primary_encoder_encoders_5_feed_forward_macaron_w_1_bias_to_fp16"), val = tensor<fp16, [2048]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(46431488)))];
            tensor<fp16, [1, 2048, 1, 4]> input_181_cast = conv(bias = primary_encoder_encoders_5_feed_forward_macaron_w_1_bias_to_fp16, dilations = var_4783, groups = var_4702, pad = input_181_pad_0, pad_type = input_181_pad_type_0, strides = var_4781, weight = op_4780_to_fp16_affine_quantized, x = x_413_cast);
            tensor<fp16, [1, 2048, 1, 4]> input_183_cast = silu(x = input_181_cast);
            tensor<int32, [2]> var_4792 = const()[name = tensor<string, []>("op_4792"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_4794 = const()[name = tensor<string, []>("op_4794"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> input_185_pad_type_0 = const()[name = tensor<string, []>("input_185_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> input_185_pad_0 = const()[name = tensor<string, []>("input_185_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [512, 2048, 1, 1]> op_4799_weight_0_to_fp16_affine_quantized = constexpr_affine_dequantize()[axis = tensor<int32, []>(0), name = tensor<string, []>("op_4799_weight_0_to_fp16_affine_quantized"), quantized_data = tensor<int8, [512, 2048, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(46435648))), scale = tensor<fp16, [512]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(47484864))), zero_point = tensor<int8, [512]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(47484288)))];
            tensor<fp16, [512]> var_4799_bias_0_to_fp16 = const()[name = tensor<string, []>("op_4799_bias_0_to_fp16"), val = tensor<fp16, [512]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(47485952)))];
            tensor<fp16, [1, 512, 1, 4]> var_4799_cast = conv(bias = var_4799_bias_0_to_fp16, dilations = var_4794, groups = var_4702, pad = input_185_pad_0, pad_type = input_185_pad_type_0, strides = var_4792, weight = op_4799_weight_0_to_fp16_affine_quantized, x = input_183_cast);
            tensor<fp16, [1, 512, 1, 4]> x_419_cast = add(x = x_409_cast, y = var_4799_cast);
            tensor<fp16, [1, 512, 1, 4]> var_4801_cast = abs(x = x_419_cast);
            tensor<fp16, []> var_4802_to_fp16 = const()[name = tensor<string, []>("op_4802_to_fp16"), val = tensor<fp16, []>(0.001953125)];
            tensor<fp16, [1, 512, 1, 4]> var_4803_cast = mul(x = var_4801_cast, y = var_4802_to_fp16);
            tensor<int32, [1]> var_4804 = const()[name = tensor<string, []>("op_4804"), val = tensor<int32, [1]>([1])];
            tensor<fp16, [1, 1, 1, 4]> scale_265_cast = reduce_sum(axes = var_4804, keep_dims = var_4701, x = var_4803_cast);
            tensor<fp16, []> scale_267_epsilon_0_to_fp16 = const()[name = tensor<string, []>("scale_267_epsilon_0_to_fp16"), val = tensor<fp16, []>(5.96046448e-08)];
            tensor<fp16, [1, 1, 1, 4]> scale_267_cast = rsqrt(epsilon = scale_267_epsilon_0_to_fp16, x = scale_265_cast);
            tensor<fp16, [1, 1, 1, 4]> scale_269_cast = mul(x = scale_267_cast, y = scale_267_cast);
            tensor<fp16, [1, 512, 1, 4]> x_421_cast = mul(x = x_419_cast, y = scale_269_cast);
            tensor<fp16, []> var_4809_to_fp16 = const()[name = tensor<string, []>("op_4809_to_fp16"), val = tensor<fp16, []>(-0.001953125)];
            tensor<fp16, [1, 512, 1, 4]> var_4810_cast = mul(x = x_421_cast, y = var_4809_to_fp16);
            tensor<int32, [1]> var_4811 = const()[name = tensor<string, []>("op_4811"), val = tensor<int32, [1]>([1])];
            tensor<fp16, [1, 1, 1, 4]> x_mean_89_cast = reduce_sum(axes = var_4811, keep_dims = var_4701, x = var_4810_cast);
            tensor<fp16, [1, 512, 1, 4]> x_zero_mean_89_cast = add(x = x_421_cast, y = x_mean_89_cast);
            tensor<fp16, []> var_4814_to_fp16 = const()[name = tensor<string, []>("op_4814_to_fp16"), val = tensor<fp16, []>(0.001953125)];
            tensor<fp16, [1, 512, 1, 4]> var_4815_cast = mul(x = x_zero_mean_89_cast, y = var_4814_to_fp16);
            tensor<fp16, [1, 512, 1, 4]> var_4816_cast = mul(x = var_4815_cast, y = x_zero_mean_89_cast);
            tensor<int32, [1]> var_4817 = const()[name = tensor<string, []>("op_4817"), val = tensor<int32, [1]>([1])];
            tensor<fp16, [1, 1, 1, 4]> x_var_89_cast = reduce_sum(axes = var_4817, keep_dims = var_4701, x = var_4816_cast);
            tensor<fp16, []> var_4819_to_fp16 = const()[name = tensor<string, []>("op_4819_to_fp16"), val = tensor<fp16, []>(1.00135803e-05)];
            tensor<fp16, [1, 1, 1, 4]> var_4820_cast = add(x = x_var_89_cast, y = var_4819_to_fp16);
            tensor<fp16, []> var_4821_epsilon_0_to_fp16 = const()[name = tensor<string, []>("op_4821_epsilon_0_to_fp16"), val = tensor<fp16, []>(5.96046448e-08)];
            tensor<fp16, [1, 1, 1, 4]> var_4821_cast = rsqrt(epsilon = var_4821_epsilon_0_to_fp16, x = var_4820_cast);
            tensor<fp16, [1, 512, 1, 4]> var_4822_cast = mul(x = x_zero_mean_89_cast, y = var_4821_cast);
            tensor<fp16, [512]> query_9_mean_0_to_fp16 = const()[name = tensor<string, []>("query_9_mean_0_to_fp16"), val = tensor<fp16, [512]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(47487040)))];
            tensor<fp16, [512]> query_9_variance_0_to_fp16 = const()[name = tensor<string, []>("query_9_variance_0_to_fp16"), val = tensor<fp16, [512]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(47488128)))];
            tensor<fp16, [512]> query_9_gamma_0_to_fp16 = const()[name = tensor<string, []>("query_9_gamma_0_to_fp16"), val = tensor<fp16, [512]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(47489216)))];
            tensor<fp16, [512]> query_9_beta_0_to_fp16 = const()[name = tensor<string, []>("query_9_beta_0_to_fp16"), val = tensor<fp16, [512]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(47490304)))];
            tensor<fp16, []> query_9_epsilon_0_to_fp16 = const()[name = tensor<string, []>("query_9_epsilon_0_to_fp16"), val = tensor<fp16, []>(1.00135803e-05)];
            tensor<fp16, [1, 512, 1, 4]> query_9_cast = batch_norm(beta = query_9_beta_0_to_fp16, epsilon = query_9_epsilon_0_to_fp16, gamma = query_9_gamma_0_to_fp16, mean = query_9_mean_0_to_fp16, variance = query_9_variance_0_to_fp16, x = var_4822_cast);
            tensor<int32, [2]> var_4842 = const()[name = tensor<string, []>("op_4842"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_4844 = const()[name = tensor<string, []>("op_4844"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> var_4846_pad_type_0 = const()[name = tensor<string, []>("op_4846_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> var_4846_pad_0 = const()[name = tensor<string, []>("op_4846_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [512, 512, 1, 1]> op_4841_to_fp16_affine_quantized = constexpr_affine_dequantize()[axis = tensor<int32, []>(0), name = tensor<string, []>("op_4841_to_fp16_affine_quantized"), quantized_data = tensor<int8, [512, 512, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(47491392))), scale = tensor<fp16, [512]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(47754176))), zero_point = tensor<int8, [512]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(47753600)))];
            tensor<fp16, [512]> primary_encoder_encoders_5_self_attn_linear_v_bias_to_fp16 = const()[name = tensor<string, []>("primary_encoder_encoders_5_self_attn_linear_v_bias_to_fp16"), val = tensor<fp16, [512]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(47755264)))];
            tensor<fp16, [1, 512, 1, 4]> var_4846_cast = conv(bias = primary_encoder_encoders_5_self_attn_linear_v_bias_to_fp16, dilations = var_4844, groups = var_4702, pad = var_4846_pad_0, pad_type = var_4846_pad_type_0, strides = var_4842, weight = op_4841_to_fp16_affine_quantized, x = query_9_cast);
            tensor<int32, [8]> tile_34 = const()[name = tensor<string, []>("tile_34"), val = tensor<int32, [8]>([64, 64, 64, 64, 64, 64, 64, 64])];
            tensor<int32, []> var_4847_axis_0 = const()[name = tensor<string, []>("op_4847_axis_0"), val = tensor<int32, []>(1)];
            tensor<fp16, [1, 64, 1, 4]> var_4847_cast_0, tensor<fp16, [1, 64, 1, 4]> var_4847_cast_1, tensor<fp16, [1, 64, 1, 4]> var_4847_cast_2, tensor<fp16, [1, 64, 1, 4]> var_4847_cast_3, tensor<fp16, [1, 64, 1, 4]> var_4847_cast_4, tensor<fp16, [1, 64, 1, 4]> var_4847_cast_5, tensor<fp16, [1, 64, 1, 4]> var_4847_cast_6, tensor<fp16, [1, 64, 1, 4]> var_4847_cast_7 = split(axis = var_4847_axis_0, split_sizes = tile_34, x = var_4846_cast);
            tensor<int32, [8]> tile_35 = const()[name = tensor<string, []>("tile_35"), val = tensor<int32, [8]>([1, 1, 1, 1, 1, 1, 1, 1])];
            tensor<int32, []> var_4856_axis_0 = const()[name = tensor<string, []>("op_4856_axis_0"), val = tensor<int32, []>(2)];
            tensor<fp16, [1, 64, 1, 128]> var_4856_cast_0, tensor<fp16, [1, 64, 1, 128]> var_4856_cast_1, tensor<fp16, [1, 64, 1, 128]> var_4856_cast_2, tensor<fp16, [1, 64, 1, 128]> var_4856_cast_3, tensor<fp16, [1, 64, 1, 128]> var_4856_cast_4, tensor<fp16, [1, 64, 1, 128]> var_4856_cast_5, tensor<fp16, [1, 64, 1, 128]> var_4856_cast_6, tensor<fp16, [1, 64, 1, 128]> var_4856_cast_7 = split(axis = var_4856_axis_0, split_sizes = tile_35, x = var_321_cast_5);
            tensor<bool, []> var_4866_interleave_0 = const()[name = tensor<string, []>("op_4866_interleave_0"), val = tensor<bool, []>(false)];
            tensor<fp16, [1, 64, 1, 132]> var_4866_cast = concat(axis = var_4699, interleave = var_4866_interleave_0, values = (var_4856_cast_0, var_4847_cast_0));
            tensor<int32, [4]> var_4870_begin_0 = const()[name = tensor<string, []>("op_4870_begin_0"), val = tensor<int32, [4]>([0, 0, 0, 4])];
            tensor<int32, [4]> var_4870_end_0 = const()[name = tensor<string, []>("op_4870_end_0"), val = tensor<int32, [4]>([1, 64, 1, 132])];
            tensor<bool, [4]> var_4870_end_mask_0 = const()[name = tensor<string, []>("op_4870_end_mask_0"), val = tensor<bool, [4]>([true, true, true, true])];
            tensor<fp16, [1, 64, 1, 128]> var_4870_cast = slice_by_index(begin = var_4870_begin_0, end = var_4870_end_0, end_mask = var_4870_end_mask_0, x = var_4866_cast);
            tensor<bool, []> var_4872_interleave_0 = const()[name = tensor<string, []>("op_4872_interleave_0"), val = tensor<bool, []>(false)];
            tensor<fp16, [1, 64, 1, 132]> var_4872_cast = concat(axis = var_4699, interleave = var_4872_interleave_0, values = (var_4856_cast_1, var_4847_cast_1));
            tensor<int32, [4]> var_4876_begin_0 = const()[name = tensor<string, []>("op_4876_begin_0"), val = tensor<int32, [4]>([0, 0, 0, 4])];
            tensor<int32, [4]> var_4876_end_0 = const()[name = tensor<string, []>("op_4876_end_0"), val = tensor<int32, [4]>([1, 64, 1, 132])];
            tensor<bool, [4]> var_4876_end_mask_0 = const()[name = tensor<string, []>("op_4876_end_mask_0"), val = tensor<bool, [4]>([true, true, true, true])];
            tensor<fp16, [1, 64, 1, 128]> var_4876_cast = slice_by_index(begin = var_4876_begin_0, end = var_4876_end_0, end_mask = var_4876_end_mask_0, x = var_4872_cast);
            tensor<bool, []> var_4878_interleave_0 = const()[name = tensor<string, []>("op_4878_interleave_0"), val = tensor<bool, []>(false)];
            tensor<fp16, [1, 64, 1, 132]> var_4878_cast = concat(axis = var_4699, interleave = var_4878_interleave_0, values = (var_4856_cast_2, var_4847_cast_2));
            tensor<int32, [4]> var_4882_begin_0 = const()[name = tensor<string, []>("op_4882_begin_0"), val = tensor<int32, [4]>([0, 0, 0, 4])];
            tensor<int32, [4]> var_4882_end_0 = const()[name = tensor<string, []>("op_4882_end_0"), val = tensor<int32, [4]>([1, 64, 1, 132])];
            tensor<bool, [4]> var_4882_end_mask_0 = const()[name = tensor<string, []>("op_4882_end_mask_0"), val = tensor<bool, [4]>([true, true, true, true])];
            tensor<fp16, [1, 64, 1, 128]> var_4882_cast = slice_by_index(begin = var_4882_begin_0, end = var_4882_end_0, end_mask = var_4882_end_mask_0, x = var_4878_cast);
            tensor<bool, []> var_4884_interleave_0 = const()[name = tensor<string, []>("op_4884_interleave_0"), val = tensor<bool, []>(false)];
            tensor<fp16, [1, 64, 1, 132]> var_4884_cast = concat(axis = var_4699, interleave = var_4884_interleave_0, values = (var_4856_cast_3, var_4847_cast_3));
            tensor<int32, [4]> var_4888_begin_0 = const()[name = tensor<string, []>("op_4888_begin_0"), val = tensor<int32, [4]>([0, 0, 0, 4])];
            tensor<int32, [4]> var_4888_end_0 = const()[name = tensor<string, []>("op_4888_end_0"), val = tensor<int32, [4]>([1, 64, 1, 132])];
            tensor<bool, [4]> var_4888_end_mask_0 = const()[name = tensor<string, []>("op_4888_end_mask_0"), val = tensor<bool, [4]>([true, true, true, true])];
            tensor<fp16, [1, 64, 1, 128]> var_4888_cast = slice_by_index(begin = var_4888_begin_0, end = var_4888_end_0, end_mask = var_4888_end_mask_0, x = var_4884_cast);
            tensor<bool, []> var_4890_interleave_0 = const()[name = tensor<string, []>("op_4890_interleave_0"), val = tensor<bool, []>(false)];
            tensor<fp16, [1, 64, 1, 132]> var_4890_cast = concat(axis = var_4699, interleave = var_4890_interleave_0, values = (var_4856_cast_4, var_4847_cast_4));
            tensor<int32, [4]> var_4894_begin_0 = const()[name = tensor<string, []>("op_4894_begin_0"), val = tensor<int32, [4]>([0, 0, 0, 4])];
            tensor<int32, [4]> var_4894_end_0 = const()[name = tensor<string, []>("op_4894_end_0"), val = tensor<int32, [4]>([1, 64, 1, 132])];
            tensor<bool, [4]> var_4894_end_mask_0 = const()[name = tensor<string, []>("op_4894_end_mask_0"), val = tensor<bool, [4]>([true, true, true, true])];
            tensor<fp16, [1, 64, 1, 128]> var_4894_cast = slice_by_index(begin = var_4894_begin_0, end = var_4894_end_0, end_mask = var_4894_end_mask_0, x = var_4890_cast);
            tensor<bool, []> var_4896_interleave_0 = const()[name = tensor<string, []>("op_4896_interleave_0"), val = tensor<bool, []>(false)];
            tensor<fp16, [1, 64, 1, 132]> var_4896_cast = concat(axis = var_4699, interleave = var_4896_interleave_0, values = (var_4856_cast_5, var_4847_cast_5));
            tensor<int32, [4]> var_4900_begin_0 = const()[name = tensor<string, []>("op_4900_begin_0"), val = tensor<int32, [4]>([0, 0, 0, 4])];
            tensor<int32, [4]> var_4900_end_0 = const()[name = tensor<string, []>("op_4900_end_0"), val = tensor<int32, [4]>([1, 64, 1, 132])];
            tensor<bool, [4]> var_4900_end_mask_0 = const()[name = tensor<string, []>("op_4900_end_mask_0"), val = tensor<bool, [4]>([true, true, true, true])];
            tensor<fp16, [1, 64, 1, 128]> var_4900_cast = slice_by_index(begin = var_4900_begin_0, end = var_4900_end_0, end_mask = var_4900_end_mask_0, x = var_4896_cast);
            tensor<bool, []> var_4902_interleave_0 = const()[name = tensor<string, []>("op_4902_interleave_0"), val = tensor<bool, []>(false)];
            tensor<fp16, [1, 64, 1, 132]> var_4902_cast = concat(axis = var_4699, interleave = var_4902_interleave_0, values = (var_4856_cast_6, var_4847_cast_6));
            tensor<int32, [4]> var_4906_begin_0 = const()[name = tensor<string, []>("op_4906_begin_0"), val = tensor<int32, [4]>([0, 0, 0, 4])];
            tensor<int32, [4]> var_4906_end_0 = const()[name = tensor<string, []>("op_4906_end_0"), val = tensor<int32, [4]>([1, 64, 1, 132])];
            tensor<bool, [4]> var_4906_end_mask_0 = const()[name = tensor<string, []>("op_4906_end_mask_0"), val = tensor<bool, [4]>([true, true, true, true])];
            tensor<fp16, [1, 64, 1, 128]> var_4906_cast = slice_by_index(begin = var_4906_begin_0, end = var_4906_end_0, end_mask = var_4906_end_mask_0, x = var_4902_cast);
            tensor<bool, []> var_4908_interleave_0 = const()[name = tensor<string, []>("op_4908_interleave_0"), val = tensor<bool, []>(false)];
            tensor<fp16, [1, 64, 1, 132]> var_4908_cast = concat(axis = var_4699, interleave = var_4908_interleave_0, values = (var_4856_cast_7, var_4847_cast_7));
            tensor<int32, [4]> var_4912_begin_0 = const()[name = tensor<string, []>("op_4912_begin_0"), val = tensor<int32, [4]>([0, 0, 0, 4])];
            tensor<int32, [4]> var_4912_end_0 = const()[name = tensor<string, []>("op_4912_end_0"), val = tensor<int32, [4]>([1, 64, 1, 132])];
            tensor<bool, [4]> var_4912_end_mask_0 = const()[name = tensor<string, []>("op_4912_end_mask_0"), val = tensor<bool, [4]>([true, true, true, true])];
            tensor<fp16, [1, 64, 1, 128]> var_4912_cast = slice_by_index(begin = var_4912_begin_0, end = var_4912_end_0, end_mask = var_4912_end_mask_0, x = var_4908_cast);
            tensor<bool, []> var_4914_interleave_0 = const()[name = tensor<string, []>("op_4914_interleave_0"), val = tensor<bool, []>(false)];
            tensor<fp16, [1, 64, 8, 128]> var_4914_cast = concat(axis = var_4696, interleave = var_4914_interleave_0, values = (var_4870_cast, var_4876_cast, var_4882_cast, var_4888_cast, var_4894_cast, var_4900_cast, var_4906_cast, var_4912_cast));
            tensor<string, []> var_4916_equation_0 = const()[name = tensor<string, []>("op_4916_equation_0"), val = tensor<string, []>("bnhd,bdhm->bnhm")];
            tensor<fp16, [1, 64, 1, 4]> var_4916_cast = einsum(equation = var_4916_equation_0, values = (var_4870_cast, input_81_cast));
            tensor<string, []> var_4918_equation_0 = const()[name = tensor<string, []>("op_4918_equation_0"), val = tensor<string, []>("bnhd,bdhm->bnhm")];
            tensor<fp16, [1, 64, 1, 4]> var_4918_cast = einsum(equation = var_4918_equation_0, values = (var_4876_cast, input_83_cast));
            tensor<string, []> var_4920_equation_0 = const()[name = tensor<string, []>("op_4920_equation_0"), val = tensor<string, []>("bnhd,bdhm->bnhm")];
            tensor<fp16, [1, 64, 1, 4]> var_4920_cast = einsum(equation = var_4920_equation_0, values = (var_4882_cast, input_85_cast));
            tensor<string, []> var_4922_equation_0 = const()[name = tensor<string, []>("op_4922_equation_0"), val = tensor<string, []>("bnhd,bdhm->bnhm")];
            tensor<fp16, [1, 64, 1, 4]> var_4922_cast = einsum(equation = var_4922_equation_0, values = (var_4888_cast, input_87_cast));
            tensor<string, []> var_4924_equation_0 = const()[name = tensor<string, []>("op_4924_equation_0"), val = tensor<string, []>("bnhd,bdhm->bnhm")];
            tensor<fp16, [1, 64, 1, 4]> var_4924_cast = einsum(equation = var_4924_equation_0, values = (var_4894_cast, input_89_cast));
            tensor<string, []> var_4926_equation_0 = const()[name = tensor<string, []>("op_4926_equation_0"), val = tensor<string, []>("bnhd,bdhm->bnhm")];
            tensor<fp16, [1, 64, 1, 4]> var_4926_cast = einsum(equation = var_4926_equation_0, values = (var_4900_cast, input_91_cast));
            tensor<string, []> var_4928_equation_0 = const()[name = tensor<string, []>("op_4928_equation_0"), val = tensor<string, []>("bnhd,bdhm->bnhm")];
            tensor<fp16, [1, 64, 1, 4]> var_4928_cast = einsum(equation = var_4928_equation_0, values = (var_4906_cast, input_93_cast));
            tensor<string, []> var_4930_equation_0 = const()[name = tensor<string, []>("op_4930_equation_0"), val = tensor<string, []>("bnhd,bdhm->bnhm")];
            tensor<fp16, [1, 64, 1, 4]> var_4930_cast = einsum(equation = var_4930_equation_0, values = (var_4912_cast, input_95_cast));
            tensor<bool, []> y_21_interleave_0 = const()[name = tensor<string, []>("y_21_interleave_0"), val = tensor<bool, []>(false)];
            tensor<fp16, [1, 512, 1, 4]> y_21_cast = concat(axis = var_4702, interleave = y_21_interleave_0, values = (var_4916_cast, var_4918_cast, var_4920_cast, var_4922_cast, var_4924_cast, var_4926_cast, var_4928_cast, var_4930_cast));
            tensor<int32, [2]> var_4937 = const()[name = tensor<string, []>("op_4937"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_4939 = const()[name = tensor<string, []>("op_4939"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> input_187_pad_type_0 = const()[name = tensor<string, []>("input_187_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> input_187_pad_0 = const()[name = tensor<string, []>("input_187_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [512, 512, 1, 1]> op_4936_to_fp16_affine_quantized = constexpr_affine_dequantize()[axis = tensor<int32, []>(0), name = tensor<string, []>("op_4936_to_fp16_affine_quantized"), quantized_data = tensor<int8, [512, 512, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(47756352))), scale = tensor<fp16, [512]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(48019136))), zero_point = tensor<int8, [512]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(48018560)))];
            tensor<fp16, [512]> primary_encoder_encoders_5_self_attn_linear_out_bias_to_fp16 = const()[name = tensor<string, []>("primary_encoder_encoders_5_self_attn_linear_out_bias_to_fp16"), val = tensor<fp16, [512]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(48020224)))];
            tensor<fp16, [1, 512, 1, 4]> input_187_cast = conv(bias = primary_encoder_encoders_5_self_attn_linear_out_bias_to_fp16, dilations = var_4939, groups = var_4702, pad = input_187_pad_0, pad_type = input_187_pad_type_0, strides = var_4937, weight = op_4936_to_fp16_affine_quantized, x = y_21_cast);
            tensor<fp16, [1, 512, 1, 4]> x_423_cast = add(x = x_419_cast, y = input_187_cast);
            tensor<fp16, [1, 512, 1, 4]> var_4947_cast = abs(x = x_423_cast);
            tensor<fp16, []> var_4948_to_fp16 = const()[name = tensor<string, []>("op_4948_to_fp16"), val = tensor<fp16, []>(0.001953125)];
            tensor<fp16, [1, 512, 1, 4]> var_4949_cast = mul(x = var_4947_cast, y = var_4948_to_fp16);
            tensor<int32, [1]> var_4950 = const()[name = tensor<string, []>("op_4950"), val = tensor<int32, [1]>([1])];
            tensor<fp16, [1, 1, 1, 4]> scale_271_cast = reduce_sum(axes = var_4950, keep_dims = var_4701, x = var_4949_cast);
            tensor<fp16, []> scale_273_epsilon_0_to_fp16 = const()[name = tensor<string, []>("scale_273_epsilon_0_to_fp16"), val = tensor<fp16, []>(5.96046448e-08)];
            tensor<fp16, [1, 1, 1, 4]> scale_273_cast = rsqrt(epsilon = scale_273_epsilon_0_to_fp16, x = scale_271_cast);
            tensor<fp16, [1, 1, 1, 4]> scale_275_cast = mul(x = scale_273_cast, y = scale_273_cast);
            tensor<fp16, [1, 512, 1, 4]> x_425_cast = mul(x = x_423_cast, y = scale_275_cast);
            tensor<fp16, []> var_4955_to_fp16 = const()[name = tensor<string, []>("op_4955_to_fp16"), val = tensor<fp16, []>(-0.001953125)];
            tensor<fp16, [1, 512, 1, 4]> var_4956_cast = mul(x = x_425_cast, y = var_4955_to_fp16);
            tensor<int32, [1]> var_4957 = const()[name = tensor<string, []>("op_4957"), val = tensor<int32, [1]>([1])];
            tensor<fp16, [1, 1, 1, 4]> x_mean_91_cast = reduce_sum(axes = var_4957, keep_dims = var_4701, x = var_4956_cast);
            tensor<fp16, [1, 512, 1, 4]> x_zero_mean_91_cast = add(x = x_425_cast, y = x_mean_91_cast);
            tensor<fp16, []> var_4960_to_fp16 = const()[name = tensor<string, []>("op_4960_to_fp16"), val = tensor<fp16, []>(0.001953125)];
            tensor<fp16, [1, 512, 1, 4]> var_4961_cast = mul(x = x_zero_mean_91_cast, y = var_4960_to_fp16);
            tensor<fp16, [1, 512, 1, 4]> var_4962_cast = mul(x = var_4961_cast, y = x_zero_mean_91_cast);
            tensor<int32, [1]> var_4963 = const()[name = tensor<string, []>("op_4963"), val = tensor<int32, [1]>([1])];
            tensor<fp16, [1, 1, 1, 4]> x_var_91_cast = reduce_sum(axes = var_4963, keep_dims = var_4701, x = var_4962_cast);
            tensor<fp16, []> var_4965_to_fp16 = const()[name = tensor<string, []>("op_4965_to_fp16"), val = tensor<fp16, []>(1.00135803e-05)];
            tensor<fp16, [1, 1, 1, 4]> var_4966_cast = add(x = x_var_91_cast, y = var_4965_to_fp16);
            tensor<fp16, []> var_4967_epsilon_0_to_fp16 = const()[name = tensor<string, []>("op_4967_epsilon_0_to_fp16"), val = tensor<fp16, []>(5.96046448e-08)];
            tensor<fp16, [1, 1, 1, 4]> var_4967_cast = rsqrt(epsilon = var_4967_epsilon_0_to_fp16, x = var_4966_cast);
            tensor<fp16, [1, 512, 1, 4]> var_4968_cast = mul(x = x_zero_mean_91_cast, y = var_4967_cast);
            tensor<fp16, [512]> x_427_mean_0_to_fp16 = const()[name = tensor<string, []>("x_427_mean_0_to_fp16"), val = tensor<fp16, [512]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(48021312)))];
            tensor<fp16, [512]> x_427_variance_0_to_fp16 = const()[name = tensor<string, []>("x_427_variance_0_to_fp16"), val = tensor<fp16, [512]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(48022400)))];
            tensor<fp16, [512]> x_427_gamma_0_to_fp16 = const()[name = tensor<string, []>("x_427_gamma_0_to_fp16"), val = tensor<fp16, [512]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(48023488)))];
            tensor<fp16, [512]> x_427_beta_0_to_fp16 = const()[name = tensor<string, []>("x_427_beta_0_to_fp16"), val = tensor<fp16, [512]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(48024576)))];
            tensor<fp16, []> x_427_epsilon_0_to_fp16 = const()[name = tensor<string, []>("x_427_epsilon_0_to_fp16"), val = tensor<fp16, []>(1.00135803e-05)];
            tensor<fp16, [1, 512, 1, 4]> x_427_cast = batch_norm(beta = x_427_beta_0_to_fp16, epsilon = x_427_epsilon_0_to_fp16, gamma = x_427_gamma_0_to_fp16, mean = x_427_mean_0_to_fp16, variance = x_427_variance_0_to_fp16, x = var_4968_cast);
            tensor<bool, []> x_429_interleave_0 = const()[name = tensor<string, []>("x_429_interleave_0"), val = tensor<bool, []>(false)];
            tensor<fp16, [1, 512, 1, 36]> x_429_cast = concat(axis = var_4699, interleave = x_429_interleave_0, values = (var_301_cast_5, x_427_cast));
            tensor<int32, [4]> x_431_begin_0 = const()[name = tensor<string, []>("x_431_begin_0"), val = tensor<int32, [4]>([0, 0, 0, 12])];
            tensor<int32, [4]> x_431_end_0 = const()[name = tensor<string, []>("x_431_end_0"), val = tensor<int32, [4]>([1, 512, 1, 36])];
            tensor<bool, [4]> x_431_end_mask_0 = const()[name = tensor<string, []>("x_431_end_mask_0"), val = tensor<bool, [4]>([true, true, true, true])];
            tensor<fp16, [1, 512, 1, 24]> x_431_cast = slice_by_index(begin = x_431_begin_0, end = x_431_end_0, end_mask = x_431_end_mask_0, x = x_429_cast);
            tensor<int32, [4]> x_433_begin_0 = const()[name = tensor<string, []>("x_433_begin_0"), val = tensor<int32, [4]>([0, 0, 0, 12])];
            tensor<int32, [4]> x_433_end_0 = const()[name = tensor<string, []>("x_433_end_0"), val = tensor<int32, [4]>([1, 512, 1, 24])];
            tensor<bool, [4]> x_433_end_mask_0 = const()[name = tensor<string, []>("x_433_end_mask_0"), val = tensor<bool, [4]>([true, true, true, true])];
            tensor<fp16, [1, 512, 1, 12]> x_433_cast = slice_by_index(begin = x_433_begin_0, end = x_433_end_0, end_mask = x_433_end_mask_0, x = x_431_cast);
            tensor<int32, [4]> x_435_begin_0 = const()[name = tensor<string, []>("x_435_begin_0"), val = tensor<int32, [4]>([0, 0, 0, 1])];
            tensor<int32, [4]> x_435_end_0 = const()[name = tensor<string, []>("x_435_end_0"), val = tensor<int32, [4]>([1, 512, 1, 12])];
            tensor<bool, [4]> x_435_end_mask_0 = const()[name = tensor<string, []>("x_435_end_mask_0"), val = tensor<bool, [4]>([true, true, true, true])];
            tensor<fp16, [1, 512, 1, 11]> x_435_cast = slice_by_index(begin = x_435_begin_0, end = x_435_end_0, end_mask = x_435_end_mask_0, x = x_433_cast);
            tensor<int32, [4]> var_5008_begin_0 = const()[name = tensor<string, []>("op_5008_begin_0"), val = tensor<int32, [4]>([0, 0, 0, -7])];
            tensor<int32, [4]> var_5008_end_0 = const()[name = tensor<string, []>("op_5008_end_0"), val = tensor<int32, [4]>([1, 512, 1, 11])];
            tensor<bool, [4]> var_5008_end_mask_0 = const()[name = tensor<string, []>("op_5008_end_mask_0"), val = tensor<bool, [4]>([true, true, true, true])];
            tensor<fp16, [1, 512, 1, 7]> var_5008_cast = slice_by_index(begin = var_5008_begin_0, end = var_5008_end_0, end_mask = var_5008_end_mask_0, x = x_435_cast);
            tensor<int32, [2]> var_5010 = const()[name = tensor<string, []>("op_5010"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_5012 = const()[name = tensor<string, []>("op_5012"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> x_437_pad_type_0 = const()[name = tensor<string, []>("x_437_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> x_437_pad_0 = const()[name = tensor<string, []>("x_437_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [1024, 512, 1, 1]> op_5009_to_fp16_affine_quantized = constexpr_affine_dequantize()[axis = tensor<int32, []>(0), name = tensor<string, []>("op_5009_to_fp16_affine_quantized"), quantized_data = tensor<int8, [1024, 512, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(48025664))), scale = tensor<fp16, [1024]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(48551104))), zero_point = tensor<int8, [1024]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(48550016)))];
            tensor<fp16, [1024]> primary_encoder_encoders_5_conv_module_pointwise_conv1_bias_to_fp16 = const()[name = tensor<string, []>("primary_encoder_encoders_5_conv_module_pointwise_conv1_bias_to_fp16"), val = tensor<fp16, [1024]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(48553216)))];
            tensor<fp16, [1, 1024, 1, 11]> x_437_cast = conv(bias = primary_encoder_encoders_5_conv_module_pointwise_conv1_bias_to_fp16, dilations = var_5012, groups = var_4702, pad = x_437_pad_0, pad_type = x_437_pad_type_0, strides = var_5010, weight = op_5009_to_fp16_affine_quantized, x = x_435_cast);
            tensor<int32, [4]> var_5021_begin_0 = const()[name = tensor<string, []>("op_5021_begin_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<int32, [4]> var_5021_end_0 = const()[name = tensor<string, []>("op_5021_end_0"), val = tensor<int32, [4]>([1, 512, 1, 11])];
            tensor<bool, [4]> var_5021_end_mask_0 = const()[name = tensor<string, []>("op_5021_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [1, 512, 1, 11]> var_5021_cast = slice_by_index(begin = var_5021_begin_0, end = var_5021_end_0, end_mask = var_5021_end_mask_0, x = x_437_cast);
            tensor<int32, [4]> var_5025_begin_0 = const()[name = tensor<string, []>("op_5025_begin_0"), val = tensor<int32, [4]>([0, 512, 0, 0])];
            tensor<int32, [4]> var_5025_end_0 = const()[name = tensor<string, []>("op_5025_end_0"), val = tensor<int32, [4]>([1, 1024, 1, 11])];
            tensor<bool, [4]> var_5025_end_mask_0 = const()[name = tensor<string, []>("op_5025_end_mask_0"), val = tensor<bool, [4]>([true, true, true, true])];
            tensor<fp16, [1, 512, 1, 11]> var_5025_cast = slice_by_index(begin = var_5025_begin_0, end = var_5025_end_0, end_mask = var_5025_end_mask_0, x = x_437_cast);
            tensor<fp16, [1, 512, 1, 11]> var_5028_cast = sigmoid(x = var_5025_cast);
            tensor<fp16, [1, 512, 1, 11]> x_439_cast = mul(x = var_5021_cast, y = var_5028_cast);
            tensor<int32, [2]> var_5031 = const()[name = tensor<string, []>("op_5031"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_5033 = const()[name = tensor<string, []>("op_5033"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> x_441_pad_type_0 = const()[name = tensor<string, []>("x_441_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> x_441_pad_0 = const()[name = tensor<string, []>("x_441_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [512, 1, 1, 8]> op_5030_to_fp16_affine_quantized = constexpr_affine_dequantize()[axis = tensor<int32, []>(0), name = tensor<string, []>("op_5030_to_fp16_affine_quantized"), quantized_data = tensor<int8, [512, 1, 1, 8]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(48555328))), scale = tensor<fp16, [512]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(48560064))), zero_point = tensor<int8, [512]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(48559488)))];
            tensor<fp16, [512]> primary_encoder_encoders_5_conv_module_depthwise_conv_bias_to_fp16 = const()[name = tensor<string, []>("primary_encoder_encoders_5_conv_module_depthwise_conv_bias_to_fp16"), val = tensor<fp16, [512]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(48561152)))];
            tensor<fp16, [1, 512, 1, 4]> x_441_cast = conv(bias = primary_encoder_encoders_5_conv_module_depthwise_conv_bias_to_fp16, dilations = var_5033, groups = var_4690, pad = x_441_pad_0, pad_type = x_441_pad_type_0, strides = var_5031, weight = op_5030_to_fp16_affine_quantized, x = x_439_cast);
            tensor<fp16, [1, 512, 1, 4]> var_5036_cast = abs(x = x_441_cast);
            tensor<fp16, []> var_5037_to_fp16 = const()[name = tensor<string, []>("op_5037_to_fp16"), val = tensor<fp16, []>(0.001953125)];
            tensor<fp16, [1, 512, 1, 4]> var_5038_cast = mul(x = var_5036_cast, y = var_5037_to_fp16);
            tensor<int32, [1]> var_5039 = const()[name = tensor<string, []>("op_5039"), val = tensor<int32, [1]>([1])];
            tensor<fp16, [1, 1, 1, 4]> scale_277_cast = reduce_sum(axes = var_5039, keep_dims = var_4701, x = var_5038_cast);
            tensor<fp16, []> scale_279_epsilon_0_to_fp16 = const()[name = tensor<string, []>("scale_279_epsilon_0_to_fp16"), val = tensor<fp16, []>(5.96046448e-08)];
            tensor<fp16, [1, 1, 1, 4]> scale_279_cast = rsqrt(epsilon = scale_279_epsilon_0_to_fp16, x = scale_277_cast);
            tensor<fp16, [1, 1, 1, 4]> scale_281_cast = mul(x = scale_279_cast, y = scale_279_cast);
            tensor<fp16, [1, 512, 1, 4]> x_443_cast = mul(x = x_441_cast, y = scale_281_cast);
            tensor<fp16, []> var_5044_to_fp16 = const()[name = tensor<string, []>("op_5044_to_fp16"), val = tensor<fp16, []>(-0.001953125)];
            tensor<fp16, [1, 512, 1, 4]> var_5045_cast = mul(x = x_443_cast, y = var_5044_to_fp16);
            tensor<int32, [1]> var_5046 = const()[name = tensor<string, []>("op_5046"), val = tensor<int32, [1]>([1])];
            tensor<fp16, [1, 1, 1, 4]> x_mean_93_cast = reduce_sum(axes = var_5046, keep_dims = var_4701, x = var_5045_cast);
            tensor<fp16, [1, 512, 1, 4]> x_zero_mean_93_cast = add(x = x_443_cast, y = x_mean_93_cast);
            tensor<fp16, []> var_5049_to_fp16 = const()[name = tensor<string, []>("op_5049_to_fp16"), val = tensor<fp16, []>(0.001953125)];
            tensor<fp16, [1, 512, 1, 4]> var_5050_cast = mul(x = x_zero_mean_93_cast, y = var_5049_to_fp16);
            tensor<fp16, [1, 512, 1, 4]> var_5051_cast = mul(x = var_5050_cast, y = x_zero_mean_93_cast);
            tensor<int32, [1]> var_5052 = const()[name = tensor<string, []>("op_5052"), val = tensor<int32, [1]>([1])];
            tensor<fp16, [1, 1, 1, 4]> x_var_93_cast = reduce_sum(axes = var_5052, keep_dims = var_4701, x = var_5051_cast);
            tensor<fp16, []> var_5054_to_fp16 = const()[name = tensor<string, []>("op_5054_to_fp16"), val = tensor<fp16, []>(1.00135803e-05)];
            tensor<fp16, [1, 1, 1, 4]> var_5055_cast = add(x = x_var_93_cast, y = var_5054_to_fp16);
            tensor<fp16, []> var_5056_epsilon_0_to_fp16 = const()[name = tensor<string, []>("op_5056_epsilon_0_to_fp16"), val = tensor<fp16, []>(5.96046448e-08)];
            tensor<fp16, [1, 1, 1, 4]> var_5056_cast = rsqrt(epsilon = var_5056_epsilon_0_to_fp16, x = var_5055_cast);
            tensor<fp16, [1, 512, 1, 4]> var_5057_cast = mul(x = x_zero_mean_93_cast, y = var_5056_cast);
            tensor<fp16, [512]> input_189_mean_0_to_fp16 = const()[name = tensor<string, []>("input_189_mean_0_to_fp16"), val = tensor<fp16, [512]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(48562240)))];
            tensor<fp16, [512]> input_189_variance_0_to_fp16 = const()[name = tensor<string, []>("input_189_variance_0_to_fp16"), val = tensor<fp16, [512]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(48563328)))];
            tensor<fp16, [512]> input_189_gamma_0_to_fp16 = const()[name = tensor<string, []>("input_189_gamma_0_to_fp16"), val = tensor<fp16, [512]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(48564416)))];
            tensor<fp16, [512]> input_189_beta_0_to_fp16 = const()[name = tensor<string, []>("input_189_beta_0_to_fp16"), val = tensor<fp16, [512]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(48565504)))];
            tensor<fp16, []> input_189_epsilon_0_to_fp16 = const()[name = tensor<string, []>("input_189_epsilon_0_to_fp16"), val = tensor<fp16, []>(1.00135803e-05)];
            tensor<fp16, [1, 512, 1, 4]> input_189_cast = batch_norm(beta = input_189_beta_0_to_fp16, epsilon = input_189_epsilon_0_to_fp16, gamma = input_189_gamma_0_to_fp16, mean = input_189_mean_0_to_fp16, variance = input_189_variance_0_to_fp16, x = var_5057_cast);
            tensor<fp16, [1, 512, 1, 4]> x_445_cast = silu(x = input_189_cast);
            tensor<int32, [2]> var_5066 = const()[name = tensor<string, []>("op_5066"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_5068 = const()[name = tensor<string, []>("op_5068"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> input_191_pad_type_0 = const()[name = tensor<string, []>("input_191_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> input_191_pad_0 = const()[name = tensor<string, []>("input_191_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [512, 512, 1, 1]> op_5065_to_fp16_affine_quantized = constexpr_affine_dequantize()[axis = tensor<int32, []>(0), name = tensor<string, []>("op_5065_to_fp16_affine_quantized"), quantized_data = tensor<int8, [512, 512, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(48566592))), scale = tensor<fp16, [512]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(48829376))), zero_point = tensor<int8, [512]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(48828800)))];
            tensor<fp16, [512]> primary_encoder_encoders_5_conv_module_pointwise_conv2_bias_to_fp16 = const()[name = tensor<string, []>("primary_encoder_encoders_5_conv_module_pointwise_conv2_bias_to_fp16"), val = tensor<fp16, [512]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(48830464)))];
            tensor<fp16, [1, 512, 1, 4]> input_191_cast = conv(bias = primary_encoder_encoders_5_conv_module_pointwise_conv2_bias_to_fp16, dilations = var_5068, groups = var_4702, pad = input_191_pad_0, pad_type = input_191_pad_type_0, strides = var_5066, weight = op_5065_to_fp16_affine_quantized, x = x_445_cast);
            tensor<fp16, [1, 512, 1, 4]> x_449_cast = add(x = x_423_cast, y = input_191_cast);
            tensor<fp16, [1, 512, 1, 4]> var_5076_cast = abs(x = x_449_cast);
            tensor<fp16, []> var_5077_to_fp16 = const()[name = tensor<string, []>("op_5077_to_fp16"), val = tensor<fp16, []>(0.001953125)];
            tensor<fp16, [1, 512, 1, 4]> var_5078_cast = mul(x = var_5076_cast, y = var_5077_to_fp16);
            tensor<int32, [1]> var_5079 = const()[name = tensor<string, []>("op_5079"), val = tensor<int32, [1]>([1])];
            tensor<fp16, [1, 1, 1, 4]> scale_283_cast = reduce_sum(axes = var_5079, keep_dims = var_4701, x = var_5078_cast);
            tensor<fp16, []> scale_285_epsilon_0_to_fp16 = const()[name = tensor<string, []>("scale_285_epsilon_0_to_fp16"), val = tensor<fp16, []>(5.96046448e-08)];
            tensor<fp16, [1, 1, 1, 4]> scale_285_cast = rsqrt(epsilon = scale_285_epsilon_0_to_fp16, x = scale_283_cast);
            tensor<fp16, [1, 1, 1, 4]> scale_287_cast = mul(x = scale_285_cast, y = scale_285_cast);
            tensor<fp16, [1, 512, 1, 4]> x_451_cast = mul(x = x_449_cast, y = scale_287_cast);
            tensor<fp16, []> var_5084_to_fp16 = const()[name = tensor<string, []>("op_5084_to_fp16"), val = tensor<fp16, []>(-0.001953125)];
            tensor<fp16, [1, 512, 1, 4]> var_5085_cast = mul(x = x_451_cast, y = var_5084_to_fp16);
            tensor<int32, [1]> var_5086 = const()[name = tensor<string, []>("op_5086"), val = tensor<int32, [1]>([1])];
            tensor<fp16, [1, 1, 1, 4]> x_mean_95_cast = reduce_sum(axes = var_5086, keep_dims = var_4701, x = var_5085_cast);
            tensor<fp16, [1, 512, 1, 4]> x_zero_mean_95_cast = add(x = x_451_cast, y = x_mean_95_cast);
            tensor<fp16, []> var_5089_to_fp16 = const()[name = tensor<string, []>("op_5089_to_fp16"), val = tensor<fp16, []>(0.001953125)];
            tensor<fp16, [1, 512, 1, 4]> var_5090_cast = mul(x = x_zero_mean_95_cast, y = var_5089_to_fp16);
            tensor<fp16, [1, 512, 1, 4]> var_5091_cast = mul(x = var_5090_cast, y = x_zero_mean_95_cast);
            tensor<int32, [1]> var_5092 = const()[name = tensor<string, []>("op_5092"), val = tensor<int32, [1]>([1])];
            tensor<fp16, [1, 1, 1, 4]> x_var_95_cast = reduce_sum(axes = var_5092, keep_dims = var_4701, x = var_5091_cast);
            tensor<fp16, []> var_5094_to_fp16 = const()[name = tensor<string, []>("op_5094_to_fp16"), val = tensor<fp16, []>(1.00135803e-05)];
            tensor<fp16, [1, 1, 1, 4]> var_5095_cast = add(x = x_var_95_cast, y = var_5094_to_fp16);
            tensor<fp16, []> var_5096_epsilon_0_to_fp16 = const()[name = tensor<string, []>("op_5096_epsilon_0_to_fp16"), val = tensor<fp16, []>(5.96046448e-08)];
            tensor<fp16, [1, 1, 1, 4]> var_5096_cast = rsqrt(epsilon = var_5096_epsilon_0_to_fp16, x = var_5095_cast);
            tensor<fp16, [1, 512, 1, 4]> var_5097_cast = mul(x = x_zero_mean_95_cast, y = var_5096_cast);
            tensor<fp16, [512]> x_453_mean_0_to_fp16 = const()[name = tensor<string, []>("x_453_mean_0_to_fp16"), val = tensor<fp16, [512]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(48831552)))];
            tensor<fp16, [512]> x_453_variance_0_to_fp16 = const()[name = tensor<string, []>("x_453_variance_0_to_fp16"), val = tensor<fp16, [512]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(48832640)))];
            tensor<fp16, [512]> x_453_gamma_0_to_fp16 = const()[name = tensor<string, []>("x_453_gamma_0_to_fp16"), val = tensor<fp16, [512]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(48833728)))];
            tensor<fp16, [512]> x_453_beta_0_to_fp16 = const()[name = tensor<string, []>("x_453_beta_0_to_fp16"), val = tensor<fp16, [512]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(48834816)))];
            tensor<fp16, []> x_453_epsilon_0_to_fp16 = const()[name = tensor<string, []>("x_453_epsilon_0_to_fp16"), val = tensor<fp16, []>(1.00135803e-05)];
            tensor<fp16, [1, 512, 1, 4]> x_453_cast = batch_norm(beta = x_453_beta_0_to_fp16, epsilon = x_453_epsilon_0_to_fp16, gamma = x_453_gamma_0_to_fp16, mean = x_453_mean_0_to_fp16, variance = x_453_variance_0_to_fp16, x = var_5097_cast);
            tensor<int32, [2]> var_5108 = const()[name = tensor<string, []>("op_5108"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_5110 = const()[name = tensor<string, []>("op_5110"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> input_193_pad_type_0 = const()[name = tensor<string, []>("input_193_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> input_193_pad_0 = const()[name = tensor<string, []>("input_193_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [2048, 512, 1, 1]> op_5107_to_fp16_affine_quantized = constexpr_affine_dequantize()[axis = tensor<int32, []>(0), name = tensor<string, []>("op_5107_to_fp16_affine_quantized"), quantized_data = tensor<int8, [2048, 512, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(48835904))), scale = tensor<fp16, [2048]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(49886656))), zero_point = tensor<int8, [2048]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(49884544)))];
            tensor<fp16, [2048]> primary_encoder_encoders_5_feed_forward_w_1_bias_to_fp16 = const()[name = tensor<string, []>("primary_encoder_encoders_5_feed_forward_w_1_bias_to_fp16"), val = tensor<fp16, [2048]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(49890816)))];
            tensor<fp16, [1, 2048, 1, 4]> input_193_cast = conv(bias = primary_encoder_encoders_5_feed_forward_w_1_bias_to_fp16, dilations = var_5110, groups = var_4702, pad = input_193_pad_0, pad_type = input_193_pad_type_0, strides = var_5108, weight = op_5107_to_fp16_affine_quantized, x = x_453_cast);
            tensor<fp16, [1, 2048, 1, 4]> input_195_cast = silu(x = input_193_cast);
            tensor<int32, [2]> var_5119 = const()[name = tensor<string, []>("op_5119"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_5121 = const()[name = tensor<string, []>("op_5121"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> input_197_pad_type_0 = const()[name = tensor<string, []>("input_197_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> input_197_pad_0 = const()[name = tensor<string, []>("input_197_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [512, 2048, 1, 1]> op_5126_weight_0_to_fp16_affine_quantized = constexpr_affine_dequantize()[axis = tensor<int32, []>(0), name = tensor<string, []>("op_5126_weight_0_to_fp16_affine_quantized"), quantized_data = tensor<int8, [512, 2048, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(49894976))), scale = tensor<fp16, [512]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(50944192))), zero_point = tensor<int8, [512]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(50943616)))];
            tensor<fp16, [512]> var_5126_bias_0_to_fp16 = const()[name = tensor<string, []>("op_5126_bias_0_to_fp16"), val = tensor<fp16, [512]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(50945280)))];
            tensor<fp16, [1, 512, 1, 4]> var_5126_cast = conv(bias = var_5126_bias_0_to_fp16, dilations = var_5121, groups = var_4702, pad = input_197_pad_0, pad_type = input_197_pad_type_0, strides = var_5119, weight = op_5126_weight_0_to_fp16_affine_quantized, x = input_195_cast);
            tensor<fp16, [1, 512, 1, 4]> x_459_cast = add(x = x_449_cast, y = var_5126_cast);
            tensor<fp16, [1, 512, 1, 4]> var_5128_cast = abs(x = x_459_cast);
            tensor<fp16, []> var_5129_to_fp16 = const()[name = tensor<string, []>("op_5129_to_fp16"), val = tensor<fp16, []>(0.001953125)];
            tensor<fp16, [1, 512, 1, 4]> var_5130_cast = mul(x = var_5128_cast, y = var_5129_to_fp16);
            tensor<int32, [1]> var_5131 = const()[name = tensor<string, []>("op_5131"), val = tensor<int32, [1]>([1])];
            tensor<fp16, [1, 1, 1, 4]> scale_289_cast = reduce_sum(axes = var_5131, keep_dims = var_4701, x = var_5130_cast);
            tensor<fp16, []> scale_291_epsilon_0_to_fp16 = const()[name = tensor<string, []>("scale_291_epsilon_0_to_fp16"), val = tensor<fp16, []>(5.96046448e-08)];
            tensor<fp16, [1, 1, 1, 4]> scale_291_cast = rsqrt(epsilon = scale_291_epsilon_0_to_fp16, x = scale_289_cast);
            tensor<fp16, [1, 1, 1, 4]> scale_293_cast = mul(x = scale_291_cast, y = scale_291_cast);
            tensor<fp16, [1, 512, 1, 4]> x_461_cast = mul(x = x_459_cast, y = scale_293_cast);
            tensor<fp16, []> var_5136_to_fp16 = const()[name = tensor<string, []>("op_5136_to_fp16"), val = tensor<fp16, []>(-0.001953125)];
            tensor<fp16, [1, 512, 1, 4]> var_5137_cast = mul(x = x_461_cast, y = var_5136_to_fp16);
            tensor<int32, [1]> var_5138 = const()[name = tensor<string, []>("op_5138"), val = tensor<int32, [1]>([1])];
            tensor<fp16, [1, 1, 1, 4]> x_mean_97_cast = reduce_sum(axes = var_5138, keep_dims = var_4701, x = var_5137_cast);
            tensor<fp16, [1, 512, 1, 4]> x_zero_mean_97_cast = add(x = x_461_cast, y = x_mean_97_cast);
            tensor<fp16, []> var_5141_to_fp16 = const()[name = tensor<string, []>("op_5141_to_fp16"), val = tensor<fp16, []>(0.001953125)];
            tensor<fp16, [1, 512, 1, 4]> var_5142_cast = mul(x = x_zero_mean_97_cast, y = var_5141_to_fp16);
            tensor<fp16, [1, 512, 1, 4]> var_5143_cast = mul(x = var_5142_cast, y = x_zero_mean_97_cast);
            tensor<int32, [1]> var_5144 = const()[name = tensor<string, []>("op_5144"), val = tensor<int32, [1]>([1])];
            tensor<fp16, [1, 1, 1, 4]> x_var_97_cast = reduce_sum(axes = var_5144, keep_dims = var_4701, x = var_5143_cast);
            tensor<fp16, []> var_5146_to_fp16 = const()[name = tensor<string, []>("op_5146_to_fp16"), val = tensor<fp16, []>(1.00135803e-05)];
            tensor<fp16, [1, 1, 1, 4]> var_5147_cast = add(x = x_var_97_cast, y = var_5146_to_fp16);
            tensor<fp16, []> var_5148_epsilon_0_to_fp16 = const()[name = tensor<string, []>("op_5148_epsilon_0_to_fp16"), val = tensor<fp16, []>(5.96046448e-08)];
            tensor<fp16, [1, 1, 1, 4]> var_5148_cast = rsqrt(epsilon = var_5148_epsilon_0_to_fp16, x = var_5147_cast);
            tensor<fp16, [1, 512, 1, 4]> var_5149_cast = mul(x = x_zero_mean_97_cast, y = var_5148_cast);
            tensor<fp16, [512]> x_463_mean_0_to_fp16 = const()[name = tensor<string, []>("x_463_mean_0_to_fp16"), val = tensor<fp16, [512]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(50946368)))];
            tensor<fp16, [512]> x_463_variance_0_to_fp16 = const()[name = tensor<string, []>("x_463_variance_0_to_fp16"), val = tensor<fp16, [512]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(50947456)))];
            tensor<fp16, [512]> x_463_gamma_0_to_fp16 = const()[name = tensor<string, []>("x_463_gamma_0_to_fp16"), val = tensor<fp16, [512]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(50948544)))];
            tensor<fp16, [512]> x_463_beta_0_to_fp16 = const()[name = tensor<string, []>("x_463_beta_0_to_fp16"), val = tensor<fp16, [512]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(50949632)))];
            tensor<fp16, []> x_463_epsilon_0_to_fp16 = const()[name = tensor<string, []>("x_463_epsilon_0_to_fp16"), val = tensor<fp16, []>(1.00135803e-05)];
            tensor<fp16, [1, 512, 1, 4]> x_463_cast = batch_norm(beta = x_463_beta_0_to_fp16, epsilon = x_463_epsilon_0_to_fp16, gamma = x_463_gamma_0_to_fp16, mean = x_463_mean_0_to_fp16, variance = x_463_variance_0_to_fp16, x = var_5149_cast);
            tensor<int32, []> var_5164 = const()[name = tensor<string, []>("op_5164"), val = tensor<int32, []>(512)];
            tensor<int32, []> var_5171 = const()[name = tensor<string, []>("op_5171"), val = tensor<int32, []>(2)];
            tensor<int32, []> var_5174 = const()[name = tensor<string, []>("op_5174"), val = tensor<int32, []>(-1)];
            tensor<bool, []> var_5176 = const()[name = tensor<string, []>("op_5176"), val = tensor<bool, []>(true)];
            tensor<int32, []> var_5177 = const()[name = tensor<string, []>("op_5177"), val = tensor<int32, []>(1)];
            tensor<fp16, [1, 512, 1, 4]> var_5224_cast = abs(x = x_463_cast);
            tensor<fp16, []> var_5225_to_fp16 = const()[name = tensor<string, []>("op_5225_to_fp16"), val = tensor<fp16, []>(0.001953125)];
            tensor<fp16, [1, 512, 1, 4]> var_5226_cast = mul(x = var_5224_cast, y = var_5225_to_fp16);
            tensor<int32, [1]> var_5227 = const()[name = tensor<string, []>("op_5227"), val = tensor<int32, [1]>([1])];
            tensor<fp16, [1, 1, 1, 4]> scale_295_cast = reduce_sum(axes = var_5227, keep_dims = var_5176, x = var_5226_cast);
            tensor<fp16, []> scale_297_epsilon_0_to_fp16 = const()[name = tensor<string, []>("scale_297_epsilon_0_to_fp16"), val = tensor<fp16, []>(5.96046448e-08)];
            tensor<fp16, [1, 1, 1, 4]> scale_297_cast = rsqrt(epsilon = scale_297_epsilon_0_to_fp16, x = scale_295_cast);
            tensor<fp16, [1, 1, 1, 4]> scale_299_cast = mul(x = scale_297_cast, y = scale_297_cast);
            tensor<fp16, [1, 512, 1, 4]> x_465_cast = mul(x = x_463_cast, y = scale_299_cast);
            tensor<fp16, []> var_5232_to_fp16 = const()[name = tensor<string, []>("op_5232_to_fp16"), val = tensor<fp16, []>(-0.001953125)];
            tensor<fp16, [1, 512, 1, 4]> var_5233_cast = mul(x = x_465_cast, y = var_5232_to_fp16);
            tensor<int32, [1]> var_5234 = const()[name = tensor<string, []>("op_5234"), val = tensor<int32, [1]>([1])];
            tensor<fp16, [1, 1, 1, 4]> x_mean_99_cast = reduce_sum(axes = var_5234, keep_dims = var_5176, x = var_5233_cast);
            tensor<fp16, [1, 512, 1, 4]> x_zero_mean_99_cast = add(x = x_465_cast, y = x_mean_99_cast);
            tensor<fp16, []> var_5237_to_fp16 = const()[name = tensor<string, []>("op_5237_to_fp16"), val = tensor<fp16, []>(0.001953125)];
            tensor<fp16, [1, 512, 1, 4]> var_5238_cast = mul(x = x_zero_mean_99_cast, y = var_5237_to_fp16);
            tensor<fp16, [1, 512, 1, 4]> var_5239_cast = mul(x = var_5238_cast, y = x_zero_mean_99_cast);
            tensor<int32, [1]> var_5240 = const()[name = tensor<string, []>("op_5240"), val = tensor<int32, [1]>([1])];
            tensor<fp16, [1, 1, 1, 4]> x_var_99_cast = reduce_sum(axes = var_5240, keep_dims = var_5176, x = var_5239_cast);
            tensor<fp16, []> var_5242_to_fp16 = const()[name = tensor<string, []>("op_5242_to_fp16"), val = tensor<fp16, []>(1.00135803e-05)];
            tensor<fp16, [1, 1, 1, 4]> var_5243_cast = add(x = x_var_99_cast, y = var_5242_to_fp16);
            tensor<fp16, []> var_5244_epsilon_0_to_fp16 = const()[name = tensor<string, []>("op_5244_epsilon_0_to_fp16"), val = tensor<fp16, []>(5.96046448e-08)];
            tensor<fp16, [1, 1, 1, 4]> var_5244_cast = rsqrt(epsilon = var_5244_epsilon_0_to_fp16, x = var_5243_cast);
            tensor<fp16, [1, 512, 1, 4]> var_5245_cast = mul(x = x_zero_mean_99_cast, y = var_5244_cast);
            tensor<fp16, [512]> x_467_mean_0_to_fp16 = const()[name = tensor<string, []>("x_467_mean_0_to_fp16"), val = tensor<fp16, [512]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(50950720)))];
            tensor<fp16, [512]> x_467_variance_0_to_fp16 = const()[name = tensor<string, []>("x_467_variance_0_to_fp16"), val = tensor<fp16, [512]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(50951808)))];
            tensor<fp16, [512]> x_467_gamma_0_to_fp16 = const()[name = tensor<string, []>("x_467_gamma_0_to_fp16"), val = tensor<fp16, [512]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(50952896)))];
            tensor<fp16, [512]> x_467_beta_0_to_fp16 = const()[name = tensor<string, []>("x_467_beta_0_to_fp16"), val = tensor<fp16, [512]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(50953984)))];
            tensor<fp16, []> x_467_epsilon_0_to_fp16 = const()[name = tensor<string, []>("x_467_epsilon_0_to_fp16"), val = tensor<fp16, []>(1.00135803e-05)];
            tensor<fp16, [1, 512, 1, 4]> x_467_cast = batch_norm(beta = x_467_beta_0_to_fp16, epsilon = x_467_epsilon_0_to_fp16, gamma = x_467_gamma_0_to_fp16, mean = x_467_mean_0_to_fp16, variance = x_467_variance_0_to_fp16, x = var_5245_cast);
            tensor<int32, [2]> var_5256 = const()[name = tensor<string, []>("op_5256"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_5258 = const()[name = tensor<string, []>("op_5258"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> input_199_pad_type_0 = const()[name = tensor<string, []>("input_199_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> input_199_pad_0 = const()[name = tensor<string, []>("input_199_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [2048, 512, 1, 1]> op_5255_to_fp16_affine_quantized = constexpr_affine_dequantize()[axis = tensor<int32, []>(0), name = tensor<string, []>("op_5255_to_fp16_affine_quantized"), quantized_data = tensor<int8, [2048, 512, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(50955072))), scale = tensor<fp16, [2048]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(52005824))), zero_point = tensor<int8, [2048]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(52003712)))];
            tensor<fp16, [2048]> primary_encoder_encoders_6_feed_forward_macaron_w_1_bias_to_fp16 = const()[name = tensor<string, []>("primary_encoder_encoders_6_feed_forward_macaron_w_1_bias_to_fp16"), val = tensor<fp16, [2048]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(52009984)))];
            tensor<fp16, [1, 2048, 1, 4]> input_199_cast = conv(bias = primary_encoder_encoders_6_feed_forward_macaron_w_1_bias_to_fp16, dilations = var_5258, groups = var_5177, pad = input_199_pad_0, pad_type = input_199_pad_type_0, strides = var_5256, weight = op_5255_to_fp16_affine_quantized, x = x_467_cast);
            tensor<fp16, [1, 2048, 1, 4]> input_201_cast = silu(x = input_199_cast);
            tensor<int32, [2]> var_5267 = const()[name = tensor<string, []>("op_5267"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_5269 = const()[name = tensor<string, []>("op_5269"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> input_203_pad_type_0 = const()[name = tensor<string, []>("input_203_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> input_203_pad_0 = const()[name = tensor<string, []>("input_203_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [512, 2048, 1, 1]> op_5274_weight_0_to_fp16_affine_quantized = constexpr_affine_dequantize()[axis = tensor<int32, []>(0), name = tensor<string, []>("op_5274_weight_0_to_fp16_affine_quantized"), quantized_data = tensor<int8, [512, 2048, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(52014144))), scale = tensor<fp16, [512]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(53063360))), zero_point = tensor<int8, [512]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(53062784)))];
            tensor<fp16, [512]> var_5274_bias_0_to_fp16 = const()[name = tensor<string, []>("op_5274_bias_0_to_fp16"), val = tensor<fp16, [512]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(53064448)))];
            tensor<fp16, [1, 512, 1, 4]> var_5274_cast = conv(bias = var_5274_bias_0_to_fp16, dilations = var_5269, groups = var_5177, pad = input_203_pad_0, pad_type = input_203_pad_type_0, strides = var_5267, weight = op_5274_weight_0_to_fp16_affine_quantized, x = input_201_cast);
            tensor<fp16, [1, 512, 1, 4]> x_473_cast = add(x = x_463_cast, y = var_5274_cast);
            tensor<fp16, [1, 512, 1, 4]> var_5276_cast = abs(x = x_473_cast);
            tensor<fp16, []> var_5277_to_fp16 = const()[name = tensor<string, []>("op_5277_to_fp16"), val = tensor<fp16, []>(0.001953125)];
            tensor<fp16, [1, 512, 1, 4]> var_5278_cast = mul(x = var_5276_cast, y = var_5277_to_fp16);
            tensor<int32, [1]> var_5279 = const()[name = tensor<string, []>("op_5279"), val = tensor<int32, [1]>([1])];
            tensor<fp16, [1, 1, 1, 4]> scale_301_cast = reduce_sum(axes = var_5279, keep_dims = var_5176, x = var_5278_cast);
            tensor<fp16, []> scale_303_epsilon_0_to_fp16 = const()[name = tensor<string, []>("scale_303_epsilon_0_to_fp16"), val = tensor<fp16, []>(5.96046448e-08)];
            tensor<fp16, [1, 1, 1, 4]> scale_303_cast = rsqrt(epsilon = scale_303_epsilon_0_to_fp16, x = scale_301_cast);
            tensor<fp16, [1, 1, 1, 4]> scale_305_cast = mul(x = scale_303_cast, y = scale_303_cast);
            tensor<fp16, [1, 512, 1, 4]> x_475_cast = mul(x = x_473_cast, y = scale_305_cast);
            tensor<fp16, []> var_5284_to_fp16 = const()[name = tensor<string, []>("op_5284_to_fp16"), val = tensor<fp16, []>(-0.001953125)];
            tensor<fp16, [1, 512, 1, 4]> var_5285_cast = mul(x = x_475_cast, y = var_5284_to_fp16);
            tensor<int32, [1]> var_5286 = const()[name = tensor<string, []>("op_5286"), val = tensor<int32, [1]>([1])];
            tensor<fp16, [1, 1, 1, 4]> x_mean_101_cast = reduce_sum(axes = var_5286, keep_dims = var_5176, x = var_5285_cast);
            tensor<fp16, [1, 512, 1, 4]> x_zero_mean_101_cast = add(x = x_475_cast, y = x_mean_101_cast);
            tensor<fp16, []> var_5289_to_fp16 = const()[name = tensor<string, []>("op_5289_to_fp16"), val = tensor<fp16, []>(0.001953125)];
            tensor<fp16, [1, 512, 1, 4]> var_5290_cast = mul(x = x_zero_mean_101_cast, y = var_5289_to_fp16);
            tensor<fp16, [1, 512, 1, 4]> var_5291_cast = mul(x = var_5290_cast, y = x_zero_mean_101_cast);
            tensor<int32, [1]> var_5292 = const()[name = tensor<string, []>("op_5292"), val = tensor<int32, [1]>([1])];
            tensor<fp16, [1, 1, 1, 4]> x_var_101_cast = reduce_sum(axes = var_5292, keep_dims = var_5176, x = var_5291_cast);
            tensor<fp16, []> var_5294_to_fp16 = const()[name = tensor<string, []>("op_5294_to_fp16"), val = tensor<fp16, []>(1.00135803e-05)];
            tensor<fp16, [1, 1, 1, 4]> var_5295_cast = add(x = x_var_101_cast, y = var_5294_to_fp16);
            tensor<fp16, []> var_5296_epsilon_0_to_fp16 = const()[name = tensor<string, []>("op_5296_epsilon_0_to_fp16"), val = tensor<fp16, []>(5.96046448e-08)];
            tensor<fp16, [1, 1, 1, 4]> var_5296_cast = rsqrt(epsilon = var_5296_epsilon_0_to_fp16, x = var_5295_cast);
            tensor<fp16, [1, 512, 1, 4]> var_5297_cast = mul(x = x_zero_mean_101_cast, y = var_5296_cast);
            tensor<fp16, [512]> x_477_mean_0_to_fp16 = const()[name = tensor<string, []>("x_477_mean_0_to_fp16"), val = tensor<fp16, [512]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(53065536)))];
            tensor<fp16, [512]> x_477_variance_0_to_fp16 = const()[name = tensor<string, []>("x_477_variance_0_to_fp16"), val = tensor<fp16, [512]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(53066624)))];
            tensor<fp16, [512]> x_477_gamma_0_to_fp16 = const()[name = tensor<string, []>("x_477_gamma_0_to_fp16"), val = tensor<fp16, [512]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(53067712)))];
            tensor<fp16, [512]> x_477_beta_0_to_fp16 = const()[name = tensor<string, []>("x_477_beta_0_to_fp16"), val = tensor<fp16, [512]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(53068800)))];
            tensor<fp16, []> x_477_epsilon_0_to_fp16 = const()[name = tensor<string, []>("x_477_epsilon_0_to_fp16"), val = tensor<fp16, []>(1.00135803e-05)];
            tensor<fp16, [1, 512, 1, 4]> x_477_cast = batch_norm(beta = x_477_beta_0_to_fp16, epsilon = x_477_epsilon_0_to_fp16, gamma = x_477_gamma_0_to_fp16, mean = x_477_mean_0_to_fp16, variance = x_477_variance_0_to_fp16, x = var_5297_cast);
            tensor<int32, [2]> var_5328 = const()[name = tensor<string, []>("op_5328"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_5330 = const()[name = tensor<string, []>("op_5330"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> y_23_pad_type_0 = const()[name = tensor<string, []>("y_23_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> y_23_pad_0 = const()[name = tensor<string, []>("y_23_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [512, 512, 1, 1]> op_5334_weight_0_to_fp16_affine_quantized = constexpr_affine_dequantize()[axis = tensor<int32, []>(0), name = tensor<string, []>("op_5334_weight_0_to_fp16_affine_quantized"), quantized_data = tensor<int8, [512, 512, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(53069888))), scale = tensor<fp16, [512]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(53332672))), zero_point = tensor<int8, [512]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(53332096)))];
            tensor<fp16, [512]> var_5334_bias_0_to_fp16 = const()[name = tensor<string, []>("op_5334_bias_0_to_fp16"), val = tensor<fp16, [512]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(53333760)))];
            tensor<fp16, [1, 512, 1, 4]> var_5334_cast = conv(bias = var_5334_bias_0_to_fp16, dilations = var_5330, groups = var_5177, pad = y_23_pad_0, pad_type = y_23_pad_type_0, strides = var_5328, weight = op_5334_weight_0_to_fp16_affine_quantized, x = x_477_cast);
            tensor<int32, [8]> tile_36 = const()[name = tensor<string, []>("tile_36"), val = tensor<int32, [8]>([64, 64, 64, 64, 64, 64, 64, 64])];
            tensor<int32, []> var_5335_axis_0 = const()[name = tensor<string, []>("op_5335_axis_0"), val = tensor<int32, []>(1)];
            tensor<fp16, [1, 64, 1, 4]> var_5335_cast_0, tensor<fp16, [1, 64, 1, 4]> var_5335_cast_1, tensor<fp16, [1, 64, 1, 4]> var_5335_cast_2, tensor<fp16, [1, 64, 1, 4]> var_5335_cast_3, tensor<fp16, [1, 64, 1, 4]> var_5335_cast_4, tensor<fp16, [1, 64, 1, 4]> var_5335_cast_5, tensor<fp16, [1, 64, 1, 4]> var_5335_cast_6, tensor<fp16, [1, 64, 1, 4]> var_5335_cast_7 = split(axis = var_5335_axis_0, split_sizes = tile_36, x = var_5334_cast);
            tensor<int32, [2]> var_5348 = const()[name = tensor<string, []>("op_5348"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_5350 = const()[name = tensor<string, []>("op_5350"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> var_5352_pad_type_0 = const()[name = tensor<string, []>("op_5352_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> var_5352_pad_0 = const()[name = tensor<string, []>("op_5352_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [512, 512, 1, 1]> op_5347_to_fp16_affine_quantized = constexpr_affine_dequantize()[axis = tensor<int32, []>(0), name = tensor<string, []>("op_5347_to_fp16_affine_quantized"), quantized_data = tensor<int8, [512, 512, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(53334848))), scale = tensor<fp16, [512]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(53597632))), zero_point = tensor<int8, [512]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(53597056)))];
            tensor<fp16, [512]> primary_encoder_encoders_6_self_attn_linear_v_bias_to_fp16 = const()[name = tensor<string, []>("primary_encoder_encoders_6_self_attn_linear_v_bias_to_fp16"), val = tensor<fp16, [512]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(53598720)))];
            tensor<fp16, [1, 512, 1, 4]> var_5352_cast = conv(bias = primary_encoder_encoders_6_self_attn_linear_v_bias_to_fp16, dilations = var_5350, groups = var_5177, pad = var_5352_pad_0, pad_type = var_5352_pad_type_0, strides = var_5348, weight = op_5347_to_fp16_affine_quantized, x = x_477_cast);
            tensor<int32, [8]> tile_37 = const()[name = tensor<string, []>("tile_37"), val = tensor<int32, [8]>([64, 64, 64, 64, 64, 64, 64, 64])];
            tensor<int32, []> var_5353_axis_0 = const()[name = tensor<string, []>("op_5353_axis_0"), val = tensor<int32, []>(1)];
            tensor<fp16, [1, 64, 1, 4]> var_5353_cast_0, tensor<fp16, [1, 64, 1, 4]> var_5353_cast_1, tensor<fp16, [1, 64, 1, 4]> var_5353_cast_2, tensor<fp16, [1, 64, 1, 4]> var_5353_cast_3, tensor<fp16, [1, 64, 1, 4]> var_5353_cast_4, tensor<fp16, [1, 64, 1, 4]> var_5353_cast_5, tensor<fp16, [1, 64, 1, 4]> var_5353_cast_6, tensor<fp16, [1, 64, 1, 4]> var_5353_cast_7 = split(axis = var_5353_axis_0, split_sizes = tile_37, x = var_5352_cast);
            tensor<int32, [4]> var_5362_perm_0 = const()[name = tensor<string, []>("op_5362_perm_0"), val = tensor<int32, [4]>([0, 3, 2, 1])];
            tensor<string, []> var_5369_equation_0 = const()[name = tensor<string, []>("op_5369_equation_0"), val = tensor<string, []>("bnhd,bdhm->bnhm")];
            tensor<fp16, [1, 512, 1, 512]> op_5366_to_fp16_affine_quantized = constexpr_affine_dequantize()[axis = tensor<int32, []>(0), name = tensor<string, []>("op_5366_to_fp16_affine_quantized"), quantized_data = tensor<int8, [1, 512, 1, 512]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(53599808))), scale = tensor<fp16, []>(0.0534973145), zero_point = tensor<int8, []>(0)];
            tensor<fp16, [1, 4, 1, 512]> transpose_18 = transpose(perm = var_5362_perm_0, x = x_477_cast);
            tensor<fp16, [1, 4, 1, 512]> var_5369_cast = einsum(equation = var_5369_equation_0, values = (transpose_18, op_5366_to_fp16_affine_quantized));
            tensor<fp16, [512]> primary_encoder_encoders_6_self_attn_linear_k_bias_to_fp16 = const()[name = tensor<string, []>("primary_encoder_encoders_6_self_attn_linear_k_bias_to_fp16"), val = tensor<fp16, [512]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(53862016)))];
            tensor<fp16, [1, 4, 1, 512]> var_5370_cast = add(x = var_5369_cast, y = primary_encoder_encoders_6_self_attn_linear_k_bias_to_fp16);
            tensor<int32, [8]> tile_38 = const()[name = tensor<string, []>("tile_38"), val = tensor<int32, [8]>([64, 64, 64, 64, 64, 64, 64, 64])];
            tensor<int32, []> var_5371_axis_0 = const()[name = tensor<string, []>("op_5371_axis_0"), val = tensor<int32, []>(-1)];
            tensor<fp16, [1, 4, 1, 64]> var_5371_cast_0, tensor<fp16, [1, 4, 1, 64]> var_5371_cast_1, tensor<fp16, [1, 4, 1, 64]> var_5371_cast_2, tensor<fp16, [1, 4, 1, 64]> var_5371_cast_3, tensor<fp16, [1, 4, 1, 64]> var_5371_cast_4, tensor<fp16, [1, 4, 1, 64]> var_5371_cast_5, tensor<fp16, [1, 4, 1, 64]> var_5371_cast_6, tensor<fp16, [1, 4, 1, 64]> var_5371_cast_7 = split(axis = var_5371_axis_0, split_sizes = tile_38, x = var_5370_cast);
            tensor<int32, [8]> tile_39 = const()[name = tensor<string, []>("tile_39"), val = tensor<int32, [8]>([1, 1, 1, 1, 1, 1, 1, 1])];
            tensor<int32, []> var_5381_axis_0 = const()[name = tensor<string, []>("op_5381_axis_0"), val = tensor<int32, []>(2)];
            tensor<fp16, [1, 128, 1, 64]> var_5381_cast_0, tensor<fp16, [1, 128, 1, 64]> var_5381_cast_1, tensor<fp16, [1, 128, 1, 64]> var_5381_cast_2, tensor<fp16, [1, 128, 1, 64]> var_5381_cast_3, tensor<fp16, [1, 128, 1, 64]> var_5381_cast_4, tensor<fp16, [1, 128, 1, 64]> var_5381_cast_5, tensor<fp16, [1, 128, 1, 64]> var_5381_cast_6, tensor<fp16, [1, 128, 1, 64]> var_5381_cast_7 = split(axis = var_5381_axis_0, split_sizes = tile_39, x = var_316_cast_1);
            tensor<int32, [8]> tile_40 = const()[name = tensor<string, []>("tile_40"), val = tensor<int32, [8]>([1, 1, 1, 1, 1, 1, 1, 1])];
            tensor<int32, []> var_5390_axis_0 = const()[name = tensor<string, []>("op_5390_axis_0"), val = tensor<int32, []>(2)];
            tensor<fp16, [1, 64, 1, 128]> var_5390_cast_0, tensor<fp16, [1, 64, 1, 128]> var_5390_cast_1, tensor<fp16, [1, 64, 1, 128]> var_5390_cast_2, tensor<fp16, [1, 64, 1, 128]> var_5390_cast_3, tensor<fp16, [1, 64, 1, 128]> var_5390_cast_4, tensor<fp16, [1, 64, 1, 128]> var_5390_cast_5, tensor<fp16, [1, 64, 1, 128]> var_5390_cast_6, tensor<fp16, [1, 64, 1, 128]> var_5390_cast_7 = split(axis = var_5390_axis_0, split_sizes = tile_40, x = var_321_cast_6);
            tensor<bool, []> var_5400_interleave_0 = const()[name = tensor<string, []>("op_5400_interleave_0"), val = tensor<bool, []>(false)];
            tensor<fp16, [1, 132, 1, 64]> var_5400_cast = concat(axis = var_5177, interleave = var_5400_interleave_0, values = (var_5381_cast_0, var_5371_cast_0));
            tensor<int32, [4]> var_5402_begin_0 = const()[name = tensor<string, []>("op_5402_begin_0"), val = tensor<int32, [4]>([0, 4, 0, 0])];
            tensor<int32, [4]> var_5402_end_0 = const()[name = tensor<string, []>("op_5402_end_0"), val = tensor<int32, [4]>([1, 132, 1, 64])];
            tensor<bool, [4]> var_5402_end_mask_0 = const()[name = tensor<string, []>("op_5402_end_mask_0"), val = tensor<bool, [4]>([true, true, true, true])];
            tensor<fp16, [1, 128, 1, 64]> var_5402_cast = slice_by_index(begin = var_5402_begin_0, end = var_5402_end_0, end_mask = var_5402_end_mask_0, x = var_5400_cast);
            tensor<bool, []> var_5406_interleave_0 = const()[name = tensor<string, []>("op_5406_interleave_0"), val = tensor<bool, []>(false)];
            tensor<fp16, [1, 132, 1, 64]> var_5406_cast = concat(axis = var_5177, interleave = var_5406_interleave_0, values = (var_5381_cast_1, var_5371_cast_1));
            tensor<int32, [4]> var_5408_begin_0 = const()[name = tensor<string, []>("op_5408_begin_0"), val = tensor<int32, [4]>([0, 4, 0, 0])];
            tensor<int32, [4]> var_5408_end_0 = const()[name = tensor<string, []>("op_5408_end_0"), val = tensor<int32, [4]>([1, 132, 1, 64])];
            tensor<bool, [4]> var_5408_end_mask_0 = const()[name = tensor<string, []>("op_5408_end_mask_0"), val = tensor<bool, [4]>([true, true, true, true])];
            tensor<fp16, [1, 128, 1, 64]> var_5408_cast = slice_by_index(begin = var_5408_begin_0, end = var_5408_end_0, end_mask = var_5408_end_mask_0, x = var_5406_cast);
            tensor<bool, []> var_5412_interleave_0 = const()[name = tensor<string, []>("op_5412_interleave_0"), val = tensor<bool, []>(false)];
            tensor<fp16, [1, 132, 1, 64]> var_5412_cast = concat(axis = var_5177, interleave = var_5412_interleave_0, values = (var_5381_cast_2, var_5371_cast_2));
            tensor<int32, [4]> var_5414_begin_0 = const()[name = tensor<string, []>("op_5414_begin_0"), val = tensor<int32, [4]>([0, 4, 0, 0])];
            tensor<int32, [4]> var_5414_end_0 = const()[name = tensor<string, []>("op_5414_end_0"), val = tensor<int32, [4]>([1, 132, 1, 64])];
            tensor<bool, [4]> var_5414_end_mask_0 = const()[name = tensor<string, []>("op_5414_end_mask_0"), val = tensor<bool, [4]>([true, true, true, true])];
            tensor<fp16, [1, 128, 1, 64]> var_5414_cast = slice_by_index(begin = var_5414_begin_0, end = var_5414_end_0, end_mask = var_5414_end_mask_0, x = var_5412_cast);
            tensor<bool, []> var_5418_interleave_0 = const()[name = tensor<string, []>("op_5418_interleave_0"), val = tensor<bool, []>(false)];
            tensor<fp16, [1, 132, 1, 64]> var_5418_cast = concat(axis = var_5177, interleave = var_5418_interleave_0, values = (var_5381_cast_3, var_5371_cast_3));
            tensor<int32, [4]> var_5420_begin_0 = const()[name = tensor<string, []>("op_5420_begin_0"), val = tensor<int32, [4]>([0, 4, 0, 0])];
            tensor<int32, [4]> var_5420_end_0 = const()[name = tensor<string, []>("op_5420_end_0"), val = tensor<int32, [4]>([1, 132, 1, 64])];
            tensor<bool, [4]> var_5420_end_mask_0 = const()[name = tensor<string, []>("op_5420_end_mask_0"), val = tensor<bool, [4]>([true, true, true, true])];
            tensor<fp16, [1, 128, 1, 64]> var_5420_cast = slice_by_index(begin = var_5420_begin_0, end = var_5420_end_0, end_mask = var_5420_end_mask_0, x = var_5418_cast);
            tensor<bool, []> var_5424_interleave_0 = const()[name = tensor<string, []>("op_5424_interleave_0"), val = tensor<bool, []>(false)];
            tensor<fp16, [1, 132, 1, 64]> var_5424_cast = concat(axis = var_5177, interleave = var_5424_interleave_0, values = (var_5381_cast_4, var_5371_cast_4));
            tensor<int32, [4]> var_5426_begin_0 = const()[name = tensor<string, []>("op_5426_begin_0"), val = tensor<int32, [4]>([0, 4, 0, 0])];
            tensor<int32, [4]> var_5426_end_0 = const()[name = tensor<string, []>("op_5426_end_0"), val = tensor<int32, [4]>([1, 132, 1, 64])];
            tensor<bool, [4]> var_5426_end_mask_0 = const()[name = tensor<string, []>("op_5426_end_mask_0"), val = tensor<bool, [4]>([true, true, true, true])];
            tensor<fp16, [1, 128, 1, 64]> var_5426_cast = slice_by_index(begin = var_5426_begin_0, end = var_5426_end_0, end_mask = var_5426_end_mask_0, x = var_5424_cast);
            tensor<bool, []> var_5430_interleave_0 = const()[name = tensor<string, []>("op_5430_interleave_0"), val = tensor<bool, []>(false)];
            tensor<fp16, [1, 132, 1, 64]> var_5430_cast = concat(axis = var_5177, interleave = var_5430_interleave_0, values = (var_5381_cast_5, var_5371_cast_5));
            tensor<int32, [4]> var_5432_begin_0 = const()[name = tensor<string, []>("op_5432_begin_0"), val = tensor<int32, [4]>([0, 4, 0, 0])];
            tensor<int32, [4]> var_5432_end_0 = const()[name = tensor<string, []>("op_5432_end_0"), val = tensor<int32, [4]>([1, 132, 1, 64])];
            tensor<bool, [4]> var_5432_end_mask_0 = const()[name = tensor<string, []>("op_5432_end_mask_0"), val = tensor<bool, [4]>([true, true, true, true])];
            tensor<fp16, [1, 128, 1, 64]> var_5432_cast = slice_by_index(begin = var_5432_begin_0, end = var_5432_end_0, end_mask = var_5432_end_mask_0, x = var_5430_cast);
            tensor<bool, []> var_5436_interleave_0 = const()[name = tensor<string, []>("op_5436_interleave_0"), val = tensor<bool, []>(false)];
            tensor<fp16, [1, 132, 1, 64]> var_5436_cast = concat(axis = var_5177, interleave = var_5436_interleave_0, values = (var_5381_cast_6, var_5371_cast_6));
            tensor<int32, [4]> var_5438_begin_0 = const()[name = tensor<string, []>("op_5438_begin_0"), val = tensor<int32, [4]>([0, 4, 0, 0])];
            tensor<int32, [4]> var_5438_end_0 = const()[name = tensor<string, []>("op_5438_end_0"), val = tensor<int32, [4]>([1, 132, 1, 64])];
            tensor<bool, [4]> var_5438_end_mask_0 = const()[name = tensor<string, []>("op_5438_end_mask_0"), val = tensor<bool, [4]>([true, true, true, true])];
            tensor<fp16, [1, 128, 1, 64]> var_5438_cast = slice_by_index(begin = var_5438_begin_0, end = var_5438_end_0, end_mask = var_5438_end_mask_0, x = var_5436_cast);
            tensor<bool, []> var_5442_interleave_0 = const()[name = tensor<string, []>("op_5442_interleave_0"), val = tensor<bool, []>(false)];
            tensor<fp16, [1, 132, 1, 64]> var_5442_cast = concat(axis = var_5177, interleave = var_5442_interleave_0, values = (var_5381_cast_7, var_5371_cast_7));
            tensor<int32, [4]> var_5444_begin_0 = const()[name = tensor<string, []>("op_5444_begin_0"), val = tensor<int32, [4]>([0, 4, 0, 0])];
            tensor<int32, [4]> var_5444_end_0 = const()[name = tensor<string, []>("op_5444_end_0"), val = tensor<int32, [4]>([1, 132, 1, 64])];
            tensor<bool, [4]> var_5444_end_mask_0 = const()[name = tensor<string, []>("op_5444_end_mask_0"), val = tensor<bool, [4]>([true, true, true, true])];
            tensor<fp16, [1, 128, 1, 64]> var_5444_cast = slice_by_index(begin = var_5444_begin_0, end = var_5444_end_0, end_mask = var_5444_end_mask_0, x = var_5442_cast);
            tensor<bool, []> var_5448_interleave_0 = const()[name = tensor<string, []>("op_5448_interleave_0"), val = tensor<bool, []>(false)];
            tensor<fp16, [1, 64, 1, 132]> var_5448_cast = concat(axis = var_5174, interleave = var_5448_interleave_0, values = (var_5390_cast_0, var_5353_cast_0));
            tensor<int32, [4]> var_5452_begin_0 = const()[name = tensor<string, []>("op_5452_begin_0"), val = tensor<int32, [4]>([0, 0, 0, 4])];
            tensor<int32, [4]> var_5452_end_0 = const()[name = tensor<string, []>("op_5452_end_0"), val = tensor<int32, [4]>([1, 64, 1, 132])];
            tensor<bool, [4]> var_5452_end_mask_0 = const()[name = tensor<string, []>("op_5452_end_mask_0"), val = tensor<bool, [4]>([true, true, true, true])];
            tensor<fp16, [1, 64, 1, 128]> var_5452_cast = slice_by_index(begin = var_5452_begin_0, end = var_5452_end_0, end_mask = var_5452_end_mask_0, x = var_5448_cast);
            tensor<bool, []> var_5454_interleave_0 = const()[name = tensor<string, []>("op_5454_interleave_0"), val = tensor<bool, []>(false)];
            tensor<fp16, [1, 64, 1, 132]> var_5454_cast = concat(axis = var_5174, interleave = var_5454_interleave_0, values = (var_5390_cast_1, var_5353_cast_1));
            tensor<int32, [4]> var_5458_begin_0 = const()[name = tensor<string, []>("op_5458_begin_0"), val = tensor<int32, [4]>([0, 0, 0, 4])];
            tensor<int32, [4]> var_5458_end_0 = const()[name = tensor<string, []>("op_5458_end_0"), val = tensor<int32, [4]>([1, 64, 1, 132])];
            tensor<bool, [4]> var_5458_end_mask_0 = const()[name = tensor<string, []>("op_5458_end_mask_0"), val = tensor<bool, [4]>([true, true, true, true])];
            tensor<fp16, [1, 64, 1, 128]> var_5458_cast = slice_by_index(begin = var_5458_begin_0, end = var_5458_end_0, end_mask = var_5458_end_mask_0, x = var_5454_cast);
            tensor<bool, []> var_5460_interleave_0 = const()[name = tensor<string, []>("op_5460_interleave_0"), val = tensor<bool, []>(false)];
            tensor<fp16, [1, 64, 1, 132]> var_5460_cast = concat(axis = var_5174, interleave = var_5460_interleave_0, values = (var_5390_cast_2, var_5353_cast_2));
            tensor<int32, [4]> var_5464_begin_0 = const()[name = tensor<string, []>("op_5464_begin_0"), val = tensor<int32, [4]>([0, 0, 0, 4])];
            tensor<int32, [4]> var_5464_end_0 = const()[name = tensor<string, []>("op_5464_end_0"), val = tensor<int32, [4]>([1, 64, 1, 132])];
            tensor<bool, [4]> var_5464_end_mask_0 = const()[name = tensor<string, []>("op_5464_end_mask_0"), val = tensor<bool, [4]>([true, true, true, true])];
            tensor<fp16, [1, 64, 1, 128]> var_5464_cast = slice_by_index(begin = var_5464_begin_0, end = var_5464_end_0, end_mask = var_5464_end_mask_0, x = var_5460_cast);
            tensor<bool, []> var_5466_interleave_0 = const()[name = tensor<string, []>("op_5466_interleave_0"), val = tensor<bool, []>(false)];
            tensor<fp16, [1, 64, 1, 132]> var_5466_cast = concat(axis = var_5174, interleave = var_5466_interleave_0, values = (var_5390_cast_3, var_5353_cast_3));
            tensor<int32, [4]> var_5470_begin_0 = const()[name = tensor<string, []>("op_5470_begin_0"), val = tensor<int32, [4]>([0, 0, 0, 4])];
            tensor<int32, [4]> var_5470_end_0 = const()[name = tensor<string, []>("op_5470_end_0"), val = tensor<int32, [4]>([1, 64, 1, 132])];
            tensor<bool, [4]> var_5470_end_mask_0 = const()[name = tensor<string, []>("op_5470_end_mask_0"), val = tensor<bool, [4]>([true, true, true, true])];
            tensor<fp16, [1, 64, 1, 128]> var_5470_cast = slice_by_index(begin = var_5470_begin_0, end = var_5470_end_0, end_mask = var_5470_end_mask_0, x = var_5466_cast);
            tensor<bool, []> var_5472_interleave_0 = const()[name = tensor<string, []>("op_5472_interleave_0"), val = tensor<bool, []>(false)];
            tensor<fp16, [1, 64, 1, 132]> var_5472_cast = concat(axis = var_5174, interleave = var_5472_interleave_0, values = (var_5390_cast_4, var_5353_cast_4));
            tensor<int32, [4]> var_5476_begin_0 = const()[name = tensor<string, []>("op_5476_begin_0"), val = tensor<int32, [4]>([0, 0, 0, 4])];
            tensor<int32, [4]> var_5476_end_0 = const()[name = tensor<string, []>("op_5476_end_0"), val = tensor<int32, [4]>([1, 64, 1, 132])];
            tensor<bool, [4]> var_5476_end_mask_0 = const()[name = tensor<string, []>("op_5476_end_mask_0"), val = tensor<bool, [4]>([true, true, true, true])];
            tensor<fp16, [1, 64, 1, 128]> var_5476_cast = slice_by_index(begin = var_5476_begin_0, end = var_5476_end_0, end_mask = var_5476_end_mask_0, x = var_5472_cast);
            tensor<bool, []> var_5478_interleave_0 = const()[name = tensor<string, []>("op_5478_interleave_0"), val = tensor<bool, []>(false)];
            tensor<fp16, [1, 64, 1, 132]> var_5478_cast = concat(axis = var_5174, interleave = var_5478_interleave_0, values = (var_5390_cast_5, var_5353_cast_5));
            tensor<int32, [4]> var_5482_begin_0 = const()[name = tensor<string, []>("op_5482_begin_0"), val = tensor<int32, [4]>([0, 0, 0, 4])];
            tensor<int32, [4]> var_5482_end_0 = const()[name = tensor<string, []>("op_5482_end_0"), val = tensor<int32, [4]>([1, 64, 1, 132])];
            tensor<bool, [4]> var_5482_end_mask_0 = const()[name = tensor<string, []>("op_5482_end_mask_0"), val = tensor<bool, [4]>([true, true, true, true])];
            tensor<fp16, [1, 64, 1, 128]> var_5482_cast = slice_by_index(begin = var_5482_begin_0, end = var_5482_end_0, end_mask = var_5482_end_mask_0, x = var_5478_cast);
            tensor<bool, []> var_5484_interleave_0 = const()[name = tensor<string, []>("op_5484_interleave_0"), val = tensor<bool, []>(false)];
            tensor<fp16, [1, 64, 1, 132]> var_5484_cast = concat(axis = var_5174, interleave = var_5484_interleave_0, values = (var_5390_cast_6, var_5353_cast_6));
            tensor<int32, [4]> var_5488_begin_0 = const()[name = tensor<string, []>("op_5488_begin_0"), val = tensor<int32, [4]>([0, 0, 0, 4])];
            tensor<int32, [4]> var_5488_end_0 = const()[name = tensor<string, []>("op_5488_end_0"), val = tensor<int32, [4]>([1, 64, 1, 132])];
            tensor<bool, [4]> var_5488_end_mask_0 = const()[name = tensor<string, []>("op_5488_end_mask_0"), val = tensor<bool, [4]>([true, true, true, true])];
            tensor<fp16, [1, 64, 1, 128]> var_5488_cast = slice_by_index(begin = var_5488_begin_0, end = var_5488_end_0, end_mask = var_5488_end_mask_0, x = var_5484_cast);
            tensor<bool, []> var_5490_interleave_0 = const()[name = tensor<string, []>("op_5490_interleave_0"), val = tensor<bool, []>(false)];
            tensor<fp16, [1, 64, 1, 132]> var_5490_cast = concat(axis = var_5174, interleave = var_5490_interleave_0, values = (var_5390_cast_7, var_5353_cast_7));
            tensor<int32, [4]> var_5494_begin_0 = const()[name = tensor<string, []>("op_5494_begin_0"), val = tensor<int32, [4]>([0, 0, 0, 4])];
            tensor<int32, [4]> var_5494_end_0 = const()[name = tensor<string, []>("op_5494_end_0"), val = tensor<int32, [4]>([1, 64, 1, 132])];
            tensor<bool, [4]> var_5494_end_mask_0 = const()[name = tensor<string, []>("op_5494_end_mask_0"), val = tensor<bool, [4]>([true, true, true, true])];
            tensor<fp16, [1, 64, 1, 128]> var_5494_cast = slice_by_index(begin = var_5494_begin_0, end = var_5494_end_0, end_mask = var_5494_end_mask_0, x = var_5490_cast);
            tensor<bool, []> var_5496_interleave_0 = const()[name = tensor<string, []>("op_5496_interleave_0"), val = tensor<bool, []>(false)];
            tensor<fp16, [1, 128, 8, 64]> var_5496_cast = concat(axis = var_5171, interleave = var_5496_interleave_0, values = (var_5402_cast, var_5408_cast, var_5414_cast, var_5420_cast, var_5426_cast, var_5432_cast, var_5438_cast, var_5444_cast));
            tensor<bool, []> var_5498_interleave_0 = const()[name = tensor<string, []>("op_5498_interleave_0"), val = tensor<bool, []>(false)];
            tensor<fp16, [1, 64, 8, 128]> var_5498_cast = concat(axis = var_5171, interleave = var_5498_interleave_0, values = (var_5452_cast, var_5458_cast, var_5464_cast, var_5470_cast, var_5476_cast, var_5482_cast, var_5488_cast, var_5494_cast));
            tensor<string, []> var_5505_equation_0 = const()[name = tensor<string, []>("op_5505_equation_0"), val = tensor<string, []>("bnhd,bdhm->bnhm")];
            tensor<fp16, [1, 512, 1, 512]> op_5502_to_fp16_affine_quantized = constexpr_affine_dequantize()[axis = tensor<int32, []>(0), name = tensor<string, []>("op_5502_to_fp16_affine_quantized"), quantized_data = tensor<int8, [1, 512, 1, 512]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(53863104))), scale = tensor<fp16, []>(0.0869140625), zero_point = tensor<int8, []>(0)];
            tensor<fp16, [1, 128, 1, 512]> var_5505_cast = einsum(equation = var_5505_equation_0, values = (var_265_cast, op_5502_to_fp16_affine_quantized));
            tensor<int32, [8]> tile_41 = const()[name = tensor<string, []>("tile_41"), val = tensor<int32, [8]>([64, 64, 64, 64, 64, 64, 64, 64])];
            tensor<int32, []> var_5506_axis_0 = const()[name = tensor<string, []>("op_5506_axis_0"), val = tensor<int32, []>(-1)];
            tensor<fp16, [1, 128, 1, 64]> var_5506_cast_0, tensor<fp16, [1, 128, 1, 64]> var_5506_cast_1, tensor<fp16, [1, 128, 1, 64]> var_5506_cast_2, tensor<fp16, [1, 128, 1, 64]> var_5506_cast_3, tensor<fp16, [1, 128, 1, 64]> var_5506_cast_4, tensor<fp16, [1, 128, 1, 64]> var_5506_cast_5, tensor<fp16, [1, 128, 1, 64]> var_5506_cast_6, tensor<fp16, [1, 128, 1, 64]> var_5506_cast_7 = split(axis = var_5506_axis_0, split_sizes = tile_41, x = var_5505_cast);
            tensor<fp16, [1, 64, 1, 1]> var_5527_to_fp16 = const()[name = tensor<string, []>("op_5527_to_fp16"), val = tensor<fp16, [1, 64, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(54125312)))];
            tensor<fp16, [1, 64, 1, 4]> var_5528_cast = add(x = var_5335_cast_0, y = var_5527_to_fp16);
            tensor<fp16, [1, 64, 1, 1]> var_5530_to_fp16 = const()[name = tensor<string, []>("op_5530_to_fp16"), val = tensor<fp16, [1, 64, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(54125504)))];
            tensor<fp16, [1, 64, 1, 4]> var_5531_cast = add(x = var_5335_cast_1, y = var_5530_to_fp16);
            tensor<fp16, [1, 64, 1, 1]> var_5533_to_fp16 = const()[name = tensor<string, []>("op_5533_to_fp16"), val = tensor<fp16, [1, 64, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(54125696)))];
            tensor<fp16, [1, 64, 1, 4]> var_5534_cast = add(x = var_5335_cast_2, y = var_5533_to_fp16);
            tensor<fp16, [1, 64, 1, 1]> var_5536_to_fp16 = const()[name = tensor<string, []>("op_5536_to_fp16"), val = tensor<fp16, [1, 64, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(54125888)))];
            tensor<fp16, [1, 64, 1, 4]> var_5537_cast = add(x = var_5335_cast_3, y = var_5536_to_fp16);
            tensor<fp16, [1, 64, 1, 1]> var_5539_to_fp16 = const()[name = tensor<string, []>("op_5539_to_fp16"), val = tensor<fp16, [1, 64, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(54126080)))];
            tensor<fp16, [1, 64, 1, 4]> var_5540_cast = add(x = var_5335_cast_4, y = var_5539_to_fp16);
            tensor<fp16, [1, 64, 1, 1]> var_5542_to_fp16 = const()[name = tensor<string, []>("op_5542_to_fp16"), val = tensor<fp16, [1, 64, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(54126272)))];
            tensor<fp16, [1, 64, 1, 4]> var_5543_cast = add(x = var_5335_cast_5, y = var_5542_to_fp16);
            tensor<fp16, [1, 64, 1, 1]> var_5545_to_fp16 = const()[name = tensor<string, []>("op_5545_to_fp16"), val = tensor<fp16, [1, 64, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(54126464)))];
            tensor<fp16, [1, 64, 1, 4]> var_5546_cast = add(x = var_5335_cast_6, y = var_5545_to_fp16);
            tensor<fp16, [1, 64, 1, 1]> var_5548_to_fp16 = const()[name = tensor<string, []>("op_5548_to_fp16"), val = tensor<fp16, [1, 64, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(54126656)))];
            tensor<fp16, [1, 64, 1, 4]> var_5549_cast = add(x = var_5335_cast_7, y = var_5548_to_fp16);
            tensor<fp16, [1, 64, 1, 1]> var_5562_to_fp16 = const()[name = tensor<string, []>("op_5562_to_fp16"), val = tensor<fp16, [1, 64, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(54126848)))];
            tensor<fp16, [1, 64, 1, 4]> var_5563_cast = add(x = var_5335_cast_0, y = var_5562_to_fp16);
            tensor<fp16, [1, 64, 1, 1]> var_5565_to_fp16 = const()[name = tensor<string, []>("op_5565_to_fp16"), val = tensor<fp16, [1, 64, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(54127040)))];
            tensor<fp16, [1, 64, 1, 4]> var_5566_cast = add(x = var_5335_cast_1, y = var_5565_to_fp16);
            tensor<fp16, [1, 64, 1, 1]> var_5568_to_fp16 = const()[name = tensor<string, []>("op_5568_to_fp16"), val = tensor<fp16, [1, 64, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(54127232)))];
            tensor<fp16, [1, 64, 1, 4]> var_5569_cast = add(x = var_5335_cast_2, y = var_5568_to_fp16);
            tensor<fp16, [1, 64, 1, 1]> var_5571_to_fp16 = const()[name = tensor<string, []>("op_5571_to_fp16"), val = tensor<fp16, [1, 64, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(54127424)))];
            tensor<fp16, [1, 64, 1, 4]> var_5572_cast = add(x = var_5335_cast_3, y = var_5571_to_fp16);
            tensor<fp16, [1, 64, 1, 1]> var_5574_to_fp16 = const()[name = tensor<string, []>("op_5574_to_fp16"), val = tensor<fp16, [1, 64, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(54127616)))];
            tensor<fp16, [1, 64, 1, 4]> var_5575_cast = add(x = var_5335_cast_4, y = var_5574_to_fp16);
            tensor<fp16, [1, 64, 1, 1]> var_5577_to_fp16 = const()[name = tensor<string, []>("op_5577_to_fp16"), val = tensor<fp16, [1, 64, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(54127808)))];
            tensor<fp16, [1, 64, 1, 4]> var_5578_cast = add(x = var_5335_cast_5, y = var_5577_to_fp16);
            tensor<fp16, [1, 64, 1, 1]> var_5580_to_fp16 = const()[name = tensor<string, []>("op_5580_to_fp16"), val = tensor<fp16, [1, 64, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(54128000)))];
            tensor<fp16, [1, 64, 1, 4]> var_5581_cast = add(x = var_5335_cast_6, y = var_5580_to_fp16);
            tensor<fp16, [1, 64, 1, 1]> var_5583_to_fp16 = const()[name = tensor<string, []>("op_5583_to_fp16"), val = tensor<fp16, [1, 64, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(54128192)))];
            tensor<fp16, [1, 64, 1, 4]> var_5584_cast = add(x = var_5335_cast_7, y = var_5583_to_fp16);
            tensor<string, []> ac_49_equation_0 = const()[name = tensor<string, []>("ac_49_equation_0"), val = tensor<string, []>("bnhd,bdhm->bnhm")];
            tensor<fp16, [1, 128, 1, 4]> ac_49_cast = einsum(equation = ac_49_equation_0, values = (var_5402_cast, var_5528_cast));
            tensor<string, []> ac_51_equation_0 = const()[name = tensor<string, []>("ac_51_equation_0"), val = tensor<string, []>("bnhd,bdhm->bnhm")];
            tensor<fp16, [1, 128, 1, 4]> ac_51_cast = einsum(equation = ac_51_equation_0, values = (var_5408_cast, var_5531_cast));
            tensor<string, []> ac_53_equation_0 = const()[name = tensor<string, []>("ac_53_equation_0"), val = tensor<string, []>("bnhd,bdhm->bnhm")];
            tensor<fp16, [1, 128, 1, 4]> ac_53_cast = einsum(equation = ac_53_equation_0, values = (var_5414_cast, var_5534_cast));
            tensor<string, []> ac_55_equation_0 = const()[name = tensor<string, []>("ac_55_equation_0"), val = tensor<string, []>("bnhd,bdhm->bnhm")];
            tensor<fp16, [1, 128, 1, 4]> ac_55_cast = einsum(equation = ac_55_equation_0, values = (var_5420_cast, var_5537_cast));
            tensor<string, []> ac_57_equation_0 = const()[name = tensor<string, []>("ac_57_equation_0"), val = tensor<string, []>("bnhd,bdhm->bnhm")];
            tensor<fp16, [1, 128, 1, 4]> ac_57_cast = einsum(equation = ac_57_equation_0, values = (var_5426_cast, var_5540_cast));
            tensor<string, []> ac_59_equation_0 = const()[name = tensor<string, []>("ac_59_equation_0"), val = tensor<string, []>("bnhd,bdhm->bnhm")];
            tensor<fp16, [1, 128, 1, 4]> ac_59_cast = einsum(equation = ac_59_equation_0, values = (var_5432_cast, var_5543_cast));
            tensor<string, []> ac_61_equation_0 = const()[name = tensor<string, []>("ac_61_equation_0"), val = tensor<string, []>("bnhd,bdhm->bnhm")];
            tensor<fp16, [1, 128, 1, 4]> ac_61_cast = einsum(equation = ac_61_equation_0, values = (var_5438_cast, var_5546_cast));
            tensor<string, []> ac_equation_0 = const()[name = tensor<string, []>("ac_equation_0"), val = tensor<string, []>("bnhd,bdhm->bnhm")];
            tensor<fp16, [1, 128, 1, 4]> ac_cast = einsum(equation = ac_equation_0, values = (var_5444_cast, var_5549_cast));
            tensor<string, []> bd_49_equation_0 = const()[name = tensor<string, []>("bd_49_equation_0"), val = tensor<string, []>("bnhd,bdhm->bnhm")];
            tensor<fp16, [1, 128, 1, 4]> bd_49_cast = einsum(equation = bd_49_equation_0, values = (var_5506_cast_0, var_5563_cast));
            tensor<string, []> bd_51_equation_0 = const()[name = tensor<string, []>("bd_51_equation_0"), val = tensor<string, []>("bnhd,bdhm->bnhm")];
            tensor<fp16, [1, 128, 1, 4]> bd_51_cast = einsum(equation = bd_51_equation_0, values = (var_5506_cast_1, var_5566_cast));
            tensor<string, []> bd_53_equation_0 = const()[name = tensor<string, []>("bd_53_equation_0"), val = tensor<string, []>("bnhd,bdhm->bnhm")];
            tensor<fp16, [1, 128, 1, 4]> bd_53_cast = einsum(equation = bd_53_equation_0, values = (var_5506_cast_2, var_5569_cast));
            tensor<string, []> bd_55_equation_0 = const()[name = tensor<string, []>("bd_55_equation_0"), val = tensor<string, []>("bnhd,bdhm->bnhm")];
            tensor<fp16, [1, 128, 1, 4]> bd_55_cast = einsum(equation = bd_55_equation_0, values = (var_5506_cast_3, var_5572_cast));
            tensor<string, []> bd_57_equation_0 = const()[name = tensor<string, []>("bd_57_equation_0"), val = tensor<string, []>("bnhd,bdhm->bnhm")];
            tensor<fp16, [1, 128, 1, 4]> bd_57_cast = einsum(equation = bd_57_equation_0, values = (var_5506_cast_4, var_5575_cast));
            tensor<string, []> bd_59_equation_0 = const()[name = tensor<string, []>("bd_59_equation_0"), val = tensor<string, []>("bnhd,bdhm->bnhm")];
            tensor<fp16, [1, 128, 1, 4]> bd_59_cast = einsum(equation = bd_59_equation_0, values = (var_5506_cast_5, var_5578_cast));
            tensor<string, []> bd_61_equation_0 = const()[name = tensor<string, []>("bd_61_equation_0"), val = tensor<string, []>("bnhd,bdhm->bnhm")];
            tensor<fp16, [1, 128, 1, 4]> bd_61_cast = einsum(equation = bd_61_equation_0, values = (var_5506_cast_6, var_5581_cast));
            tensor<string, []> bd_equation_0 = const()[name = tensor<string, []>("bd_equation_0"), val = tensor<string, []>("bnhd,bdhm->bnhm")];
            tensor<fp16, [1, 128, 1, 4]> bd_cast = einsum(equation = bd_equation_0, values = (var_5506_cast_7, var_5584_cast));
            tensor<fp16, [1, 128, 1, 4]> s_97_cast = add(x = ac_49_cast, y = bd_49_cast);
            tensor<fp16, [1, 128, 1, 4]> s_99_cast = add(x = ac_51_cast, y = bd_51_cast);
            tensor<fp16, [1, 128, 1, 4]> s_101_cast = add(x = ac_53_cast, y = bd_53_cast);
            tensor<fp16, [1, 128, 1, 4]> s_103_cast = add(x = ac_55_cast, y = bd_55_cast);
            tensor<fp16, [1, 128, 1, 4]> s_105_cast = add(x = ac_57_cast, y = bd_57_cast);
            tensor<fp16, [1, 128, 1, 4]> s_107_cast = add(x = ac_59_cast, y = bd_59_cast);
            tensor<fp16, [1, 128, 1, 4]> s_109_cast = add(x = ac_61_cast, y = bd_61_cast);
            tensor<fp16, [1, 128, 1, 4]> s_111_cast = add(x = ac_cast, y = bd_cast);
            tensor<fp16, [1, 128, 1, 4]> s_113_cast = add(x = inf_mask_5_cast, y = s_97_cast);
            tensor<fp16, [1, 128, 1, 4]> s_115_cast = add(x = inf_mask_5_cast, y = s_99_cast);
            tensor<fp16, [1, 128, 1, 4]> s_117_cast = add(x = inf_mask_5_cast, y = s_101_cast);
            tensor<fp16, [1, 128, 1, 4]> s_119_cast = add(x = inf_mask_5_cast, y = s_103_cast);
            tensor<fp16, [1, 128, 1, 4]> s_121_cast = add(x = inf_mask_5_cast, y = s_105_cast);
            tensor<fp16, [1, 128, 1, 4]> s_123_cast = add(x = inf_mask_5_cast, y = s_107_cast);
            tensor<fp16, [1, 128, 1, 4]> s_125_cast = add(x = inf_mask_5_cast, y = s_109_cast);
            tensor<fp16, [1, 128, 1, 4]> s_127_cast = add(x = inf_mask_5_cast, y = s_111_cast);
            tensor<fp16, [1, 128, 1, 4]> input_205_cast = softmax(axis = var_5177, x = s_113_cast);
            tensor<fp16, [1, 128, 1, 4]> input_207_cast = softmax(axis = var_5177, x = s_115_cast);
            tensor<fp16, [1, 128, 1, 4]> input_209_cast = softmax(axis = var_5177, x = s_117_cast);
            tensor<fp16, [1, 128, 1, 4]> input_211_cast = softmax(axis = var_5177, x = s_119_cast);
            tensor<fp16, [1, 128, 1, 4]> input_213_cast = softmax(axis = var_5177, x = s_121_cast);
            tensor<fp16, [1, 128, 1, 4]> input_215_cast = softmax(axis = var_5177, x = s_123_cast);
            tensor<fp16, [1, 128, 1, 4]> input_217_cast = softmax(axis = var_5177, x = s_125_cast);
            tensor<fp16, [1, 128, 1, 4]> input_219_cast = softmax(axis = var_5177, x = s_127_cast);
            tensor<string, []> var_5654_equation_0 = const()[name = tensor<string, []>("op_5654_equation_0"), val = tensor<string, []>("bnhd,bdhm->bnhm")];
            tensor<fp16, [1, 64, 1, 4]> var_5654_cast = einsum(equation = var_5654_equation_0, values = (var_5452_cast, input_205_cast));
            tensor<string, []> var_5656_equation_0 = const()[name = tensor<string, []>("op_5656_equation_0"), val = tensor<string, []>("bnhd,bdhm->bnhm")];
            tensor<fp16, [1, 64, 1, 4]> var_5656_cast = einsum(equation = var_5656_equation_0, values = (var_5458_cast, input_207_cast));
            tensor<string, []> var_5658_equation_0 = const()[name = tensor<string, []>("op_5658_equation_0"), val = tensor<string, []>("bnhd,bdhm->bnhm")];
            tensor<fp16, [1, 64, 1, 4]> var_5658_cast = einsum(equation = var_5658_equation_0, values = (var_5464_cast, input_209_cast));
            tensor<string, []> var_5660_equation_0 = const()[name = tensor<string, []>("op_5660_equation_0"), val = tensor<string, []>("bnhd,bdhm->bnhm")];
            tensor<fp16, [1, 64, 1, 4]> var_5660_cast = einsum(equation = var_5660_equation_0, values = (var_5470_cast, input_211_cast));
            tensor<string, []> var_5662_equation_0 = const()[name = tensor<string, []>("op_5662_equation_0"), val = tensor<string, []>("bnhd,bdhm->bnhm")];
            tensor<fp16, [1, 64, 1, 4]> var_5662_cast = einsum(equation = var_5662_equation_0, values = (var_5476_cast, input_213_cast));
            tensor<string, []> var_5664_equation_0 = const()[name = tensor<string, []>("op_5664_equation_0"), val = tensor<string, []>("bnhd,bdhm->bnhm")];
            tensor<fp16, [1, 64, 1, 4]> var_5664_cast = einsum(equation = var_5664_equation_0, values = (var_5482_cast, input_215_cast));
            tensor<string, []> var_5666_equation_0 = const()[name = tensor<string, []>("op_5666_equation_0"), val = tensor<string, []>("bnhd,bdhm->bnhm")];
            tensor<fp16, [1, 64, 1, 4]> var_5666_cast = einsum(equation = var_5666_equation_0, values = (var_5488_cast, input_217_cast));
            tensor<string, []> var_5668_equation_0 = const()[name = tensor<string, []>("op_5668_equation_0"), val = tensor<string, []>("bnhd,bdhm->bnhm")];
            tensor<fp16, [1, 64, 1, 4]> var_5668_cast = einsum(equation = var_5668_equation_0, values = (var_5494_cast, input_219_cast));
            tensor<bool, []> y_25_interleave_0 = const()[name = tensor<string, []>("y_25_interleave_0"), val = tensor<bool, []>(false)];
            tensor<fp16, [1, 512, 1, 4]> y_25_cast = concat(axis = var_5177, interleave = y_25_interleave_0, values = (var_5654_cast, var_5656_cast, var_5658_cast, var_5660_cast, var_5662_cast, var_5664_cast, var_5666_cast, var_5668_cast));
            tensor<int32, [2]> var_5675 = const()[name = tensor<string, []>("op_5675"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_5677 = const()[name = tensor<string, []>("op_5677"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> input_221_pad_type_0 = const()[name = tensor<string, []>("input_221_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> input_221_pad_0 = const()[name = tensor<string, []>("input_221_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [512, 512, 1, 1]> op_5674_to_fp16_affine_quantized = constexpr_affine_dequantize()[axis = tensor<int32, []>(0), name = tensor<string, []>("op_5674_to_fp16_affine_quantized"), quantized_data = tensor<int8, [512, 512, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(54128384))), scale = tensor<fp16, [512]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(54391168))), zero_point = tensor<int8, [512]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(54390592)))];
            tensor<fp16, [512]> primary_encoder_encoders_6_self_attn_linear_out_bias_to_fp16 = const()[name = tensor<string, []>("primary_encoder_encoders_6_self_attn_linear_out_bias_to_fp16"), val = tensor<fp16, [512]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(54392256)))];
            tensor<fp16, [1, 512, 1, 4]> input_221_cast = conv(bias = primary_encoder_encoders_6_self_attn_linear_out_bias_to_fp16, dilations = var_5677, groups = var_5177, pad = input_221_pad_0, pad_type = input_221_pad_type_0, strides = var_5675, weight = op_5674_to_fp16_affine_quantized, x = y_25_cast);
            tensor<fp16, [1, 512, 1, 4]> x_479_cast = add(x = x_473_cast, y = input_221_cast);
            tensor<fp16, [1, 512, 1, 4]> var_5694_cast = abs(x = x_479_cast);
            tensor<fp16, []> var_5695_to_fp16 = const()[name = tensor<string, []>("op_5695_to_fp16"), val = tensor<fp16, []>(0.001953125)];
            tensor<fp16, [1, 512, 1, 4]> var_5696_cast = mul(x = var_5694_cast, y = var_5695_to_fp16);
            tensor<int32, [1]> var_5697 = const()[name = tensor<string, []>("op_5697"), val = tensor<int32, [1]>([1])];
            tensor<fp16, [1, 1, 1, 4]> scale_307_cast = reduce_sum(axes = var_5697, keep_dims = var_5176, x = var_5696_cast);
            tensor<fp16, []> scale_309_epsilon_0_to_fp16 = const()[name = tensor<string, []>("scale_309_epsilon_0_to_fp16"), val = tensor<fp16, []>(5.96046448e-08)];
            tensor<fp16, [1, 1, 1, 4]> scale_309_cast = rsqrt(epsilon = scale_309_epsilon_0_to_fp16, x = scale_307_cast);
            tensor<fp16, [1, 1, 1, 4]> scale_311_cast = mul(x = scale_309_cast, y = scale_309_cast);
            tensor<fp16, [1, 512, 1, 4]> x_481_cast = mul(x = x_479_cast, y = scale_311_cast);
            tensor<fp16, []> var_5702_to_fp16 = const()[name = tensor<string, []>("op_5702_to_fp16"), val = tensor<fp16, []>(-0.001953125)];
            tensor<fp16, [1, 512, 1, 4]> var_5703_cast = mul(x = x_481_cast, y = var_5702_to_fp16);
            tensor<int32, [1]> var_5704 = const()[name = tensor<string, []>("op_5704"), val = tensor<int32, [1]>([1])];
            tensor<fp16, [1, 1, 1, 4]> x_mean_103_cast = reduce_sum(axes = var_5704, keep_dims = var_5176, x = var_5703_cast);
            tensor<fp16, [1, 512, 1, 4]> x_zero_mean_103_cast = add(x = x_481_cast, y = x_mean_103_cast);
            tensor<fp16, []> var_5707_to_fp16 = const()[name = tensor<string, []>("op_5707_to_fp16"), val = tensor<fp16, []>(0.001953125)];
            tensor<fp16, [1, 512, 1, 4]> var_5708_cast = mul(x = x_zero_mean_103_cast, y = var_5707_to_fp16);
            tensor<fp16, [1, 512, 1, 4]> var_5709_cast = mul(x = var_5708_cast, y = x_zero_mean_103_cast);
            tensor<int32, [1]> var_5710 = const()[name = tensor<string, []>("op_5710"), val = tensor<int32, [1]>([1])];
            tensor<fp16, [1, 1, 1, 4]> x_var_103_cast = reduce_sum(axes = var_5710, keep_dims = var_5176, x = var_5709_cast);
            tensor<fp16, []> var_5712_to_fp16 = const()[name = tensor<string, []>("op_5712_to_fp16"), val = tensor<fp16, []>(1.00135803e-05)];
            tensor<fp16, [1, 1, 1, 4]> var_5713_cast = add(x = x_var_103_cast, y = var_5712_to_fp16);
            tensor<fp16, []> var_5714_epsilon_0_to_fp16 = const()[name = tensor<string, []>("op_5714_epsilon_0_to_fp16"), val = tensor<fp16, []>(5.96046448e-08)];
            tensor<fp16, [1, 1, 1, 4]> var_5714_cast = rsqrt(epsilon = var_5714_epsilon_0_to_fp16, x = var_5713_cast);
            tensor<fp16, [1, 512, 1, 4]> var_5715_cast = mul(x = x_zero_mean_103_cast, y = var_5714_cast);
            tensor<fp16, [512]> x_483_mean_0_to_fp16 = const()[name = tensor<string, []>("x_483_mean_0_to_fp16"), val = tensor<fp16, [512]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(54393344)))];
            tensor<fp16, [512]> x_483_variance_0_to_fp16 = const()[name = tensor<string, []>("x_483_variance_0_to_fp16"), val = tensor<fp16, [512]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(54394432)))];
            tensor<fp16, [512]> x_483_gamma_0_to_fp16 = const()[name = tensor<string, []>("x_483_gamma_0_to_fp16"), val = tensor<fp16, [512]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(54395520)))];
            tensor<fp16, [512]> x_483_beta_0_to_fp16 = const()[name = tensor<string, []>("x_483_beta_0_to_fp16"), val = tensor<fp16, [512]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(54396608)))];
            tensor<fp16, []> x_483_epsilon_0_to_fp16 = const()[name = tensor<string, []>("x_483_epsilon_0_to_fp16"), val = tensor<fp16, []>(1.00135803e-05)];
            tensor<fp16, [1, 512, 1, 4]> x_483_cast = batch_norm(beta = x_483_beta_0_to_fp16, epsilon = x_483_epsilon_0_to_fp16, gamma = x_483_gamma_0_to_fp16, mean = x_483_mean_0_to_fp16, variance = x_483_variance_0_to_fp16, x = var_5715_cast);
            tensor<bool, []> x_485_interleave_0 = const()[name = tensor<string, []>("x_485_interleave_0"), val = tensor<bool, []>(false)];
            tensor<fp16, [1, 512, 1, 36]> x_485_cast = concat(axis = var_5174, interleave = x_485_interleave_0, values = (var_301_cast_6, x_483_cast));
            tensor<int32, [4]> x_487_begin_0 = const()[name = tensor<string, []>("x_487_begin_0"), val = tensor<int32, [4]>([0, 0, 0, 12])];
            tensor<int32, [4]> x_487_end_0 = const()[name = tensor<string, []>("x_487_end_0"), val = tensor<int32, [4]>([1, 512, 1, 36])];
            tensor<bool, [4]> x_487_end_mask_0 = const()[name = tensor<string, []>("x_487_end_mask_0"), val = tensor<bool, [4]>([true, true, true, true])];
            tensor<fp16, [1, 512, 1, 24]> x_487_cast = slice_by_index(begin = x_487_begin_0, end = x_487_end_0, end_mask = x_487_end_mask_0, x = x_485_cast);
            tensor<int32, [4]> x_489_begin_0 = const()[name = tensor<string, []>("x_489_begin_0"), val = tensor<int32, [4]>([0, 0, 0, 12])];
            tensor<int32, [4]> x_489_end_0 = const()[name = tensor<string, []>("x_489_end_0"), val = tensor<int32, [4]>([1, 512, 1, 24])];
            tensor<bool, [4]> x_489_end_mask_0 = const()[name = tensor<string, []>("x_489_end_mask_0"), val = tensor<bool, [4]>([true, true, true, true])];
            tensor<fp16, [1, 512, 1, 12]> x_489_cast = slice_by_index(begin = x_489_begin_0, end = x_489_end_0, end_mask = x_489_end_mask_0, x = x_487_cast);
            tensor<int32, [4]> x_491_begin_0 = const()[name = tensor<string, []>("x_491_begin_0"), val = tensor<int32, [4]>([0, 0, 0, 1])];
            tensor<int32, [4]> x_491_end_0 = const()[name = tensor<string, []>("x_491_end_0"), val = tensor<int32, [4]>([1, 512, 1, 12])];
            tensor<bool, [4]> x_491_end_mask_0 = const()[name = tensor<string, []>("x_491_end_mask_0"), val = tensor<bool, [4]>([true, true, true, true])];
            tensor<fp16, [1, 512, 1, 11]> x_491_cast = slice_by_index(begin = x_491_begin_0, end = x_491_end_0, end_mask = x_491_end_mask_0, x = x_489_cast);
            tensor<int32, [4]> var_5755_begin_0 = const()[name = tensor<string, []>("op_5755_begin_0"), val = tensor<int32, [4]>([0, 0, 0, -7])];
            tensor<int32, [4]> var_5755_end_0 = const()[name = tensor<string, []>("op_5755_end_0"), val = tensor<int32, [4]>([1, 512, 1, 11])];
            tensor<bool, [4]> var_5755_end_mask_0 = const()[name = tensor<string, []>("op_5755_end_mask_0"), val = tensor<bool, [4]>([true, true, true, true])];
            tensor<fp16, [1, 512, 1, 7]> var_5755_cast = slice_by_index(begin = var_5755_begin_0, end = var_5755_end_0, end_mask = var_5755_end_mask_0, x = x_491_cast);
            tensor<int32, [2]> var_5757 = const()[name = tensor<string, []>("op_5757"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_5759 = const()[name = tensor<string, []>("op_5759"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> x_493_pad_type_0 = const()[name = tensor<string, []>("x_493_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> x_493_pad_0 = const()[name = tensor<string, []>("x_493_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [1024, 512, 1, 1]> op_5756_to_fp16_affine_quantized = constexpr_affine_dequantize()[axis = tensor<int32, []>(0), name = tensor<string, []>("op_5756_to_fp16_affine_quantized"), quantized_data = tensor<int8, [1024, 512, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(54397696))), scale = tensor<fp16, [1024]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(54923136))), zero_point = tensor<int8, [1024]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(54922048)))];
            tensor<fp16, [1024]> primary_encoder_encoders_6_conv_module_pointwise_conv1_bias_to_fp16 = const()[name = tensor<string, []>("primary_encoder_encoders_6_conv_module_pointwise_conv1_bias_to_fp16"), val = tensor<fp16, [1024]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(54925248)))];
            tensor<fp16, [1, 1024, 1, 11]> x_493_cast = conv(bias = primary_encoder_encoders_6_conv_module_pointwise_conv1_bias_to_fp16, dilations = var_5759, groups = var_5177, pad = x_493_pad_0, pad_type = x_493_pad_type_0, strides = var_5757, weight = op_5756_to_fp16_affine_quantized, x = x_491_cast);
            tensor<int32, [4]> var_5768_begin_0 = const()[name = tensor<string, []>("op_5768_begin_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<int32, [4]> var_5768_end_0 = const()[name = tensor<string, []>("op_5768_end_0"), val = tensor<int32, [4]>([1, 512, 1, 11])];
            tensor<bool, [4]> var_5768_end_mask_0 = const()[name = tensor<string, []>("op_5768_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [1, 512, 1, 11]> var_5768_cast = slice_by_index(begin = var_5768_begin_0, end = var_5768_end_0, end_mask = var_5768_end_mask_0, x = x_493_cast);
            tensor<int32, [4]> var_5772_begin_0 = const()[name = tensor<string, []>("op_5772_begin_0"), val = tensor<int32, [4]>([0, 512, 0, 0])];
            tensor<int32, [4]> var_5772_end_0 = const()[name = tensor<string, []>("op_5772_end_0"), val = tensor<int32, [4]>([1, 1024, 1, 11])];
            tensor<bool, [4]> var_5772_end_mask_0 = const()[name = tensor<string, []>("op_5772_end_mask_0"), val = tensor<bool, [4]>([true, true, true, true])];
            tensor<fp16, [1, 512, 1, 11]> var_5772_cast = slice_by_index(begin = var_5772_begin_0, end = var_5772_end_0, end_mask = var_5772_end_mask_0, x = x_493_cast);
            tensor<fp16, [1, 512, 1, 11]> var_5775_cast = sigmoid(x = var_5772_cast);
            tensor<fp16, [1, 512, 1, 11]> x_495_cast = mul(x = var_5768_cast, y = var_5775_cast);
            tensor<int32, [2]> var_5778 = const()[name = tensor<string, []>("op_5778"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_5780 = const()[name = tensor<string, []>("op_5780"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> x_497_pad_type_0 = const()[name = tensor<string, []>("x_497_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> x_497_pad_0 = const()[name = tensor<string, []>("x_497_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [512, 1, 1, 8]> op_5777_to_fp16_affine_quantized = constexpr_affine_dequantize()[axis = tensor<int32, []>(0), name = tensor<string, []>("op_5777_to_fp16_affine_quantized"), quantized_data = tensor<int8, [512, 1, 1, 8]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(54927360))), scale = tensor<fp16, [512]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(54932096))), zero_point = tensor<int8, [512]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(54931520)))];
            tensor<fp16, [512]> primary_encoder_encoders_6_conv_module_depthwise_conv_bias_to_fp16 = const()[name = tensor<string, []>("primary_encoder_encoders_6_conv_module_depthwise_conv_bias_to_fp16"), val = tensor<fp16, [512]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(54933184)))];
            tensor<fp16, [1, 512, 1, 4]> x_497_cast = conv(bias = primary_encoder_encoders_6_conv_module_depthwise_conv_bias_to_fp16, dilations = var_5780, groups = var_5164, pad = x_497_pad_0, pad_type = x_497_pad_type_0, strides = var_5778, weight = op_5777_to_fp16_affine_quantized, x = x_495_cast);
            tensor<fp16, [1, 512, 1, 4]> var_5783_cast = abs(x = x_497_cast);
            tensor<fp16, []> var_5784_to_fp16 = const()[name = tensor<string, []>("op_5784_to_fp16"), val = tensor<fp16, []>(0.001953125)];
            tensor<fp16, [1, 512, 1, 4]> var_5785_cast = mul(x = var_5783_cast, y = var_5784_to_fp16);
            tensor<int32, [1]> var_5786 = const()[name = tensor<string, []>("op_5786"), val = tensor<int32, [1]>([1])];
            tensor<fp16, [1, 1, 1, 4]> scale_313_cast = reduce_sum(axes = var_5786, keep_dims = var_5176, x = var_5785_cast);
            tensor<fp16, []> scale_315_epsilon_0_to_fp16 = const()[name = tensor<string, []>("scale_315_epsilon_0_to_fp16"), val = tensor<fp16, []>(5.96046448e-08)];
            tensor<fp16, [1, 1, 1, 4]> scale_315_cast = rsqrt(epsilon = scale_315_epsilon_0_to_fp16, x = scale_313_cast);
            tensor<fp16, [1, 1, 1, 4]> scale_317_cast = mul(x = scale_315_cast, y = scale_315_cast);
            tensor<fp16, [1, 512, 1, 4]> x_499_cast = mul(x = x_497_cast, y = scale_317_cast);
            tensor<fp16, []> var_5791_to_fp16 = const()[name = tensor<string, []>("op_5791_to_fp16"), val = tensor<fp16, []>(-0.001953125)];
            tensor<fp16, [1, 512, 1, 4]> var_5792_cast = mul(x = x_499_cast, y = var_5791_to_fp16);
            tensor<int32, [1]> var_5793 = const()[name = tensor<string, []>("op_5793"), val = tensor<int32, [1]>([1])];
            tensor<fp16, [1, 1, 1, 4]> x_mean_105_cast = reduce_sum(axes = var_5793, keep_dims = var_5176, x = var_5792_cast);
            tensor<fp16, [1, 512, 1, 4]> x_zero_mean_105_cast = add(x = x_499_cast, y = x_mean_105_cast);
            tensor<fp16, []> var_5796_to_fp16 = const()[name = tensor<string, []>("op_5796_to_fp16"), val = tensor<fp16, []>(0.001953125)];
            tensor<fp16, [1, 512, 1, 4]> var_5797_cast = mul(x = x_zero_mean_105_cast, y = var_5796_to_fp16);
            tensor<fp16, [1, 512, 1, 4]> var_5798_cast = mul(x = var_5797_cast, y = x_zero_mean_105_cast);
            tensor<int32, [1]> var_5799 = const()[name = tensor<string, []>("op_5799"), val = tensor<int32, [1]>([1])];
            tensor<fp16, [1, 1, 1, 4]> x_var_105_cast = reduce_sum(axes = var_5799, keep_dims = var_5176, x = var_5798_cast);
            tensor<fp16, []> var_5801_to_fp16 = const()[name = tensor<string, []>("op_5801_to_fp16"), val = tensor<fp16, []>(1.00135803e-05)];
            tensor<fp16, [1, 1, 1, 4]> var_5802_cast = add(x = x_var_105_cast, y = var_5801_to_fp16);
            tensor<fp16, []> var_5803_epsilon_0_to_fp16 = const()[name = tensor<string, []>("op_5803_epsilon_0_to_fp16"), val = tensor<fp16, []>(5.96046448e-08)];
            tensor<fp16, [1, 1, 1, 4]> var_5803_cast = rsqrt(epsilon = var_5803_epsilon_0_to_fp16, x = var_5802_cast);
            tensor<fp16, [1, 512, 1, 4]> var_5804_cast = mul(x = x_zero_mean_105_cast, y = var_5803_cast);
            tensor<fp16, [512]> input_223_mean_0_to_fp16 = const()[name = tensor<string, []>("input_223_mean_0_to_fp16"), val = tensor<fp16, [512]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(54934272)))];
            tensor<fp16, [512]> input_223_variance_0_to_fp16 = const()[name = tensor<string, []>("input_223_variance_0_to_fp16"), val = tensor<fp16, [512]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(54935360)))];
            tensor<fp16, [512]> input_223_gamma_0_to_fp16 = const()[name = tensor<string, []>("input_223_gamma_0_to_fp16"), val = tensor<fp16, [512]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(54936448)))];
            tensor<fp16, [512]> input_223_beta_0_to_fp16 = const()[name = tensor<string, []>("input_223_beta_0_to_fp16"), val = tensor<fp16, [512]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(54937536)))];
            tensor<fp16, []> input_223_epsilon_0_to_fp16 = const()[name = tensor<string, []>("input_223_epsilon_0_to_fp16"), val = tensor<fp16, []>(1.00135803e-05)];
            tensor<fp16, [1, 512, 1, 4]> input_223_cast = batch_norm(beta = input_223_beta_0_to_fp16, epsilon = input_223_epsilon_0_to_fp16, gamma = input_223_gamma_0_to_fp16, mean = input_223_mean_0_to_fp16, variance = input_223_variance_0_to_fp16, x = var_5804_cast);
            tensor<fp16, [1, 512, 1, 4]> x_501_cast = silu(x = input_223_cast);
            tensor<int32, [2]> var_5813 = const()[name = tensor<string, []>("op_5813"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_5815 = const()[name = tensor<string, []>("op_5815"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> input_225_pad_type_0 = const()[name = tensor<string, []>("input_225_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> input_225_pad_0 = const()[name = tensor<string, []>("input_225_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [512, 512, 1, 1]> op_5812_to_fp16_affine_quantized = constexpr_affine_dequantize()[axis = tensor<int32, []>(0), name = tensor<string, []>("op_5812_to_fp16_affine_quantized"), quantized_data = tensor<int8, [512, 512, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(54938624))), scale = tensor<fp16, [512]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(55201408))), zero_point = tensor<int8, [512]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(55200832)))];
            tensor<fp16, [512]> primary_encoder_encoders_6_conv_module_pointwise_conv2_bias_to_fp16 = const()[name = tensor<string, []>("primary_encoder_encoders_6_conv_module_pointwise_conv2_bias_to_fp16"), val = tensor<fp16, [512]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(55202496)))];
            tensor<fp16, [1, 512, 1, 4]> input_225_cast = conv(bias = primary_encoder_encoders_6_conv_module_pointwise_conv2_bias_to_fp16, dilations = var_5815, groups = var_5177, pad = input_225_pad_0, pad_type = input_225_pad_type_0, strides = var_5813, weight = op_5812_to_fp16_affine_quantized, x = x_501_cast);
            tensor<fp16, [1, 512, 1, 4]> x_505_cast = add(x = x_479_cast, y = input_225_cast);
            tensor<fp16, [1, 512, 1, 4]> var_5823_cast = abs(x = x_505_cast);
            tensor<fp16, []> var_5824_to_fp16 = const()[name = tensor<string, []>("op_5824_to_fp16"), val = tensor<fp16, []>(0.001953125)];
            tensor<fp16, [1, 512, 1, 4]> var_5825_cast = mul(x = var_5823_cast, y = var_5824_to_fp16);
            tensor<int32, [1]> var_5826 = const()[name = tensor<string, []>("op_5826"), val = tensor<int32, [1]>([1])];
            tensor<fp16, [1, 1, 1, 4]> scale_319_cast = reduce_sum(axes = var_5826, keep_dims = var_5176, x = var_5825_cast);
            tensor<fp16, []> scale_321_epsilon_0_to_fp16 = const()[name = tensor<string, []>("scale_321_epsilon_0_to_fp16"), val = tensor<fp16, []>(5.96046448e-08)];
            tensor<fp16, [1, 1, 1, 4]> scale_321_cast = rsqrt(epsilon = scale_321_epsilon_0_to_fp16, x = scale_319_cast);
            tensor<fp16, [1, 1, 1, 4]> scale_323_cast = mul(x = scale_321_cast, y = scale_321_cast);
            tensor<fp16, [1, 512, 1, 4]> x_507_cast = mul(x = x_505_cast, y = scale_323_cast);
            tensor<fp16, []> var_5831_to_fp16 = const()[name = tensor<string, []>("op_5831_to_fp16"), val = tensor<fp16, []>(-0.001953125)];
            tensor<fp16, [1, 512, 1, 4]> var_5832_cast = mul(x = x_507_cast, y = var_5831_to_fp16);
            tensor<int32, [1]> var_5833 = const()[name = tensor<string, []>("op_5833"), val = tensor<int32, [1]>([1])];
            tensor<fp16, [1, 1, 1, 4]> x_mean_107_cast = reduce_sum(axes = var_5833, keep_dims = var_5176, x = var_5832_cast);
            tensor<fp16, [1, 512, 1, 4]> x_zero_mean_107_cast = add(x = x_507_cast, y = x_mean_107_cast);
            tensor<fp16, []> var_5836_to_fp16 = const()[name = tensor<string, []>("op_5836_to_fp16"), val = tensor<fp16, []>(0.001953125)];
            tensor<fp16, [1, 512, 1, 4]> var_5837_cast = mul(x = x_zero_mean_107_cast, y = var_5836_to_fp16);
            tensor<fp16, [1, 512, 1, 4]> var_5838_cast = mul(x = var_5837_cast, y = x_zero_mean_107_cast);
            tensor<int32, [1]> var_5839 = const()[name = tensor<string, []>("op_5839"), val = tensor<int32, [1]>([1])];
            tensor<fp16, [1, 1, 1, 4]> x_var_107_cast = reduce_sum(axes = var_5839, keep_dims = var_5176, x = var_5838_cast);
            tensor<fp16, []> var_5841_to_fp16 = const()[name = tensor<string, []>("op_5841_to_fp16"), val = tensor<fp16, []>(1.00135803e-05)];
            tensor<fp16, [1, 1, 1, 4]> var_5842_cast = add(x = x_var_107_cast, y = var_5841_to_fp16);
            tensor<fp16, []> var_5843_epsilon_0_to_fp16 = const()[name = tensor<string, []>("op_5843_epsilon_0_to_fp16"), val = tensor<fp16, []>(5.96046448e-08)];
            tensor<fp16, [1, 1, 1, 4]> var_5843_cast = rsqrt(epsilon = var_5843_epsilon_0_to_fp16, x = var_5842_cast);
            tensor<fp16, [1, 512, 1, 4]> var_5844_cast = mul(x = x_zero_mean_107_cast, y = var_5843_cast);
            tensor<fp16, [512]> x_509_mean_0_to_fp16 = const()[name = tensor<string, []>("x_509_mean_0_to_fp16"), val = tensor<fp16, [512]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(55203584)))];
            tensor<fp16, [512]> x_509_variance_0_to_fp16 = const()[name = tensor<string, []>("x_509_variance_0_to_fp16"), val = tensor<fp16, [512]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(55204672)))];
            tensor<fp16, [512]> x_509_gamma_0_to_fp16 = const()[name = tensor<string, []>("x_509_gamma_0_to_fp16"), val = tensor<fp16, [512]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(55205760)))];
            tensor<fp16, [512]> x_509_beta_0_to_fp16 = const()[name = tensor<string, []>("x_509_beta_0_to_fp16"), val = tensor<fp16, [512]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(55206848)))];
            tensor<fp16, []> x_509_epsilon_0_to_fp16 = const()[name = tensor<string, []>("x_509_epsilon_0_to_fp16"), val = tensor<fp16, []>(1.00135803e-05)];
            tensor<fp16, [1, 512, 1, 4]> x_509_cast = batch_norm(beta = x_509_beta_0_to_fp16, epsilon = x_509_epsilon_0_to_fp16, gamma = x_509_gamma_0_to_fp16, mean = x_509_mean_0_to_fp16, variance = x_509_variance_0_to_fp16, x = var_5844_cast);
            tensor<int32, [2]> var_5855 = const()[name = tensor<string, []>("op_5855"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_5857 = const()[name = tensor<string, []>("op_5857"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> input_227_pad_type_0 = const()[name = tensor<string, []>("input_227_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> input_227_pad_0 = const()[name = tensor<string, []>("input_227_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [2048, 512, 1, 1]> op_5854_to_fp16_affine_quantized = constexpr_affine_dequantize()[axis = tensor<int32, []>(0), name = tensor<string, []>("op_5854_to_fp16_affine_quantized"), quantized_data = tensor<int8, [2048, 512, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(55207936))), scale = tensor<fp16, [2048]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(56258688))), zero_point = tensor<int8, [2048]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(56256576)))];
            tensor<fp16, [2048]> primary_encoder_encoders_6_feed_forward_w_1_bias_to_fp16 = const()[name = tensor<string, []>("primary_encoder_encoders_6_feed_forward_w_1_bias_to_fp16"), val = tensor<fp16, [2048]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(56262848)))];
            tensor<fp16, [1, 2048, 1, 4]> input_227_cast = conv(bias = primary_encoder_encoders_6_feed_forward_w_1_bias_to_fp16, dilations = var_5857, groups = var_5177, pad = input_227_pad_0, pad_type = input_227_pad_type_0, strides = var_5855, weight = op_5854_to_fp16_affine_quantized, x = x_509_cast);
            tensor<fp16, [1, 2048, 1, 4]> input_229_cast = silu(x = input_227_cast);
            tensor<int32, [2]> var_5866 = const()[name = tensor<string, []>("op_5866"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_5868 = const()[name = tensor<string, []>("op_5868"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> input_231_pad_type_0 = const()[name = tensor<string, []>("input_231_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> input_231_pad_0 = const()[name = tensor<string, []>("input_231_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [512, 2048, 1, 1]> op_5873_weight_0_to_fp16_affine_quantized = constexpr_affine_dequantize()[axis = tensor<int32, []>(0), name = tensor<string, []>("op_5873_weight_0_to_fp16_affine_quantized"), quantized_data = tensor<int8, [512, 2048, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(56267008))), scale = tensor<fp16, [512]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(57316224))), zero_point = tensor<int8, [512]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(57315648)))];
            tensor<fp16, [512]> var_5873_bias_0_to_fp16 = const()[name = tensor<string, []>("op_5873_bias_0_to_fp16"), val = tensor<fp16, [512]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(57317312)))];
            tensor<fp16, [1, 512, 1, 4]> var_5873_cast = conv(bias = var_5873_bias_0_to_fp16, dilations = var_5868, groups = var_5177, pad = input_231_pad_0, pad_type = input_231_pad_type_0, strides = var_5866, weight = op_5873_weight_0_to_fp16_affine_quantized, x = input_229_cast);
            tensor<fp16, [1, 512, 1, 4]> x_515_cast = add(x = x_505_cast, y = var_5873_cast);
            tensor<fp16, [1, 512, 1, 4]> var_5875_cast = abs(x = x_515_cast);
            tensor<fp16, []> var_5876_to_fp16 = const()[name = tensor<string, []>("op_5876_to_fp16"), val = tensor<fp16, []>(0.001953125)];
            tensor<fp16, [1, 512, 1, 4]> var_5877_cast = mul(x = var_5875_cast, y = var_5876_to_fp16);
            tensor<int32, [1]> var_5878 = const()[name = tensor<string, []>("op_5878"), val = tensor<int32, [1]>([1])];
            tensor<fp16, [1, 1, 1, 4]> scale_325_cast = reduce_sum(axes = var_5878, keep_dims = var_5176, x = var_5877_cast);
            tensor<fp16, []> scale_327_epsilon_0_to_fp16 = const()[name = tensor<string, []>("scale_327_epsilon_0_to_fp16"), val = tensor<fp16, []>(5.96046448e-08)];
            tensor<fp16, [1, 1, 1, 4]> scale_327_cast = rsqrt(epsilon = scale_327_epsilon_0_to_fp16, x = scale_325_cast);
            tensor<fp16, [1, 1, 1, 4]> scale_329_cast = mul(x = scale_327_cast, y = scale_327_cast);
            tensor<fp16, [1, 512, 1, 4]> x_517_cast = mul(x = x_515_cast, y = scale_329_cast);
            tensor<fp16, []> var_5883_to_fp16 = const()[name = tensor<string, []>("op_5883_to_fp16"), val = tensor<fp16, []>(-0.001953125)];
            tensor<fp16, [1, 512, 1, 4]> var_5884_cast = mul(x = x_517_cast, y = var_5883_to_fp16);
            tensor<int32, [1]> var_5885 = const()[name = tensor<string, []>("op_5885"), val = tensor<int32, [1]>([1])];
            tensor<fp16, [1, 1, 1, 4]> x_mean_109_cast = reduce_sum(axes = var_5885, keep_dims = var_5176, x = var_5884_cast);
            tensor<fp16, [1, 512, 1, 4]> x_zero_mean_109_cast = add(x = x_517_cast, y = x_mean_109_cast);
            tensor<fp16, []> var_5888_to_fp16 = const()[name = tensor<string, []>("op_5888_to_fp16"), val = tensor<fp16, []>(0.001953125)];
            tensor<fp16, [1, 512, 1, 4]> var_5889_cast = mul(x = x_zero_mean_109_cast, y = var_5888_to_fp16);
            tensor<fp16, [1, 512, 1, 4]> var_5890_cast = mul(x = var_5889_cast, y = x_zero_mean_109_cast);
            tensor<int32, [1]> var_5891 = const()[name = tensor<string, []>("op_5891"), val = tensor<int32, [1]>([1])];
            tensor<fp16, [1, 1, 1, 4]> x_var_109_cast = reduce_sum(axes = var_5891, keep_dims = var_5176, x = var_5890_cast);
            tensor<fp16, []> var_5893_to_fp16 = const()[name = tensor<string, []>("op_5893_to_fp16"), val = tensor<fp16, []>(1.00135803e-05)];
            tensor<fp16, [1, 1, 1, 4]> var_5894_cast = add(x = x_var_109_cast, y = var_5893_to_fp16);
            tensor<fp16, []> var_5895_epsilon_0_to_fp16 = const()[name = tensor<string, []>("op_5895_epsilon_0_to_fp16"), val = tensor<fp16, []>(5.96046448e-08)];
            tensor<fp16, [1, 1, 1, 4]> var_5895_cast = rsqrt(epsilon = var_5895_epsilon_0_to_fp16, x = var_5894_cast);
            tensor<fp16, [1, 512, 1, 4]> var_5896_cast = mul(x = x_zero_mean_109_cast, y = var_5895_cast);
            tensor<fp16, [512]> x_519_mean_0_to_fp16 = const()[name = tensor<string, []>("x_519_mean_0_to_fp16"), val = tensor<fp16, [512]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(57318400)))];
            tensor<fp16, [512]> x_519_variance_0_to_fp16 = const()[name = tensor<string, []>("x_519_variance_0_to_fp16"), val = tensor<fp16, [512]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(57319488)))];
            tensor<fp16, [512]> x_519_gamma_0_to_fp16 = const()[name = tensor<string, []>("x_519_gamma_0_to_fp16"), val = tensor<fp16, [512]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(57320576)))];
            tensor<fp16, [512]> x_519_beta_0_to_fp16 = const()[name = tensor<string, []>("x_519_beta_0_to_fp16"), val = tensor<fp16, [512]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(57321664)))];
            tensor<fp16, []> x_519_epsilon_0_to_fp16 = const()[name = tensor<string, []>("x_519_epsilon_0_to_fp16"), val = tensor<fp16, []>(1.00135803e-05)];
            tensor<fp16, [1, 512, 1, 4]> x_519_cast = batch_norm(beta = x_519_beta_0_to_fp16, epsilon = x_519_epsilon_0_to_fp16, gamma = x_519_gamma_0_to_fp16, mean = x_519_mean_0_to_fp16, variance = x_519_variance_0_to_fp16, x = var_5896_cast);
            tensor<int32, []> var_5920 = const()[name = tensor<string, []>("op_5920"), val = tensor<int32, []>(512)];
            tensor<int32, []> var_5926 = const()[name = tensor<string, []>("op_5926"), val = tensor<int32, []>(2)];
            tensor<int32, []> var_5929 = const()[name = tensor<string, []>("op_5929"), val = tensor<int32, []>(-1)];
            tensor<bool, []> var_5931 = const()[name = tensor<string, []>("op_5931"), val = tensor<bool, []>(true)];
            tensor<int32, []> var_5932 = const()[name = tensor<string, []>("op_5932"), val = tensor<int32, []>(1)];
            tensor<fp16, [1, 512, 1, 4]> var_5979_cast = abs(x = x_519_cast);
            tensor<fp16, []> var_5980_to_fp16 = const()[name = tensor<string, []>("op_5980_to_fp16"), val = tensor<fp16, []>(0.001953125)];
            tensor<fp16, [1, 512, 1, 4]> var_5981_cast = mul(x = var_5979_cast, y = var_5980_to_fp16);
            tensor<int32, [1]> var_5982 = const()[name = tensor<string, []>("op_5982"), val = tensor<int32, [1]>([1])];
            tensor<fp16, [1, 1, 1, 4]> scale_331_cast = reduce_sum(axes = var_5982, keep_dims = var_5931, x = var_5981_cast);
            tensor<fp16, []> scale_333_epsilon_0_to_fp16 = const()[name = tensor<string, []>("scale_333_epsilon_0_to_fp16"), val = tensor<fp16, []>(5.96046448e-08)];
            tensor<fp16, [1, 1, 1, 4]> scale_333_cast = rsqrt(epsilon = scale_333_epsilon_0_to_fp16, x = scale_331_cast);
            tensor<fp16, [1, 1, 1, 4]> scale_335_cast = mul(x = scale_333_cast, y = scale_333_cast);
            tensor<fp16, [1, 512, 1, 4]> x_521_cast = mul(x = x_519_cast, y = scale_335_cast);
            tensor<fp16, []> var_5987_to_fp16 = const()[name = tensor<string, []>("op_5987_to_fp16"), val = tensor<fp16, []>(-0.001953125)];
            tensor<fp16, [1, 512, 1, 4]> var_5988_cast = mul(x = x_521_cast, y = var_5987_to_fp16);
            tensor<int32, [1]> var_5989 = const()[name = tensor<string, []>("op_5989"), val = tensor<int32, [1]>([1])];
            tensor<fp16, [1, 1, 1, 4]> x_mean_111_cast = reduce_sum(axes = var_5989, keep_dims = var_5931, x = var_5988_cast);
            tensor<fp16, [1, 512, 1, 4]> x_zero_mean_111_cast = add(x = x_521_cast, y = x_mean_111_cast);
            tensor<fp16, []> var_5992_to_fp16 = const()[name = tensor<string, []>("op_5992_to_fp16"), val = tensor<fp16, []>(0.001953125)];
            tensor<fp16, [1, 512, 1, 4]> var_5993_cast = mul(x = x_zero_mean_111_cast, y = var_5992_to_fp16);
            tensor<fp16, [1, 512, 1, 4]> var_5994_cast = mul(x = var_5993_cast, y = x_zero_mean_111_cast);
            tensor<int32, [1]> var_5995 = const()[name = tensor<string, []>("op_5995"), val = tensor<int32, [1]>([1])];
            tensor<fp16, [1, 1, 1, 4]> x_var_111_cast = reduce_sum(axes = var_5995, keep_dims = var_5931, x = var_5994_cast);
            tensor<fp16, []> var_5997_to_fp16 = const()[name = tensor<string, []>("op_5997_to_fp16"), val = tensor<fp16, []>(1.00135803e-05)];
            tensor<fp16, [1, 1, 1, 4]> var_5998_cast = add(x = x_var_111_cast, y = var_5997_to_fp16);
            tensor<fp16, []> var_5999_epsilon_0_to_fp16 = const()[name = tensor<string, []>("op_5999_epsilon_0_to_fp16"), val = tensor<fp16, []>(5.96046448e-08)];
            tensor<fp16, [1, 1, 1, 4]> var_5999_cast = rsqrt(epsilon = var_5999_epsilon_0_to_fp16, x = var_5998_cast);
            tensor<fp16, [1, 512, 1, 4]> var_6000_cast = mul(x = x_zero_mean_111_cast, y = var_5999_cast);
            tensor<fp16, [512]> x_523_mean_0_to_fp16 = const()[name = tensor<string, []>("x_523_mean_0_to_fp16"), val = tensor<fp16, [512]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(57322752)))];
            tensor<fp16, [512]> x_523_variance_0_to_fp16 = const()[name = tensor<string, []>("x_523_variance_0_to_fp16"), val = tensor<fp16, [512]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(57323840)))];
            tensor<fp16, [512]> x_523_gamma_0_to_fp16 = const()[name = tensor<string, []>("x_523_gamma_0_to_fp16"), val = tensor<fp16, [512]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(57324928)))];
            tensor<fp16, [512]> x_523_beta_0_to_fp16 = const()[name = tensor<string, []>("x_523_beta_0_to_fp16"), val = tensor<fp16, [512]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(57326016)))];
            tensor<fp16, []> x_523_epsilon_0_to_fp16 = const()[name = tensor<string, []>("x_523_epsilon_0_to_fp16"), val = tensor<fp16, []>(1.00135803e-05)];
            tensor<fp16, [1, 512, 1, 4]> x_523_cast = batch_norm(beta = x_523_beta_0_to_fp16, epsilon = x_523_epsilon_0_to_fp16, gamma = x_523_gamma_0_to_fp16, mean = x_523_mean_0_to_fp16, variance = x_523_variance_0_to_fp16, x = var_6000_cast);
            tensor<int32, [2]> var_6011 = const()[name = tensor<string, []>("op_6011"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_6013 = const()[name = tensor<string, []>("op_6013"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> input_233_pad_type_0 = const()[name = tensor<string, []>("input_233_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> input_233_pad_0 = const()[name = tensor<string, []>("input_233_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [2048, 512, 1, 1]> op_6010_to_fp16_affine_quantized = constexpr_affine_dequantize()[axis = tensor<int32, []>(0), name = tensor<string, []>("op_6010_to_fp16_affine_quantized"), quantized_data = tensor<int8, [2048, 512, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(57327104))), scale = tensor<fp16, [2048]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(58377856))), zero_point = tensor<int8, [2048]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(58375744)))];
            tensor<fp16, [2048]> primary_encoder_encoders_7_feed_forward_macaron_w_1_bias_to_fp16 = const()[name = tensor<string, []>("primary_encoder_encoders_7_feed_forward_macaron_w_1_bias_to_fp16"), val = tensor<fp16, [2048]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(58382016)))];
            tensor<fp16, [1, 2048, 1, 4]> input_233_cast = conv(bias = primary_encoder_encoders_7_feed_forward_macaron_w_1_bias_to_fp16, dilations = var_6013, groups = var_5932, pad = input_233_pad_0, pad_type = input_233_pad_type_0, strides = var_6011, weight = op_6010_to_fp16_affine_quantized, x = x_523_cast);
            tensor<fp16, [1, 2048, 1, 4]> input_235_cast = silu(x = input_233_cast);
            tensor<int32, [2]> var_6022 = const()[name = tensor<string, []>("op_6022"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_6024 = const()[name = tensor<string, []>("op_6024"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> input_237_pad_type_0 = const()[name = tensor<string, []>("input_237_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> input_237_pad_0 = const()[name = tensor<string, []>("input_237_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [512, 2048, 1, 1]> op_6029_weight_0_to_fp16_affine_quantized = constexpr_affine_dequantize()[axis = tensor<int32, []>(0), name = tensor<string, []>("op_6029_weight_0_to_fp16_affine_quantized"), quantized_data = tensor<int8, [512, 2048, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(58386176))), scale = tensor<fp16, [512]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(59435392))), zero_point = tensor<int8, [512]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(59434816)))];
            tensor<fp16, [512]> var_6029_bias_0_to_fp16 = const()[name = tensor<string, []>("op_6029_bias_0_to_fp16"), val = tensor<fp16, [512]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(59436480)))];
            tensor<fp16, [1, 512, 1, 4]> var_6029_cast = conv(bias = var_6029_bias_0_to_fp16, dilations = var_6024, groups = var_5932, pad = input_237_pad_0, pad_type = input_237_pad_type_0, strides = var_6022, weight = op_6029_weight_0_to_fp16_affine_quantized, x = input_235_cast);
            tensor<fp16, [1, 512, 1, 4]> x_529_cast = add(x = x_519_cast, y = var_6029_cast);
            tensor<fp16, [1, 512, 1, 4]> var_6031_cast = abs(x = x_529_cast);
            tensor<fp16, []> var_6032_to_fp16 = const()[name = tensor<string, []>("op_6032_to_fp16"), val = tensor<fp16, []>(0.001953125)];
            tensor<fp16, [1, 512, 1, 4]> var_6033_cast = mul(x = var_6031_cast, y = var_6032_to_fp16);
            tensor<int32, [1]> var_6034 = const()[name = tensor<string, []>("op_6034"), val = tensor<int32, [1]>([1])];
            tensor<fp16, [1, 1, 1, 4]> scale_337_cast = reduce_sum(axes = var_6034, keep_dims = var_5931, x = var_6033_cast);
            tensor<fp16, []> scale_339_epsilon_0_to_fp16 = const()[name = tensor<string, []>("scale_339_epsilon_0_to_fp16"), val = tensor<fp16, []>(5.96046448e-08)];
            tensor<fp16, [1, 1, 1, 4]> scale_339_cast = rsqrt(epsilon = scale_339_epsilon_0_to_fp16, x = scale_337_cast);
            tensor<fp16, [1, 1, 1, 4]> scale_341_cast = mul(x = scale_339_cast, y = scale_339_cast);
            tensor<fp16, [1, 512, 1, 4]> x_531_cast = mul(x = x_529_cast, y = scale_341_cast);
            tensor<fp16, []> var_6039_to_fp16 = const()[name = tensor<string, []>("op_6039_to_fp16"), val = tensor<fp16, []>(-0.001953125)];
            tensor<fp16, [1, 512, 1, 4]> var_6040_cast = mul(x = x_531_cast, y = var_6039_to_fp16);
            tensor<int32, [1]> var_6041 = const()[name = tensor<string, []>("op_6041"), val = tensor<int32, [1]>([1])];
            tensor<fp16, [1, 1, 1, 4]> x_mean_113_cast = reduce_sum(axes = var_6041, keep_dims = var_5931, x = var_6040_cast);
            tensor<fp16, [1, 512, 1, 4]> x_zero_mean_113_cast = add(x = x_531_cast, y = x_mean_113_cast);
            tensor<fp16, []> var_6044_to_fp16 = const()[name = tensor<string, []>("op_6044_to_fp16"), val = tensor<fp16, []>(0.001953125)];
            tensor<fp16, [1, 512, 1, 4]> var_6045_cast = mul(x = x_zero_mean_113_cast, y = var_6044_to_fp16);
            tensor<fp16, [1, 512, 1, 4]> var_6046_cast = mul(x = var_6045_cast, y = x_zero_mean_113_cast);
            tensor<int32, [1]> var_6047 = const()[name = tensor<string, []>("op_6047"), val = tensor<int32, [1]>([1])];
            tensor<fp16, [1, 1, 1, 4]> x_var_113_cast = reduce_sum(axes = var_6047, keep_dims = var_5931, x = var_6046_cast);
            tensor<fp16, []> var_6049_to_fp16 = const()[name = tensor<string, []>("op_6049_to_fp16"), val = tensor<fp16, []>(1.00135803e-05)];
            tensor<fp16, [1, 1, 1, 4]> var_6050_cast = add(x = x_var_113_cast, y = var_6049_to_fp16);
            tensor<fp16, []> var_6051_epsilon_0_to_fp16 = const()[name = tensor<string, []>("op_6051_epsilon_0_to_fp16"), val = tensor<fp16, []>(5.96046448e-08)];
            tensor<fp16, [1, 1, 1, 4]> var_6051_cast = rsqrt(epsilon = var_6051_epsilon_0_to_fp16, x = var_6050_cast);
            tensor<fp16, [1, 512, 1, 4]> var_6052_cast = mul(x = x_zero_mean_113_cast, y = var_6051_cast);
            tensor<fp16, [512]> query_11_mean_0_to_fp16 = const()[name = tensor<string, []>("query_11_mean_0_to_fp16"), val = tensor<fp16, [512]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(59437568)))];
            tensor<fp16, [512]> query_11_variance_0_to_fp16 = const()[name = tensor<string, []>("query_11_variance_0_to_fp16"), val = tensor<fp16, [512]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(59438656)))];
            tensor<fp16, [512]> query_11_gamma_0_to_fp16 = const()[name = tensor<string, []>("query_11_gamma_0_to_fp16"), val = tensor<fp16, [512]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(59439744)))];
            tensor<fp16, [512]> query_11_beta_0_to_fp16 = const()[name = tensor<string, []>("query_11_beta_0_to_fp16"), val = tensor<fp16, [512]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(59440832)))];
            tensor<fp16, []> query_11_epsilon_0_to_fp16 = const()[name = tensor<string, []>("query_11_epsilon_0_to_fp16"), val = tensor<fp16, []>(1.00135803e-05)];
            tensor<fp16, [1, 512, 1, 4]> query_11_cast = batch_norm(beta = query_11_beta_0_to_fp16, epsilon = query_11_epsilon_0_to_fp16, gamma = query_11_gamma_0_to_fp16, mean = query_11_mean_0_to_fp16, variance = query_11_variance_0_to_fp16, x = var_6052_cast);
            tensor<int32, [2]> var_6072 = const()[name = tensor<string, []>("op_6072"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_6074 = const()[name = tensor<string, []>("op_6074"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> var_6076_pad_type_0 = const()[name = tensor<string, []>("op_6076_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> var_6076_pad_0 = const()[name = tensor<string, []>("op_6076_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [512, 512, 1, 1]> op_6071_to_fp16_affine_quantized = constexpr_affine_dequantize()[axis = tensor<int32, []>(0), name = tensor<string, []>("op_6071_to_fp16_affine_quantized"), quantized_data = tensor<int8, [512, 512, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(59441920))), scale = tensor<fp16, [512]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(59704704))), zero_point = tensor<int8, [512]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(59704128)))];
            tensor<fp16, [512]> primary_encoder_encoders_7_self_attn_linear_v_bias_to_fp16 = const()[name = tensor<string, []>("primary_encoder_encoders_7_self_attn_linear_v_bias_to_fp16"), val = tensor<fp16, [512]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(59705792)))];
            tensor<fp16, [1, 512, 1, 4]> var_6076_cast = conv(bias = primary_encoder_encoders_7_self_attn_linear_v_bias_to_fp16, dilations = var_6074, groups = var_5932, pad = var_6076_pad_0, pad_type = var_6076_pad_type_0, strides = var_6072, weight = op_6071_to_fp16_affine_quantized, x = query_11_cast);
            tensor<int32, [8]> tile_42 = const()[name = tensor<string, []>("tile_42"), val = tensor<int32, [8]>([64, 64, 64, 64, 64, 64, 64, 64])];
            tensor<int32, []> var_6077_axis_0 = const()[name = tensor<string, []>("op_6077_axis_0"), val = tensor<int32, []>(1)];
            tensor<fp16, [1, 64, 1, 4]> var_6077_cast_0, tensor<fp16, [1, 64, 1, 4]> var_6077_cast_1, tensor<fp16, [1, 64, 1, 4]> var_6077_cast_2, tensor<fp16, [1, 64, 1, 4]> var_6077_cast_3, tensor<fp16, [1, 64, 1, 4]> var_6077_cast_4, tensor<fp16, [1, 64, 1, 4]> var_6077_cast_5, tensor<fp16, [1, 64, 1, 4]> var_6077_cast_6, tensor<fp16, [1, 64, 1, 4]> var_6077_cast_7 = split(axis = var_6077_axis_0, split_sizes = tile_42, x = var_6076_cast);
            tensor<int32, [8]> tile_43 = const()[name = tensor<string, []>("tile_43"), val = tensor<int32, [8]>([1, 1, 1, 1, 1, 1, 1, 1])];
            tensor<int32, []> var_6086_axis_0 = const()[name = tensor<string, []>("op_6086_axis_0"), val = tensor<int32, []>(2)];
            tensor<fp16, [1, 64, 1, 128]> var_6086_cast_0, tensor<fp16, [1, 64, 1, 128]> var_6086_cast_1, tensor<fp16, [1, 64, 1, 128]> var_6086_cast_2, tensor<fp16, [1, 64, 1, 128]> var_6086_cast_3, tensor<fp16, [1, 64, 1, 128]> var_6086_cast_4, tensor<fp16, [1, 64, 1, 128]> var_6086_cast_5, tensor<fp16, [1, 64, 1, 128]> var_6086_cast_6, tensor<fp16, [1, 64, 1, 128]> var_6086_cast_7 = split(axis = var_6086_axis_0, split_sizes = tile_43, x = var_321_cast_7);
            tensor<bool, []> var_6096_interleave_0 = const()[name = tensor<string, []>("op_6096_interleave_0"), val = tensor<bool, []>(false)];
            tensor<fp16, [1, 64, 1, 132]> var_6096_cast = concat(axis = var_5929, interleave = var_6096_interleave_0, values = (var_6086_cast_0, var_6077_cast_0));
            tensor<int32, [4]> var_6100_begin_0 = const()[name = tensor<string, []>("op_6100_begin_0"), val = tensor<int32, [4]>([0, 0, 0, 4])];
            tensor<int32, [4]> var_6100_end_0 = const()[name = tensor<string, []>("op_6100_end_0"), val = tensor<int32, [4]>([1, 64, 1, 132])];
            tensor<bool, [4]> var_6100_end_mask_0 = const()[name = tensor<string, []>("op_6100_end_mask_0"), val = tensor<bool, [4]>([true, true, true, true])];
            tensor<fp16, [1, 64, 1, 128]> var_6100_cast = slice_by_index(begin = var_6100_begin_0, end = var_6100_end_0, end_mask = var_6100_end_mask_0, x = var_6096_cast);
            tensor<bool, []> var_6102_interleave_0 = const()[name = tensor<string, []>("op_6102_interleave_0"), val = tensor<bool, []>(false)];
            tensor<fp16, [1, 64, 1, 132]> var_6102_cast = concat(axis = var_5929, interleave = var_6102_interleave_0, values = (var_6086_cast_1, var_6077_cast_1));
            tensor<int32, [4]> var_6106_begin_0 = const()[name = tensor<string, []>("op_6106_begin_0"), val = tensor<int32, [4]>([0, 0, 0, 4])];
            tensor<int32, [4]> var_6106_end_0 = const()[name = tensor<string, []>("op_6106_end_0"), val = tensor<int32, [4]>([1, 64, 1, 132])];
            tensor<bool, [4]> var_6106_end_mask_0 = const()[name = tensor<string, []>("op_6106_end_mask_0"), val = tensor<bool, [4]>([true, true, true, true])];
            tensor<fp16, [1, 64, 1, 128]> var_6106_cast = slice_by_index(begin = var_6106_begin_0, end = var_6106_end_0, end_mask = var_6106_end_mask_0, x = var_6102_cast);
            tensor<bool, []> var_6108_interleave_0 = const()[name = tensor<string, []>("op_6108_interleave_0"), val = tensor<bool, []>(false)];
            tensor<fp16, [1, 64, 1, 132]> var_6108_cast = concat(axis = var_5929, interleave = var_6108_interleave_0, values = (var_6086_cast_2, var_6077_cast_2));
            tensor<int32, [4]> var_6112_begin_0 = const()[name = tensor<string, []>("op_6112_begin_0"), val = tensor<int32, [4]>([0, 0, 0, 4])];
            tensor<int32, [4]> var_6112_end_0 = const()[name = tensor<string, []>("op_6112_end_0"), val = tensor<int32, [4]>([1, 64, 1, 132])];
            tensor<bool, [4]> var_6112_end_mask_0 = const()[name = tensor<string, []>("op_6112_end_mask_0"), val = tensor<bool, [4]>([true, true, true, true])];
            tensor<fp16, [1, 64, 1, 128]> var_6112_cast = slice_by_index(begin = var_6112_begin_0, end = var_6112_end_0, end_mask = var_6112_end_mask_0, x = var_6108_cast);
            tensor<bool, []> var_6114_interleave_0 = const()[name = tensor<string, []>("op_6114_interleave_0"), val = tensor<bool, []>(false)];
            tensor<fp16, [1, 64, 1, 132]> var_6114_cast = concat(axis = var_5929, interleave = var_6114_interleave_0, values = (var_6086_cast_3, var_6077_cast_3));
            tensor<int32, [4]> var_6118_begin_0 = const()[name = tensor<string, []>("op_6118_begin_0"), val = tensor<int32, [4]>([0, 0, 0, 4])];
            tensor<int32, [4]> var_6118_end_0 = const()[name = tensor<string, []>("op_6118_end_0"), val = tensor<int32, [4]>([1, 64, 1, 132])];
            tensor<bool, [4]> var_6118_end_mask_0 = const()[name = tensor<string, []>("op_6118_end_mask_0"), val = tensor<bool, [4]>([true, true, true, true])];
            tensor<fp16, [1, 64, 1, 128]> var_6118_cast = slice_by_index(begin = var_6118_begin_0, end = var_6118_end_0, end_mask = var_6118_end_mask_0, x = var_6114_cast);
            tensor<bool, []> var_6120_interleave_0 = const()[name = tensor<string, []>("op_6120_interleave_0"), val = tensor<bool, []>(false)];
            tensor<fp16, [1, 64, 1, 132]> var_6120_cast = concat(axis = var_5929, interleave = var_6120_interleave_0, values = (var_6086_cast_4, var_6077_cast_4));
            tensor<int32, [4]> var_6124_begin_0 = const()[name = tensor<string, []>("op_6124_begin_0"), val = tensor<int32, [4]>([0, 0, 0, 4])];
            tensor<int32, [4]> var_6124_end_0 = const()[name = tensor<string, []>("op_6124_end_0"), val = tensor<int32, [4]>([1, 64, 1, 132])];
            tensor<bool, [4]> var_6124_end_mask_0 = const()[name = tensor<string, []>("op_6124_end_mask_0"), val = tensor<bool, [4]>([true, true, true, true])];
            tensor<fp16, [1, 64, 1, 128]> var_6124_cast = slice_by_index(begin = var_6124_begin_0, end = var_6124_end_0, end_mask = var_6124_end_mask_0, x = var_6120_cast);
            tensor<bool, []> var_6126_interleave_0 = const()[name = tensor<string, []>("op_6126_interleave_0"), val = tensor<bool, []>(false)];
            tensor<fp16, [1, 64, 1, 132]> var_6126_cast = concat(axis = var_5929, interleave = var_6126_interleave_0, values = (var_6086_cast_5, var_6077_cast_5));
            tensor<int32, [4]> var_6130_begin_0 = const()[name = tensor<string, []>("op_6130_begin_0"), val = tensor<int32, [4]>([0, 0, 0, 4])];
            tensor<int32, [4]> var_6130_end_0 = const()[name = tensor<string, []>("op_6130_end_0"), val = tensor<int32, [4]>([1, 64, 1, 132])];
            tensor<bool, [4]> var_6130_end_mask_0 = const()[name = tensor<string, []>("op_6130_end_mask_0"), val = tensor<bool, [4]>([true, true, true, true])];
            tensor<fp16, [1, 64, 1, 128]> var_6130_cast = slice_by_index(begin = var_6130_begin_0, end = var_6130_end_0, end_mask = var_6130_end_mask_0, x = var_6126_cast);
            tensor<bool, []> var_6132_interleave_0 = const()[name = tensor<string, []>("op_6132_interleave_0"), val = tensor<bool, []>(false)];
            tensor<fp16, [1, 64, 1, 132]> var_6132_cast = concat(axis = var_5929, interleave = var_6132_interleave_0, values = (var_6086_cast_6, var_6077_cast_6));
            tensor<int32, [4]> var_6136_begin_0 = const()[name = tensor<string, []>("op_6136_begin_0"), val = tensor<int32, [4]>([0, 0, 0, 4])];
            tensor<int32, [4]> var_6136_end_0 = const()[name = tensor<string, []>("op_6136_end_0"), val = tensor<int32, [4]>([1, 64, 1, 132])];
            tensor<bool, [4]> var_6136_end_mask_0 = const()[name = tensor<string, []>("op_6136_end_mask_0"), val = tensor<bool, [4]>([true, true, true, true])];
            tensor<fp16, [1, 64, 1, 128]> var_6136_cast = slice_by_index(begin = var_6136_begin_0, end = var_6136_end_0, end_mask = var_6136_end_mask_0, x = var_6132_cast);
            tensor<bool, []> var_6138_interleave_0 = const()[name = tensor<string, []>("op_6138_interleave_0"), val = tensor<bool, []>(false)];
            tensor<fp16, [1, 64, 1, 132]> var_6138_cast = concat(axis = var_5929, interleave = var_6138_interleave_0, values = (var_6086_cast_7, var_6077_cast_7));
            tensor<int32, [4]> var_6142_begin_0 = const()[name = tensor<string, []>("op_6142_begin_0"), val = tensor<int32, [4]>([0, 0, 0, 4])];
            tensor<int32, [4]> var_6142_end_0 = const()[name = tensor<string, []>("op_6142_end_0"), val = tensor<int32, [4]>([1, 64, 1, 132])];
            tensor<bool, [4]> var_6142_end_mask_0 = const()[name = tensor<string, []>("op_6142_end_mask_0"), val = tensor<bool, [4]>([true, true, true, true])];
            tensor<fp16, [1, 64, 1, 128]> var_6142_cast = slice_by_index(begin = var_6142_begin_0, end = var_6142_end_0, end_mask = var_6142_end_mask_0, x = var_6138_cast);
            tensor<bool, []> var_6144_interleave_0 = const()[name = tensor<string, []>("op_6144_interleave_0"), val = tensor<bool, []>(false)];
            tensor<fp16, [1, 64, 8, 128]> var_6144_cast = concat(axis = var_5926, interleave = var_6144_interleave_0, values = (var_6100_cast, var_6106_cast, var_6112_cast, var_6118_cast, var_6124_cast, var_6130_cast, var_6136_cast, var_6142_cast));
            tensor<string, []> var_6146_equation_0 = const()[name = tensor<string, []>("op_6146_equation_0"), val = tensor<string, []>("bnhd,bdhm->bnhm")];
            tensor<fp16, [1, 64, 1, 4]> var_6146_cast = einsum(equation = var_6146_equation_0, values = (var_6100_cast, input_205_cast));
            tensor<string, []> var_6148_equation_0 = const()[name = tensor<string, []>("op_6148_equation_0"), val = tensor<string, []>("bnhd,bdhm->bnhm")];
            tensor<fp16, [1, 64, 1, 4]> var_6148_cast = einsum(equation = var_6148_equation_0, values = (var_6106_cast, input_207_cast));
            tensor<string, []> var_6150_equation_0 = const()[name = tensor<string, []>("op_6150_equation_0"), val = tensor<string, []>("bnhd,bdhm->bnhm")];
            tensor<fp16, [1, 64, 1, 4]> var_6150_cast = einsum(equation = var_6150_equation_0, values = (var_6112_cast, input_209_cast));
            tensor<string, []> var_6152_equation_0 = const()[name = tensor<string, []>("op_6152_equation_0"), val = tensor<string, []>("bnhd,bdhm->bnhm")];
            tensor<fp16, [1, 64, 1, 4]> var_6152_cast = einsum(equation = var_6152_equation_0, values = (var_6118_cast, input_211_cast));
            tensor<string, []> var_6154_equation_0 = const()[name = tensor<string, []>("op_6154_equation_0"), val = tensor<string, []>("bnhd,bdhm->bnhm")];
            tensor<fp16, [1, 64, 1, 4]> var_6154_cast = einsum(equation = var_6154_equation_0, values = (var_6124_cast, input_213_cast));
            tensor<string, []> var_6156_equation_0 = const()[name = tensor<string, []>("op_6156_equation_0"), val = tensor<string, []>("bnhd,bdhm->bnhm")];
            tensor<fp16, [1, 64, 1, 4]> var_6156_cast = einsum(equation = var_6156_equation_0, values = (var_6130_cast, input_215_cast));
            tensor<string, []> var_6158_equation_0 = const()[name = tensor<string, []>("op_6158_equation_0"), val = tensor<string, []>("bnhd,bdhm->bnhm")];
            tensor<fp16, [1, 64, 1, 4]> var_6158_cast = einsum(equation = var_6158_equation_0, values = (var_6136_cast, input_217_cast));
            tensor<string, []> var_6160_equation_0 = const()[name = tensor<string, []>("op_6160_equation_0"), val = tensor<string, []>("bnhd,bdhm->bnhm")];
            tensor<fp16, [1, 64, 1, 4]> var_6160_cast = einsum(equation = var_6160_equation_0, values = (var_6142_cast, input_219_cast));
            tensor<bool, []> y_27_interleave_0 = const()[name = tensor<string, []>("y_27_interleave_0"), val = tensor<bool, []>(false)];
            tensor<fp16, [1, 512, 1, 4]> y_27_cast = concat(axis = var_5932, interleave = y_27_interleave_0, values = (var_6146_cast, var_6148_cast, var_6150_cast, var_6152_cast, var_6154_cast, var_6156_cast, var_6158_cast, var_6160_cast));
            tensor<int32, [2]> var_6167 = const()[name = tensor<string, []>("op_6167"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_6169 = const()[name = tensor<string, []>("op_6169"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> input_239_pad_type_0 = const()[name = tensor<string, []>("input_239_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> input_239_pad_0 = const()[name = tensor<string, []>("input_239_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [512, 512, 1, 1]> op_6166_to_fp16_affine_quantized = constexpr_affine_dequantize()[axis = tensor<int32, []>(0), name = tensor<string, []>("op_6166_to_fp16_affine_quantized"), quantized_data = tensor<int8, [512, 512, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(59706880))), scale = tensor<fp16, [512]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(59969664))), zero_point = tensor<int8, [512]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(59969088)))];
            tensor<fp16, [512]> primary_encoder_encoders_7_self_attn_linear_out_bias_to_fp16 = const()[name = tensor<string, []>("primary_encoder_encoders_7_self_attn_linear_out_bias_to_fp16"), val = tensor<fp16, [512]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(59970752)))];
            tensor<fp16, [1, 512, 1, 4]> input_239_cast = conv(bias = primary_encoder_encoders_7_self_attn_linear_out_bias_to_fp16, dilations = var_6169, groups = var_5932, pad = input_239_pad_0, pad_type = input_239_pad_type_0, strides = var_6167, weight = op_6166_to_fp16_affine_quantized, x = y_27_cast);
            tensor<fp16, [1, 512, 1, 4]> x_533_cast = add(x = x_529_cast, y = input_239_cast);
            tensor<fp16, [1, 512, 1, 4]> var_6177_cast = abs(x = x_533_cast);
            tensor<fp16, []> var_6178_to_fp16 = const()[name = tensor<string, []>("op_6178_to_fp16"), val = tensor<fp16, []>(0.001953125)];
            tensor<fp16, [1, 512, 1, 4]> var_6179_cast = mul(x = var_6177_cast, y = var_6178_to_fp16);
            tensor<int32, [1]> var_6180 = const()[name = tensor<string, []>("op_6180"), val = tensor<int32, [1]>([1])];
            tensor<fp16, [1, 1, 1, 4]> scale_343_cast = reduce_sum(axes = var_6180, keep_dims = var_5931, x = var_6179_cast);
            tensor<fp16, []> scale_345_epsilon_0_to_fp16 = const()[name = tensor<string, []>("scale_345_epsilon_0_to_fp16"), val = tensor<fp16, []>(5.96046448e-08)];
            tensor<fp16, [1, 1, 1, 4]> scale_345_cast = rsqrt(epsilon = scale_345_epsilon_0_to_fp16, x = scale_343_cast);
            tensor<fp16, [1, 1, 1, 4]> scale_347_cast = mul(x = scale_345_cast, y = scale_345_cast);
            tensor<fp16, [1, 512, 1, 4]> x_535_cast = mul(x = x_533_cast, y = scale_347_cast);
            tensor<fp16, []> var_6185_to_fp16 = const()[name = tensor<string, []>("op_6185_to_fp16"), val = tensor<fp16, []>(-0.001953125)];
            tensor<fp16, [1, 512, 1, 4]> var_6186_cast = mul(x = x_535_cast, y = var_6185_to_fp16);
            tensor<int32, [1]> var_6187 = const()[name = tensor<string, []>("op_6187"), val = tensor<int32, [1]>([1])];
            tensor<fp16, [1, 1, 1, 4]> x_mean_115_cast = reduce_sum(axes = var_6187, keep_dims = var_5931, x = var_6186_cast);
            tensor<fp16, [1, 512, 1, 4]> x_zero_mean_115_cast = add(x = x_535_cast, y = x_mean_115_cast);
            tensor<fp16, []> var_6190_to_fp16 = const()[name = tensor<string, []>("op_6190_to_fp16"), val = tensor<fp16, []>(0.001953125)];
            tensor<fp16, [1, 512, 1, 4]> var_6191_cast = mul(x = x_zero_mean_115_cast, y = var_6190_to_fp16);
            tensor<fp16, [1, 512, 1, 4]> var_6192_cast = mul(x = var_6191_cast, y = x_zero_mean_115_cast);
            tensor<int32, [1]> var_6193 = const()[name = tensor<string, []>("op_6193"), val = tensor<int32, [1]>([1])];
            tensor<fp16, [1, 1, 1, 4]> x_var_115_cast = reduce_sum(axes = var_6193, keep_dims = var_5931, x = var_6192_cast);
            tensor<fp16, []> var_6195_to_fp16 = const()[name = tensor<string, []>("op_6195_to_fp16"), val = tensor<fp16, []>(1.00135803e-05)];
            tensor<fp16, [1, 1, 1, 4]> var_6196_cast = add(x = x_var_115_cast, y = var_6195_to_fp16);
            tensor<fp16, []> var_6197_epsilon_0_to_fp16 = const()[name = tensor<string, []>("op_6197_epsilon_0_to_fp16"), val = tensor<fp16, []>(5.96046448e-08)];
            tensor<fp16, [1, 1, 1, 4]> var_6197_cast = rsqrt(epsilon = var_6197_epsilon_0_to_fp16, x = var_6196_cast);
            tensor<fp16, [1, 512, 1, 4]> var_6198_cast = mul(x = x_zero_mean_115_cast, y = var_6197_cast);
            tensor<fp16, [512]> x_537_mean_0_to_fp16 = const()[name = tensor<string, []>("x_537_mean_0_to_fp16"), val = tensor<fp16, [512]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(59971840)))];
            tensor<fp16, [512]> x_537_variance_0_to_fp16 = const()[name = tensor<string, []>("x_537_variance_0_to_fp16"), val = tensor<fp16, [512]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(59972928)))];
            tensor<fp16, [512]> x_537_gamma_0_to_fp16 = const()[name = tensor<string, []>("x_537_gamma_0_to_fp16"), val = tensor<fp16, [512]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(59974016)))];
            tensor<fp16, [512]> x_537_beta_0_to_fp16 = const()[name = tensor<string, []>("x_537_beta_0_to_fp16"), val = tensor<fp16, [512]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(59975104)))];
            tensor<fp16, []> x_537_epsilon_0_to_fp16 = const()[name = tensor<string, []>("x_537_epsilon_0_to_fp16"), val = tensor<fp16, []>(1.00135803e-05)];
            tensor<fp16, [1, 512, 1, 4]> x_537_cast = batch_norm(beta = x_537_beta_0_to_fp16, epsilon = x_537_epsilon_0_to_fp16, gamma = x_537_gamma_0_to_fp16, mean = x_537_mean_0_to_fp16, variance = x_537_variance_0_to_fp16, x = var_6198_cast);
            tensor<bool, []> x_539_interleave_0 = const()[name = tensor<string, []>("x_539_interleave_0"), val = tensor<bool, []>(false)];
            tensor<fp16, [1, 512, 1, 36]> x_539_cast = concat(axis = var_5929, interleave = x_539_interleave_0, values = (var_301_cast_7, x_537_cast));
            tensor<int32, [4]> x_541_begin_0 = const()[name = tensor<string, []>("x_541_begin_0"), val = tensor<int32, [4]>([0, 0, 0, 12])];
            tensor<int32, [4]> x_541_end_0 = const()[name = tensor<string, []>("x_541_end_0"), val = tensor<int32, [4]>([1, 512, 1, 36])];
            tensor<bool, [4]> x_541_end_mask_0 = const()[name = tensor<string, []>("x_541_end_mask_0"), val = tensor<bool, [4]>([true, true, true, true])];
            tensor<fp16, [1, 512, 1, 24]> x_541_cast = slice_by_index(begin = x_541_begin_0, end = x_541_end_0, end_mask = x_541_end_mask_0, x = x_539_cast);
            tensor<int32, [4]> x_543_begin_0 = const()[name = tensor<string, []>("x_543_begin_0"), val = tensor<int32, [4]>([0, 0, 0, 12])];
            tensor<int32, [4]> x_543_end_0 = const()[name = tensor<string, []>("x_543_end_0"), val = tensor<int32, [4]>([1, 512, 1, 24])];
            tensor<bool, [4]> x_543_end_mask_0 = const()[name = tensor<string, []>("x_543_end_mask_0"), val = tensor<bool, [4]>([true, true, true, true])];
            tensor<fp16, [1, 512, 1, 12]> x_543_cast = slice_by_index(begin = x_543_begin_0, end = x_543_end_0, end_mask = x_543_end_mask_0, x = x_541_cast);
            tensor<int32, [4]> x_545_begin_0 = const()[name = tensor<string, []>("x_545_begin_0"), val = tensor<int32, [4]>([0, 0, 0, 1])];
            tensor<int32, [4]> x_545_end_0 = const()[name = tensor<string, []>("x_545_end_0"), val = tensor<int32, [4]>([1, 512, 1, 12])];
            tensor<bool, [4]> x_545_end_mask_0 = const()[name = tensor<string, []>("x_545_end_mask_0"), val = tensor<bool, [4]>([true, true, true, true])];
            tensor<fp16, [1, 512, 1, 11]> x_545_cast = slice_by_index(begin = x_545_begin_0, end = x_545_end_0, end_mask = x_545_end_mask_0, x = x_543_cast);
            tensor<int32, [4]> var_6238_begin_0 = const()[name = tensor<string, []>("op_6238_begin_0"), val = tensor<int32, [4]>([0, 0, 0, -7])];
            tensor<int32, [4]> var_6238_end_0 = const()[name = tensor<string, []>("op_6238_end_0"), val = tensor<int32, [4]>([1, 512, 1, 11])];
            tensor<bool, [4]> var_6238_end_mask_0 = const()[name = tensor<string, []>("op_6238_end_mask_0"), val = tensor<bool, [4]>([true, true, true, true])];
            tensor<fp16, [1, 512, 1, 7]> var_6238_cast = slice_by_index(begin = var_6238_begin_0, end = var_6238_end_0, end_mask = var_6238_end_mask_0, x = x_545_cast);
            tensor<int32, [2]> var_6240 = const()[name = tensor<string, []>("op_6240"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_6242 = const()[name = tensor<string, []>("op_6242"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> x_547_pad_type_0 = const()[name = tensor<string, []>("x_547_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> x_547_pad_0 = const()[name = tensor<string, []>("x_547_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [1024, 512, 1, 1]> op_6239_to_fp16_affine_quantized = constexpr_affine_dequantize()[axis = tensor<int32, []>(0), name = tensor<string, []>("op_6239_to_fp16_affine_quantized"), quantized_data = tensor<int8, [1024, 512, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(59976192))), scale = tensor<fp16, [1024]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(60501632))), zero_point = tensor<int8, [1024]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(60500544)))];
            tensor<fp16, [1024]> primary_encoder_encoders_7_conv_module_pointwise_conv1_bias_to_fp16 = const()[name = tensor<string, []>("primary_encoder_encoders_7_conv_module_pointwise_conv1_bias_to_fp16"), val = tensor<fp16, [1024]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(60503744)))];
            tensor<fp16, [1, 1024, 1, 11]> x_547_cast = conv(bias = primary_encoder_encoders_7_conv_module_pointwise_conv1_bias_to_fp16, dilations = var_6242, groups = var_5932, pad = x_547_pad_0, pad_type = x_547_pad_type_0, strides = var_6240, weight = op_6239_to_fp16_affine_quantized, x = x_545_cast);
            tensor<int32, [4]> var_6251_begin_0 = const()[name = tensor<string, []>("op_6251_begin_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<int32, [4]> var_6251_end_0 = const()[name = tensor<string, []>("op_6251_end_0"), val = tensor<int32, [4]>([1, 512, 1, 11])];
            tensor<bool, [4]> var_6251_end_mask_0 = const()[name = tensor<string, []>("op_6251_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [1, 512, 1, 11]> var_6251_cast = slice_by_index(begin = var_6251_begin_0, end = var_6251_end_0, end_mask = var_6251_end_mask_0, x = x_547_cast);
            tensor<int32, [4]> var_6255_begin_0 = const()[name = tensor<string, []>("op_6255_begin_0"), val = tensor<int32, [4]>([0, 512, 0, 0])];
            tensor<int32, [4]> var_6255_end_0 = const()[name = tensor<string, []>("op_6255_end_0"), val = tensor<int32, [4]>([1, 1024, 1, 11])];
            tensor<bool, [4]> var_6255_end_mask_0 = const()[name = tensor<string, []>("op_6255_end_mask_0"), val = tensor<bool, [4]>([true, true, true, true])];
            tensor<fp16, [1, 512, 1, 11]> var_6255_cast = slice_by_index(begin = var_6255_begin_0, end = var_6255_end_0, end_mask = var_6255_end_mask_0, x = x_547_cast);
            tensor<fp16, [1, 512, 1, 11]> var_6258_cast = sigmoid(x = var_6255_cast);
            tensor<fp16, [1, 512, 1, 11]> x_549_cast = mul(x = var_6251_cast, y = var_6258_cast);
            tensor<int32, [2]> var_6261 = const()[name = tensor<string, []>("op_6261"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_6263 = const()[name = tensor<string, []>("op_6263"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> x_551_pad_type_0 = const()[name = tensor<string, []>("x_551_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> x_551_pad_0 = const()[name = tensor<string, []>("x_551_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [512, 1, 1, 8]> op_6260_to_fp16_affine_quantized = constexpr_affine_dequantize()[axis = tensor<int32, []>(0), name = tensor<string, []>("op_6260_to_fp16_affine_quantized"), quantized_data = tensor<int8, [512, 1, 1, 8]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(60505856))), scale = tensor<fp16, [512]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(60510592))), zero_point = tensor<int8, [512]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(60510016)))];
            tensor<fp16, [512]> primary_encoder_encoders_7_conv_module_depthwise_conv_bias_to_fp16 = const()[name = tensor<string, []>("primary_encoder_encoders_7_conv_module_depthwise_conv_bias_to_fp16"), val = tensor<fp16, [512]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(60511680)))];
            tensor<fp16, [1, 512, 1, 4]> x_551_cast = conv(bias = primary_encoder_encoders_7_conv_module_depthwise_conv_bias_to_fp16, dilations = var_6263, groups = var_5920, pad = x_551_pad_0, pad_type = x_551_pad_type_0, strides = var_6261, weight = op_6260_to_fp16_affine_quantized, x = x_549_cast);
            tensor<fp16, [1, 512, 1, 4]> var_6266_cast = abs(x = x_551_cast);
            tensor<fp16, []> var_6267_to_fp16 = const()[name = tensor<string, []>("op_6267_to_fp16"), val = tensor<fp16, []>(0.001953125)];
            tensor<fp16, [1, 512, 1, 4]> var_6268_cast = mul(x = var_6266_cast, y = var_6267_to_fp16);
            tensor<int32, [1]> var_6269 = const()[name = tensor<string, []>("op_6269"), val = tensor<int32, [1]>([1])];
            tensor<fp16, [1, 1, 1, 4]> scale_349_cast = reduce_sum(axes = var_6269, keep_dims = var_5931, x = var_6268_cast);
            tensor<fp16, []> scale_351_epsilon_0_to_fp16 = const()[name = tensor<string, []>("scale_351_epsilon_0_to_fp16"), val = tensor<fp16, []>(5.96046448e-08)];
            tensor<fp16, [1, 1, 1, 4]> scale_351_cast = rsqrt(epsilon = scale_351_epsilon_0_to_fp16, x = scale_349_cast);
            tensor<fp16, [1, 1, 1, 4]> scale_353_cast = mul(x = scale_351_cast, y = scale_351_cast);
            tensor<fp16, [1, 512, 1, 4]> x_553_cast = mul(x = x_551_cast, y = scale_353_cast);
            tensor<fp16, []> var_6274_to_fp16 = const()[name = tensor<string, []>("op_6274_to_fp16"), val = tensor<fp16, []>(-0.001953125)];
            tensor<fp16, [1, 512, 1, 4]> var_6275_cast = mul(x = x_553_cast, y = var_6274_to_fp16);
            tensor<int32, [1]> var_6276 = const()[name = tensor<string, []>("op_6276"), val = tensor<int32, [1]>([1])];
            tensor<fp16, [1, 1, 1, 4]> x_mean_117_cast = reduce_sum(axes = var_6276, keep_dims = var_5931, x = var_6275_cast);
            tensor<fp16, [1, 512, 1, 4]> x_zero_mean_117_cast = add(x = x_553_cast, y = x_mean_117_cast);
            tensor<fp16, []> var_6279_to_fp16 = const()[name = tensor<string, []>("op_6279_to_fp16"), val = tensor<fp16, []>(0.001953125)];
            tensor<fp16, [1, 512, 1, 4]> var_6280_cast = mul(x = x_zero_mean_117_cast, y = var_6279_to_fp16);
            tensor<fp16, [1, 512, 1, 4]> var_6281_cast = mul(x = var_6280_cast, y = x_zero_mean_117_cast);
            tensor<int32, [1]> var_6282 = const()[name = tensor<string, []>("op_6282"), val = tensor<int32, [1]>([1])];
            tensor<fp16, [1, 1, 1, 4]> x_var_117_cast = reduce_sum(axes = var_6282, keep_dims = var_5931, x = var_6281_cast);
            tensor<fp16, []> var_6284_to_fp16 = const()[name = tensor<string, []>("op_6284_to_fp16"), val = tensor<fp16, []>(1.00135803e-05)];
            tensor<fp16, [1, 1, 1, 4]> var_6285_cast = add(x = x_var_117_cast, y = var_6284_to_fp16);
            tensor<fp16, []> var_6286_epsilon_0_to_fp16 = const()[name = tensor<string, []>("op_6286_epsilon_0_to_fp16"), val = tensor<fp16, []>(5.96046448e-08)];
            tensor<fp16, [1, 1, 1, 4]> var_6286_cast = rsqrt(epsilon = var_6286_epsilon_0_to_fp16, x = var_6285_cast);
            tensor<fp16, [1, 512, 1, 4]> var_6287_cast = mul(x = x_zero_mean_117_cast, y = var_6286_cast);
            tensor<fp16, [512]> input_241_mean_0_to_fp16 = const()[name = tensor<string, []>("input_241_mean_0_to_fp16"), val = tensor<fp16, [512]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(60512768)))];
            tensor<fp16, [512]> input_241_variance_0_to_fp16 = const()[name = tensor<string, []>("input_241_variance_0_to_fp16"), val = tensor<fp16, [512]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(60513856)))];
            tensor<fp16, [512]> input_241_gamma_0_to_fp16 = const()[name = tensor<string, []>("input_241_gamma_0_to_fp16"), val = tensor<fp16, [512]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(60514944)))];
            tensor<fp16, [512]> input_241_beta_0_to_fp16 = const()[name = tensor<string, []>("input_241_beta_0_to_fp16"), val = tensor<fp16, [512]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(60516032)))];
            tensor<fp16, []> input_241_epsilon_0_to_fp16 = const()[name = tensor<string, []>("input_241_epsilon_0_to_fp16"), val = tensor<fp16, []>(1.00135803e-05)];
            tensor<fp16, [1, 512, 1, 4]> input_241_cast = batch_norm(beta = input_241_beta_0_to_fp16, epsilon = input_241_epsilon_0_to_fp16, gamma = input_241_gamma_0_to_fp16, mean = input_241_mean_0_to_fp16, variance = input_241_variance_0_to_fp16, x = var_6287_cast);
            tensor<fp16, [1, 512, 1, 4]> x_555_cast = silu(x = input_241_cast);
            tensor<int32, [2]> var_6296 = const()[name = tensor<string, []>("op_6296"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_6298 = const()[name = tensor<string, []>("op_6298"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> input_243_pad_type_0 = const()[name = tensor<string, []>("input_243_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> input_243_pad_0 = const()[name = tensor<string, []>("input_243_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [512, 512, 1, 1]> op_6295_to_fp16_affine_quantized = constexpr_affine_dequantize()[axis = tensor<int32, []>(0), name = tensor<string, []>("op_6295_to_fp16_affine_quantized"), quantized_data = tensor<int8, [512, 512, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(60517120))), scale = tensor<fp16, [512]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(60779904))), zero_point = tensor<int8, [512]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(60779328)))];
            tensor<fp16, [512]> primary_encoder_encoders_7_conv_module_pointwise_conv2_bias_to_fp16 = const()[name = tensor<string, []>("primary_encoder_encoders_7_conv_module_pointwise_conv2_bias_to_fp16"), val = tensor<fp16, [512]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(60780992)))];
            tensor<fp16, [1, 512, 1, 4]> input_243_cast = conv(bias = primary_encoder_encoders_7_conv_module_pointwise_conv2_bias_to_fp16, dilations = var_6298, groups = var_5932, pad = input_243_pad_0, pad_type = input_243_pad_type_0, strides = var_6296, weight = op_6295_to_fp16_affine_quantized, x = x_555_cast);
            tensor<fp16, [1, 512, 1, 4]> x_559_cast = add(x = x_533_cast, y = input_243_cast);
            tensor<fp16, [1, 512, 1, 4]> var_6306_cast = abs(x = x_559_cast);
            tensor<fp16, []> var_6307_to_fp16 = const()[name = tensor<string, []>("op_6307_to_fp16"), val = tensor<fp16, []>(0.001953125)];
            tensor<fp16, [1, 512, 1, 4]> var_6308_cast = mul(x = var_6306_cast, y = var_6307_to_fp16);
            tensor<int32, [1]> var_6309 = const()[name = tensor<string, []>("op_6309"), val = tensor<int32, [1]>([1])];
            tensor<fp16, [1, 1, 1, 4]> scale_355_cast = reduce_sum(axes = var_6309, keep_dims = var_5931, x = var_6308_cast);
            tensor<fp16, []> scale_357_epsilon_0_to_fp16 = const()[name = tensor<string, []>("scale_357_epsilon_0_to_fp16"), val = tensor<fp16, []>(5.96046448e-08)];
            tensor<fp16, [1, 1, 1, 4]> scale_357_cast = rsqrt(epsilon = scale_357_epsilon_0_to_fp16, x = scale_355_cast);
            tensor<fp16, [1, 1, 1, 4]> scale_359_cast = mul(x = scale_357_cast, y = scale_357_cast);
            tensor<fp16, [1, 512, 1, 4]> x_561_cast = mul(x = x_559_cast, y = scale_359_cast);
            tensor<fp16, []> var_6314_to_fp16 = const()[name = tensor<string, []>("op_6314_to_fp16"), val = tensor<fp16, []>(-0.001953125)];
            tensor<fp16, [1, 512, 1, 4]> var_6315_cast = mul(x = x_561_cast, y = var_6314_to_fp16);
            tensor<int32, [1]> var_6316 = const()[name = tensor<string, []>("op_6316"), val = tensor<int32, [1]>([1])];
            tensor<fp16, [1, 1, 1, 4]> x_mean_119_cast = reduce_sum(axes = var_6316, keep_dims = var_5931, x = var_6315_cast);
            tensor<fp16, [1, 512, 1, 4]> x_zero_mean_119_cast = add(x = x_561_cast, y = x_mean_119_cast);
            tensor<fp16, []> var_6319_to_fp16 = const()[name = tensor<string, []>("op_6319_to_fp16"), val = tensor<fp16, []>(0.001953125)];
            tensor<fp16, [1, 512, 1, 4]> var_6320_cast = mul(x = x_zero_mean_119_cast, y = var_6319_to_fp16);
            tensor<fp16, [1, 512, 1, 4]> var_6321_cast = mul(x = var_6320_cast, y = x_zero_mean_119_cast);
            tensor<int32, [1]> var_6322 = const()[name = tensor<string, []>("op_6322"), val = tensor<int32, [1]>([1])];
            tensor<fp16, [1, 1, 1, 4]> x_var_119_cast = reduce_sum(axes = var_6322, keep_dims = var_5931, x = var_6321_cast);
            tensor<fp16, []> var_6324_to_fp16 = const()[name = tensor<string, []>("op_6324_to_fp16"), val = tensor<fp16, []>(1.00135803e-05)];
            tensor<fp16, [1, 1, 1, 4]> var_6325_cast = add(x = x_var_119_cast, y = var_6324_to_fp16);
            tensor<fp16, []> var_6326_epsilon_0_to_fp16 = const()[name = tensor<string, []>("op_6326_epsilon_0_to_fp16"), val = tensor<fp16, []>(5.96046448e-08)];
            tensor<fp16, [1, 1, 1, 4]> var_6326_cast = rsqrt(epsilon = var_6326_epsilon_0_to_fp16, x = var_6325_cast);
            tensor<fp16, [1, 512, 1, 4]> var_6327_cast = mul(x = x_zero_mean_119_cast, y = var_6326_cast);
            tensor<fp16, [512]> x_563_mean_0_to_fp16 = const()[name = tensor<string, []>("x_563_mean_0_to_fp16"), val = tensor<fp16, [512]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(60782080)))];
            tensor<fp16, [512]> x_563_variance_0_to_fp16 = const()[name = tensor<string, []>("x_563_variance_0_to_fp16"), val = tensor<fp16, [512]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(60783168)))];
            tensor<fp16, [512]> x_563_gamma_0_to_fp16 = const()[name = tensor<string, []>("x_563_gamma_0_to_fp16"), val = tensor<fp16, [512]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(60784256)))];
            tensor<fp16, [512]> x_563_beta_0_to_fp16 = const()[name = tensor<string, []>("x_563_beta_0_to_fp16"), val = tensor<fp16, [512]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(60785344)))];
            tensor<fp16, []> x_563_epsilon_0_to_fp16 = const()[name = tensor<string, []>("x_563_epsilon_0_to_fp16"), val = tensor<fp16, []>(1.00135803e-05)];
            tensor<fp16, [1, 512, 1, 4]> x_563_cast = batch_norm(beta = x_563_beta_0_to_fp16, epsilon = x_563_epsilon_0_to_fp16, gamma = x_563_gamma_0_to_fp16, mean = x_563_mean_0_to_fp16, variance = x_563_variance_0_to_fp16, x = var_6327_cast);
            tensor<int32, [2]> var_6338 = const()[name = tensor<string, []>("op_6338"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_6340 = const()[name = tensor<string, []>("op_6340"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> input_245_pad_type_0 = const()[name = tensor<string, []>("input_245_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> input_245_pad_0 = const()[name = tensor<string, []>("input_245_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [2048, 512, 1, 1]> op_6337_to_fp16_affine_quantized = constexpr_affine_dequantize()[axis = tensor<int32, []>(0), name = tensor<string, []>("op_6337_to_fp16_affine_quantized"), quantized_data = tensor<int8, [2048, 512, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(60786432))), scale = tensor<fp16, [2048]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(61837184))), zero_point = tensor<int8, [2048]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(61835072)))];
            tensor<fp16, [2048]> primary_encoder_encoders_7_feed_forward_w_1_bias_to_fp16 = const()[name = tensor<string, []>("primary_encoder_encoders_7_feed_forward_w_1_bias_to_fp16"), val = tensor<fp16, [2048]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(61841344)))];
            tensor<fp16, [1, 2048, 1, 4]> input_245_cast = conv(bias = primary_encoder_encoders_7_feed_forward_w_1_bias_to_fp16, dilations = var_6340, groups = var_5932, pad = input_245_pad_0, pad_type = input_245_pad_type_0, strides = var_6338, weight = op_6337_to_fp16_affine_quantized, x = x_563_cast);
            tensor<fp16, [1, 2048, 1, 4]> input_247_cast = silu(x = input_245_cast);
            tensor<int32, [2]> var_6349 = const()[name = tensor<string, []>("op_6349"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_6351 = const()[name = tensor<string, []>("op_6351"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> input_249_pad_type_0 = const()[name = tensor<string, []>("input_249_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> input_249_pad_0 = const()[name = tensor<string, []>("input_249_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [512, 2048, 1, 1]> op_6356_weight_0_to_fp16_affine_quantized = constexpr_affine_dequantize()[axis = tensor<int32, []>(0), name = tensor<string, []>("op_6356_weight_0_to_fp16_affine_quantized"), quantized_data = tensor<int8, [512, 2048, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(61845504))), scale = tensor<fp16, [512]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(62894720))), zero_point = tensor<int8, [512]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(62894144)))];
            tensor<fp16, [512]> var_6356_bias_0_to_fp16 = const()[name = tensor<string, []>("op_6356_bias_0_to_fp16"), val = tensor<fp16, [512]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(62895808)))];
            tensor<fp16, [1, 512, 1, 4]> var_6356_cast = conv(bias = var_6356_bias_0_to_fp16, dilations = var_6351, groups = var_5932, pad = input_249_pad_0, pad_type = input_249_pad_type_0, strides = var_6349, weight = op_6356_weight_0_to_fp16_affine_quantized, x = input_247_cast);
            tensor<fp16, [1, 512, 1, 4]> x_569_cast = add(x = x_559_cast, y = var_6356_cast);
            tensor<fp16, [1, 512, 1, 4]> var_6358_cast = abs(x = x_569_cast);
            tensor<fp16, []> var_6359_to_fp16 = const()[name = tensor<string, []>("op_6359_to_fp16"), val = tensor<fp16, []>(0.001953125)];
            tensor<fp16, [1, 512, 1, 4]> var_6360_cast = mul(x = var_6358_cast, y = var_6359_to_fp16);
            tensor<int32, [1]> var_6361 = const()[name = tensor<string, []>("op_6361"), val = tensor<int32, [1]>([1])];
            tensor<fp16, [1, 1, 1, 4]> scale_361_cast = reduce_sum(axes = var_6361, keep_dims = var_5931, x = var_6360_cast);
            tensor<fp16, []> scale_363_epsilon_0_to_fp16 = const()[name = tensor<string, []>("scale_363_epsilon_0_to_fp16"), val = tensor<fp16, []>(5.96046448e-08)];
            tensor<fp16, [1, 1, 1, 4]> scale_363_cast = rsqrt(epsilon = scale_363_epsilon_0_to_fp16, x = scale_361_cast);
            tensor<fp16, [1, 1, 1, 4]> scale_365_cast = mul(x = scale_363_cast, y = scale_363_cast);
            tensor<fp16, [1, 512, 1, 4]> x_571_cast = mul(x = x_569_cast, y = scale_365_cast);
            tensor<fp16, []> var_6366_to_fp16 = const()[name = tensor<string, []>("op_6366_to_fp16"), val = tensor<fp16, []>(-0.001953125)];
            tensor<fp16, [1, 512, 1, 4]> var_6367_cast = mul(x = x_571_cast, y = var_6366_to_fp16);
            tensor<int32, [1]> var_6368 = const()[name = tensor<string, []>("op_6368"), val = tensor<int32, [1]>([1])];
            tensor<fp16, [1, 1, 1, 4]> x_mean_121_cast = reduce_sum(axes = var_6368, keep_dims = var_5931, x = var_6367_cast);
            tensor<fp16, [1, 512, 1, 4]> x_zero_mean_121_cast = add(x = x_571_cast, y = x_mean_121_cast);
            tensor<fp16, []> var_6371_to_fp16 = const()[name = tensor<string, []>("op_6371_to_fp16"), val = tensor<fp16, []>(0.001953125)];
            tensor<fp16, [1, 512, 1, 4]> var_6372_cast = mul(x = x_zero_mean_121_cast, y = var_6371_to_fp16);
            tensor<fp16, [1, 512, 1, 4]> var_6373_cast = mul(x = var_6372_cast, y = x_zero_mean_121_cast);
            tensor<int32, [1]> var_6374 = const()[name = tensor<string, []>("op_6374"), val = tensor<int32, [1]>([1])];
            tensor<fp16, [1, 1, 1, 4]> x_var_121_cast = reduce_sum(axes = var_6374, keep_dims = var_5931, x = var_6373_cast);
            tensor<fp16, []> var_6376_to_fp16 = const()[name = tensor<string, []>("op_6376_to_fp16"), val = tensor<fp16, []>(1.00135803e-05)];
            tensor<fp16, [1, 1, 1, 4]> var_6377_cast = add(x = x_var_121_cast, y = var_6376_to_fp16);
            tensor<fp16, []> var_6378_epsilon_0_to_fp16 = const()[name = tensor<string, []>("op_6378_epsilon_0_to_fp16"), val = tensor<fp16, []>(5.96046448e-08)];
            tensor<fp16, [1, 1, 1, 4]> var_6378_cast = rsqrt(epsilon = var_6378_epsilon_0_to_fp16, x = var_6377_cast);
            tensor<fp16, [1, 512, 1, 4]> var_6379_cast = mul(x = x_zero_mean_121_cast, y = var_6378_cast);
            tensor<fp16, [512]> x_573_mean_0_to_fp16 = const()[name = tensor<string, []>("x_573_mean_0_to_fp16"), val = tensor<fp16, [512]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(62896896)))];
            tensor<fp16, [512]> x_573_variance_0_to_fp16 = const()[name = tensor<string, []>("x_573_variance_0_to_fp16"), val = tensor<fp16, [512]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(62897984)))];
            tensor<fp16, [512]> x_573_gamma_0_to_fp16 = const()[name = tensor<string, []>("x_573_gamma_0_to_fp16"), val = tensor<fp16, [512]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(62899072)))];
            tensor<fp16, [512]> x_573_beta_0_to_fp16 = const()[name = tensor<string, []>("x_573_beta_0_to_fp16"), val = tensor<fp16, [512]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(62900160)))];
            tensor<fp16, []> x_573_epsilon_0_to_fp16 = const()[name = tensor<string, []>("x_573_epsilon_0_to_fp16"), val = tensor<fp16, []>(1.00135803e-05)];
            tensor<fp16, [1, 512, 1, 4]> x_573_cast = batch_norm(beta = x_573_beta_0_to_fp16, epsilon = x_573_epsilon_0_to_fp16, gamma = x_573_gamma_0_to_fp16, mean = x_573_mean_0_to_fp16, variance = x_573_variance_0_to_fp16, x = var_6379_cast);
            tensor<int32, []> var_6394 = const()[name = tensor<string, []>("op_6394"), val = tensor<int32, []>(512)];
            tensor<int32, []> var_6400 = const()[name = tensor<string, []>("op_6400"), val = tensor<int32, []>(2)];
            tensor<int32, []> var_6403 = const()[name = tensor<string, []>("op_6403"), val = tensor<int32, []>(-1)];
            tensor<bool, []> var_6405 = const()[name = tensor<string, []>("op_6405"), val = tensor<bool, []>(true)];
            tensor<int32, []> var_6406 = const()[name = tensor<string, []>("op_6406"), val = tensor<int32, []>(1)];
            tensor<fp16, [1, 512, 1, 4]> var_6453_cast = abs(x = x_573_cast);
            tensor<fp16, []> var_6454_to_fp16 = const()[name = tensor<string, []>("op_6454_to_fp16"), val = tensor<fp16, []>(0.001953125)];
            tensor<fp16, [1, 512, 1, 4]> var_6455_cast = mul(x = var_6453_cast, y = var_6454_to_fp16);
            tensor<int32, [1]> var_6456 = const()[name = tensor<string, []>("op_6456"), val = tensor<int32, [1]>([1])];
            tensor<fp16, [1, 1, 1, 4]> scale_367_cast = reduce_sum(axes = var_6456, keep_dims = var_6405, x = var_6455_cast);
            tensor<fp16, []> scale_369_epsilon_0_to_fp16 = const()[name = tensor<string, []>("scale_369_epsilon_0_to_fp16"), val = tensor<fp16, []>(5.96046448e-08)];
            tensor<fp16, [1, 1, 1, 4]> scale_369_cast = rsqrt(epsilon = scale_369_epsilon_0_to_fp16, x = scale_367_cast);
            tensor<fp16, [1, 1, 1, 4]> scale_371_cast = mul(x = scale_369_cast, y = scale_369_cast);
            tensor<fp16, [1, 512, 1, 4]> x_575_cast = mul(x = x_573_cast, y = scale_371_cast);
            tensor<fp16, []> var_6461_to_fp16 = const()[name = tensor<string, []>("op_6461_to_fp16"), val = tensor<fp16, []>(-0.001953125)];
            tensor<fp16, [1, 512, 1, 4]> var_6462_cast = mul(x = x_575_cast, y = var_6461_to_fp16);
            tensor<int32, [1]> var_6463 = const()[name = tensor<string, []>("op_6463"), val = tensor<int32, [1]>([1])];
            tensor<fp16, [1, 1, 1, 4]> x_mean_123_cast = reduce_sum(axes = var_6463, keep_dims = var_6405, x = var_6462_cast);
            tensor<fp16, [1, 512, 1, 4]> x_zero_mean_123_cast = add(x = x_575_cast, y = x_mean_123_cast);
            tensor<fp16, []> var_6466_to_fp16 = const()[name = tensor<string, []>("op_6466_to_fp16"), val = tensor<fp16, []>(0.001953125)];
            tensor<fp16, [1, 512, 1, 4]> var_6467_cast = mul(x = x_zero_mean_123_cast, y = var_6466_to_fp16);
            tensor<fp16, [1, 512, 1, 4]> var_6468_cast = mul(x = var_6467_cast, y = x_zero_mean_123_cast);
            tensor<int32, [1]> var_6469 = const()[name = tensor<string, []>("op_6469"), val = tensor<int32, [1]>([1])];
            tensor<fp16, [1, 1, 1, 4]> x_var_123_cast = reduce_sum(axes = var_6469, keep_dims = var_6405, x = var_6468_cast);
            tensor<fp16, []> var_6471_to_fp16 = const()[name = tensor<string, []>("op_6471_to_fp16"), val = tensor<fp16, []>(1.00135803e-05)];
            tensor<fp16, [1, 1, 1, 4]> var_6472_cast = add(x = x_var_123_cast, y = var_6471_to_fp16);
            tensor<fp16, []> var_6473_epsilon_0_to_fp16 = const()[name = tensor<string, []>("op_6473_epsilon_0_to_fp16"), val = tensor<fp16, []>(5.96046448e-08)];
            tensor<fp16, [1, 1, 1, 4]> var_6473_cast = rsqrt(epsilon = var_6473_epsilon_0_to_fp16, x = var_6472_cast);
            tensor<fp16, [1, 512, 1, 4]> var_6474_cast = mul(x = x_zero_mean_123_cast, y = var_6473_cast);
            tensor<fp16, [512]> x_577_mean_0_to_fp16 = const()[name = tensor<string, []>("x_577_mean_0_to_fp16"), val = tensor<fp16, [512]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(62901248)))];
            tensor<fp16, [512]> x_577_variance_0_to_fp16 = const()[name = tensor<string, []>("x_577_variance_0_to_fp16"), val = tensor<fp16, [512]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(62902336)))];
            tensor<fp16, [512]> x_577_gamma_0_to_fp16 = const()[name = tensor<string, []>("x_577_gamma_0_to_fp16"), val = tensor<fp16, [512]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(62903424)))];
            tensor<fp16, [512]> x_577_beta_0_to_fp16 = const()[name = tensor<string, []>("x_577_beta_0_to_fp16"), val = tensor<fp16, [512]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(62904512)))];
            tensor<fp16, []> x_577_epsilon_0_to_fp16 = const()[name = tensor<string, []>("x_577_epsilon_0_to_fp16"), val = tensor<fp16, []>(1.00135803e-05)];
            tensor<fp16, [1, 512, 1, 4]> x_577_cast = batch_norm(beta = x_577_beta_0_to_fp16, epsilon = x_577_epsilon_0_to_fp16, gamma = x_577_gamma_0_to_fp16, mean = x_577_mean_0_to_fp16, variance = x_577_variance_0_to_fp16, x = var_6474_cast);
            tensor<int32, [2]> var_6485 = const()[name = tensor<string, []>("op_6485"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_6487 = const()[name = tensor<string, []>("op_6487"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> input_251_pad_type_0 = const()[name = tensor<string, []>("input_251_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> input_251_pad_0 = const()[name = tensor<string, []>("input_251_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [2048, 512, 1, 1]> op_6484_to_fp16_affine_quantized = constexpr_affine_dequantize()[axis = tensor<int32, []>(0), name = tensor<string, []>("op_6484_to_fp16_affine_quantized"), quantized_data = tensor<int8, [2048, 512, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(62905600))), scale = tensor<fp16, [2048]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(63956352))), zero_point = tensor<int8, [2048]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(63954240)))];
            tensor<fp16, [2048]> primary_encoder_encoders_8_feed_forward_macaron_w_1_bias_to_fp16 = const()[name = tensor<string, []>("primary_encoder_encoders_8_feed_forward_macaron_w_1_bias_to_fp16"), val = tensor<fp16, [2048]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(63960512)))];
            tensor<fp16, [1, 2048, 1, 4]> input_251_cast = conv(bias = primary_encoder_encoders_8_feed_forward_macaron_w_1_bias_to_fp16, dilations = var_6487, groups = var_6406, pad = input_251_pad_0, pad_type = input_251_pad_type_0, strides = var_6485, weight = op_6484_to_fp16_affine_quantized, x = x_577_cast);
            tensor<fp16, [1, 2048, 1, 4]> input_253_cast = silu(x = input_251_cast);
            tensor<int32, [2]> var_6496 = const()[name = tensor<string, []>("op_6496"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_6498 = const()[name = tensor<string, []>("op_6498"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> input_255_pad_type_0 = const()[name = tensor<string, []>("input_255_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> input_255_pad_0 = const()[name = tensor<string, []>("input_255_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [512, 2048, 1, 1]> op_6503_weight_0_to_fp16_affine_quantized = constexpr_affine_dequantize()[axis = tensor<int32, []>(0), name = tensor<string, []>("op_6503_weight_0_to_fp16_affine_quantized"), quantized_data = tensor<int8, [512, 2048, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(63964672))), scale = tensor<fp16, [512]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(65013888))), zero_point = tensor<int8, [512]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(65013312)))];
            tensor<fp16, [512]> var_6503_bias_0_to_fp16 = const()[name = tensor<string, []>("op_6503_bias_0_to_fp16"), val = tensor<fp16, [512]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(65014976)))];
            tensor<fp16, [1, 512, 1, 4]> var_6503_cast = conv(bias = var_6503_bias_0_to_fp16, dilations = var_6498, groups = var_6406, pad = input_255_pad_0, pad_type = input_255_pad_type_0, strides = var_6496, weight = op_6503_weight_0_to_fp16_affine_quantized, x = input_253_cast);
            tensor<fp16, [1, 512, 1, 4]> x_583_cast = add(x = x_573_cast, y = var_6503_cast);
            tensor<fp16, [1, 512, 1, 4]> var_6505_cast = abs(x = x_583_cast);
            tensor<fp16, []> var_6506_to_fp16 = const()[name = tensor<string, []>("op_6506_to_fp16"), val = tensor<fp16, []>(0.001953125)];
            tensor<fp16, [1, 512, 1, 4]> var_6507_cast = mul(x = var_6505_cast, y = var_6506_to_fp16);
            tensor<int32, [1]> var_6508 = const()[name = tensor<string, []>("op_6508"), val = tensor<int32, [1]>([1])];
            tensor<fp16, [1, 1, 1, 4]> scale_373_cast = reduce_sum(axes = var_6508, keep_dims = var_6405, x = var_6507_cast);
            tensor<fp16, []> scale_375_epsilon_0_to_fp16 = const()[name = tensor<string, []>("scale_375_epsilon_0_to_fp16"), val = tensor<fp16, []>(5.96046448e-08)];
            tensor<fp16, [1, 1, 1, 4]> scale_375_cast = rsqrt(epsilon = scale_375_epsilon_0_to_fp16, x = scale_373_cast);
            tensor<fp16, [1, 1, 1, 4]> scale_377_cast = mul(x = scale_375_cast, y = scale_375_cast);
            tensor<fp16, [1, 512, 1, 4]> x_585_cast = mul(x = x_583_cast, y = scale_377_cast);
            tensor<fp16, []> var_6513_to_fp16 = const()[name = tensor<string, []>("op_6513_to_fp16"), val = tensor<fp16, []>(-0.001953125)];
            tensor<fp16, [1, 512, 1, 4]> var_6514_cast = mul(x = x_585_cast, y = var_6513_to_fp16);
            tensor<int32, [1]> var_6515 = const()[name = tensor<string, []>("op_6515"), val = tensor<int32, [1]>([1])];
            tensor<fp16, [1, 1, 1, 4]> x_mean_125_cast = reduce_sum(axes = var_6515, keep_dims = var_6405, x = var_6514_cast);
            tensor<fp16, [1, 512, 1, 4]> x_zero_mean_125_cast = add(x = x_585_cast, y = x_mean_125_cast);
            tensor<fp16, []> var_6518_to_fp16 = const()[name = tensor<string, []>("op_6518_to_fp16"), val = tensor<fp16, []>(0.001953125)];
            tensor<fp16, [1, 512, 1, 4]> var_6519_cast = mul(x = x_zero_mean_125_cast, y = var_6518_to_fp16);
            tensor<fp16, [1, 512, 1, 4]> var_6520_cast = mul(x = var_6519_cast, y = x_zero_mean_125_cast);
            tensor<int32, [1]> var_6521 = const()[name = tensor<string, []>("op_6521"), val = tensor<int32, [1]>([1])];
            tensor<fp16, [1, 1, 1, 4]> x_var_125_cast = reduce_sum(axes = var_6521, keep_dims = var_6405, x = var_6520_cast);
            tensor<fp16, []> var_6523_to_fp16 = const()[name = tensor<string, []>("op_6523_to_fp16"), val = tensor<fp16, []>(1.00135803e-05)];
            tensor<fp16, [1, 1, 1, 4]> var_6524_cast = add(x = x_var_125_cast, y = var_6523_to_fp16);
            tensor<fp16, []> var_6525_epsilon_0_to_fp16 = const()[name = tensor<string, []>("op_6525_epsilon_0_to_fp16"), val = tensor<fp16, []>(5.96046448e-08)];
            tensor<fp16, [1, 1, 1, 4]> var_6525_cast = rsqrt(epsilon = var_6525_epsilon_0_to_fp16, x = var_6524_cast);
            tensor<fp16, [1, 512, 1, 4]> var_6526_cast = mul(x = x_zero_mean_125_cast, y = var_6525_cast);
            tensor<fp16, [512]> query_13_mean_0_to_fp16 = const()[name = tensor<string, []>("query_13_mean_0_to_fp16"), val = tensor<fp16, [512]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(65016064)))];
            tensor<fp16, [512]> query_13_variance_0_to_fp16 = const()[name = tensor<string, []>("query_13_variance_0_to_fp16"), val = tensor<fp16, [512]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(65017152)))];
            tensor<fp16, [512]> query_13_gamma_0_to_fp16 = const()[name = tensor<string, []>("query_13_gamma_0_to_fp16"), val = tensor<fp16, [512]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(65018240)))];
            tensor<fp16, [512]> query_13_beta_0_to_fp16 = const()[name = tensor<string, []>("query_13_beta_0_to_fp16"), val = tensor<fp16, [512]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(65019328)))];
            tensor<fp16, []> query_13_epsilon_0_to_fp16 = const()[name = tensor<string, []>("query_13_epsilon_0_to_fp16"), val = tensor<fp16, []>(1.00135803e-05)];
            tensor<fp16, [1, 512, 1, 4]> query_13_cast = batch_norm(beta = query_13_beta_0_to_fp16, epsilon = query_13_epsilon_0_to_fp16, gamma = query_13_gamma_0_to_fp16, mean = query_13_mean_0_to_fp16, variance = query_13_variance_0_to_fp16, x = var_6526_cast);
            tensor<int32, [2]> var_6546 = const()[name = tensor<string, []>("op_6546"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_6548 = const()[name = tensor<string, []>("op_6548"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> var_6550_pad_type_0 = const()[name = tensor<string, []>("op_6550_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> var_6550_pad_0 = const()[name = tensor<string, []>("op_6550_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [512, 512, 1, 1]> op_6545_to_fp16_affine_quantized = constexpr_affine_dequantize()[axis = tensor<int32, []>(0), name = tensor<string, []>("op_6545_to_fp16_affine_quantized"), quantized_data = tensor<int8, [512, 512, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(65020416))), scale = tensor<fp16, [512]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(65283200))), zero_point = tensor<int8, [512]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(65282624)))];
            tensor<fp16, [512]> primary_encoder_encoders_8_self_attn_linear_v_bias_to_fp16 = const()[name = tensor<string, []>("primary_encoder_encoders_8_self_attn_linear_v_bias_to_fp16"), val = tensor<fp16, [512]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(65284288)))];
            tensor<fp16, [1, 512, 1, 4]> var_6550_cast = conv(bias = primary_encoder_encoders_8_self_attn_linear_v_bias_to_fp16, dilations = var_6548, groups = var_6406, pad = var_6550_pad_0, pad_type = var_6550_pad_type_0, strides = var_6546, weight = op_6545_to_fp16_affine_quantized, x = query_13_cast);
            tensor<int32, [8]> tile_44 = const()[name = tensor<string, []>("tile_44"), val = tensor<int32, [8]>([64, 64, 64, 64, 64, 64, 64, 64])];
            tensor<int32, []> var_6551_axis_0 = const()[name = tensor<string, []>("op_6551_axis_0"), val = tensor<int32, []>(1)];
            tensor<fp16, [1, 64, 1, 4]> var_6551_cast_0, tensor<fp16, [1, 64, 1, 4]> var_6551_cast_1, tensor<fp16, [1, 64, 1, 4]> var_6551_cast_2, tensor<fp16, [1, 64, 1, 4]> var_6551_cast_3, tensor<fp16, [1, 64, 1, 4]> var_6551_cast_4, tensor<fp16, [1, 64, 1, 4]> var_6551_cast_5, tensor<fp16, [1, 64, 1, 4]> var_6551_cast_6, tensor<fp16, [1, 64, 1, 4]> var_6551_cast_7 = split(axis = var_6551_axis_0, split_sizes = tile_44, x = var_6550_cast);
            tensor<int32, [8]> tile_45 = const()[name = tensor<string, []>("tile_45"), val = tensor<int32, [8]>([1, 1, 1, 1, 1, 1, 1, 1])];
            tensor<int32, []> var_6560_axis_0 = const()[name = tensor<string, []>("op_6560_axis_0"), val = tensor<int32, []>(2)];
            tensor<fp16, [1, 64, 1, 128]> var_6560_cast_0, tensor<fp16, [1, 64, 1, 128]> var_6560_cast_1, tensor<fp16, [1, 64, 1, 128]> var_6560_cast_2, tensor<fp16, [1, 64, 1, 128]> var_6560_cast_3, tensor<fp16, [1, 64, 1, 128]> var_6560_cast_4, tensor<fp16, [1, 64, 1, 128]> var_6560_cast_5, tensor<fp16, [1, 64, 1, 128]> var_6560_cast_6, tensor<fp16, [1, 64, 1, 128]> var_6560_cast_7 = split(axis = var_6560_axis_0, split_sizes = tile_45, x = var_321_cast_8);
            tensor<bool, []> var_6570_interleave_0 = const()[name = tensor<string, []>("op_6570_interleave_0"), val = tensor<bool, []>(false)];
            tensor<fp16, [1, 64, 1, 132]> var_6570_cast = concat(axis = var_6403, interleave = var_6570_interleave_0, values = (var_6560_cast_0, var_6551_cast_0));
            tensor<int32, [4]> var_6574_begin_0 = const()[name = tensor<string, []>("op_6574_begin_0"), val = tensor<int32, [4]>([0, 0, 0, 4])];
            tensor<int32, [4]> var_6574_end_0 = const()[name = tensor<string, []>("op_6574_end_0"), val = tensor<int32, [4]>([1, 64, 1, 132])];
            tensor<bool, [4]> var_6574_end_mask_0 = const()[name = tensor<string, []>("op_6574_end_mask_0"), val = tensor<bool, [4]>([true, true, true, true])];
            tensor<fp16, [1, 64, 1, 128]> var_6574_cast = slice_by_index(begin = var_6574_begin_0, end = var_6574_end_0, end_mask = var_6574_end_mask_0, x = var_6570_cast);
            tensor<bool, []> var_6576_interleave_0 = const()[name = tensor<string, []>("op_6576_interleave_0"), val = tensor<bool, []>(false)];
            tensor<fp16, [1, 64, 1, 132]> var_6576_cast = concat(axis = var_6403, interleave = var_6576_interleave_0, values = (var_6560_cast_1, var_6551_cast_1));
            tensor<int32, [4]> var_6580_begin_0 = const()[name = tensor<string, []>("op_6580_begin_0"), val = tensor<int32, [4]>([0, 0, 0, 4])];
            tensor<int32, [4]> var_6580_end_0 = const()[name = tensor<string, []>("op_6580_end_0"), val = tensor<int32, [4]>([1, 64, 1, 132])];
            tensor<bool, [4]> var_6580_end_mask_0 = const()[name = tensor<string, []>("op_6580_end_mask_0"), val = tensor<bool, [4]>([true, true, true, true])];
            tensor<fp16, [1, 64, 1, 128]> var_6580_cast = slice_by_index(begin = var_6580_begin_0, end = var_6580_end_0, end_mask = var_6580_end_mask_0, x = var_6576_cast);
            tensor<bool, []> var_6582_interleave_0 = const()[name = tensor<string, []>("op_6582_interleave_0"), val = tensor<bool, []>(false)];
            tensor<fp16, [1, 64, 1, 132]> var_6582_cast = concat(axis = var_6403, interleave = var_6582_interleave_0, values = (var_6560_cast_2, var_6551_cast_2));
            tensor<int32, [4]> var_6586_begin_0 = const()[name = tensor<string, []>("op_6586_begin_0"), val = tensor<int32, [4]>([0, 0, 0, 4])];
            tensor<int32, [4]> var_6586_end_0 = const()[name = tensor<string, []>("op_6586_end_0"), val = tensor<int32, [4]>([1, 64, 1, 132])];
            tensor<bool, [4]> var_6586_end_mask_0 = const()[name = tensor<string, []>("op_6586_end_mask_0"), val = tensor<bool, [4]>([true, true, true, true])];
            tensor<fp16, [1, 64, 1, 128]> var_6586_cast = slice_by_index(begin = var_6586_begin_0, end = var_6586_end_0, end_mask = var_6586_end_mask_0, x = var_6582_cast);
            tensor<bool, []> var_6588_interleave_0 = const()[name = tensor<string, []>("op_6588_interleave_0"), val = tensor<bool, []>(false)];
            tensor<fp16, [1, 64, 1, 132]> var_6588_cast = concat(axis = var_6403, interleave = var_6588_interleave_0, values = (var_6560_cast_3, var_6551_cast_3));
            tensor<int32, [4]> var_6592_begin_0 = const()[name = tensor<string, []>("op_6592_begin_0"), val = tensor<int32, [4]>([0, 0, 0, 4])];
            tensor<int32, [4]> var_6592_end_0 = const()[name = tensor<string, []>("op_6592_end_0"), val = tensor<int32, [4]>([1, 64, 1, 132])];
            tensor<bool, [4]> var_6592_end_mask_0 = const()[name = tensor<string, []>("op_6592_end_mask_0"), val = tensor<bool, [4]>([true, true, true, true])];
            tensor<fp16, [1, 64, 1, 128]> var_6592_cast = slice_by_index(begin = var_6592_begin_0, end = var_6592_end_0, end_mask = var_6592_end_mask_0, x = var_6588_cast);
            tensor<bool, []> var_6594_interleave_0 = const()[name = tensor<string, []>("op_6594_interleave_0"), val = tensor<bool, []>(false)];
            tensor<fp16, [1, 64, 1, 132]> var_6594_cast = concat(axis = var_6403, interleave = var_6594_interleave_0, values = (var_6560_cast_4, var_6551_cast_4));
            tensor<int32, [4]> var_6598_begin_0 = const()[name = tensor<string, []>("op_6598_begin_0"), val = tensor<int32, [4]>([0, 0, 0, 4])];
            tensor<int32, [4]> var_6598_end_0 = const()[name = tensor<string, []>("op_6598_end_0"), val = tensor<int32, [4]>([1, 64, 1, 132])];
            tensor<bool, [4]> var_6598_end_mask_0 = const()[name = tensor<string, []>("op_6598_end_mask_0"), val = tensor<bool, [4]>([true, true, true, true])];
            tensor<fp16, [1, 64, 1, 128]> var_6598_cast = slice_by_index(begin = var_6598_begin_0, end = var_6598_end_0, end_mask = var_6598_end_mask_0, x = var_6594_cast);
            tensor<bool, []> var_6600_interleave_0 = const()[name = tensor<string, []>("op_6600_interleave_0"), val = tensor<bool, []>(false)];
            tensor<fp16, [1, 64, 1, 132]> var_6600_cast = concat(axis = var_6403, interleave = var_6600_interleave_0, values = (var_6560_cast_5, var_6551_cast_5));
            tensor<int32, [4]> var_6604_begin_0 = const()[name = tensor<string, []>("op_6604_begin_0"), val = tensor<int32, [4]>([0, 0, 0, 4])];
            tensor<int32, [4]> var_6604_end_0 = const()[name = tensor<string, []>("op_6604_end_0"), val = tensor<int32, [4]>([1, 64, 1, 132])];
            tensor<bool, [4]> var_6604_end_mask_0 = const()[name = tensor<string, []>("op_6604_end_mask_0"), val = tensor<bool, [4]>([true, true, true, true])];
            tensor<fp16, [1, 64, 1, 128]> var_6604_cast = slice_by_index(begin = var_6604_begin_0, end = var_6604_end_0, end_mask = var_6604_end_mask_0, x = var_6600_cast);
            tensor<bool, []> var_6606_interleave_0 = const()[name = tensor<string, []>("op_6606_interleave_0"), val = tensor<bool, []>(false)];
            tensor<fp16, [1, 64, 1, 132]> var_6606_cast = concat(axis = var_6403, interleave = var_6606_interleave_0, values = (var_6560_cast_6, var_6551_cast_6));
            tensor<int32, [4]> var_6610_begin_0 = const()[name = tensor<string, []>("op_6610_begin_0"), val = tensor<int32, [4]>([0, 0, 0, 4])];
            tensor<int32, [4]> var_6610_end_0 = const()[name = tensor<string, []>("op_6610_end_0"), val = tensor<int32, [4]>([1, 64, 1, 132])];
            tensor<bool, [4]> var_6610_end_mask_0 = const()[name = tensor<string, []>("op_6610_end_mask_0"), val = tensor<bool, [4]>([true, true, true, true])];
            tensor<fp16, [1, 64, 1, 128]> var_6610_cast = slice_by_index(begin = var_6610_begin_0, end = var_6610_end_0, end_mask = var_6610_end_mask_0, x = var_6606_cast);
            tensor<bool, []> var_6612_interleave_0 = const()[name = tensor<string, []>("op_6612_interleave_0"), val = tensor<bool, []>(false)];
            tensor<fp16, [1, 64, 1, 132]> var_6612_cast = concat(axis = var_6403, interleave = var_6612_interleave_0, values = (var_6560_cast_7, var_6551_cast_7));
            tensor<int32, [4]> var_6616_begin_0 = const()[name = tensor<string, []>("op_6616_begin_0"), val = tensor<int32, [4]>([0, 0, 0, 4])];
            tensor<int32, [4]> var_6616_end_0 = const()[name = tensor<string, []>("op_6616_end_0"), val = tensor<int32, [4]>([1, 64, 1, 132])];
            tensor<bool, [4]> var_6616_end_mask_0 = const()[name = tensor<string, []>("op_6616_end_mask_0"), val = tensor<bool, [4]>([true, true, true, true])];
            tensor<fp16, [1, 64, 1, 128]> var_6616_cast = slice_by_index(begin = var_6616_begin_0, end = var_6616_end_0, end_mask = var_6616_end_mask_0, x = var_6612_cast);
            tensor<bool, []> var_6618_interleave_0 = const()[name = tensor<string, []>("op_6618_interleave_0"), val = tensor<bool, []>(false)];
            tensor<fp16, [1, 64, 8, 128]> var_6618_cast = concat(axis = var_6400, interleave = var_6618_interleave_0, values = (var_6574_cast, var_6580_cast, var_6586_cast, var_6592_cast, var_6598_cast, var_6604_cast, var_6610_cast, var_6616_cast));
            tensor<string, []> var_6620_equation_0 = const()[name = tensor<string, []>("op_6620_equation_0"), val = tensor<string, []>("bnhd,bdhm->bnhm")];
            tensor<fp16, [1, 64, 1, 4]> var_6620_cast = einsum(equation = var_6620_equation_0, values = (var_6574_cast, input_205_cast));
            tensor<string, []> var_6622_equation_0 = const()[name = tensor<string, []>("op_6622_equation_0"), val = tensor<string, []>("bnhd,bdhm->bnhm")];
            tensor<fp16, [1, 64, 1, 4]> var_6622_cast = einsum(equation = var_6622_equation_0, values = (var_6580_cast, input_207_cast));
            tensor<string, []> var_6624_equation_0 = const()[name = tensor<string, []>("op_6624_equation_0"), val = tensor<string, []>("bnhd,bdhm->bnhm")];
            tensor<fp16, [1, 64, 1, 4]> var_6624_cast = einsum(equation = var_6624_equation_0, values = (var_6586_cast, input_209_cast));
            tensor<string, []> var_6626_equation_0 = const()[name = tensor<string, []>("op_6626_equation_0"), val = tensor<string, []>("bnhd,bdhm->bnhm")];
            tensor<fp16, [1, 64, 1, 4]> var_6626_cast = einsum(equation = var_6626_equation_0, values = (var_6592_cast, input_211_cast));
            tensor<string, []> var_6628_equation_0 = const()[name = tensor<string, []>("op_6628_equation_0"), val = tensor<string, []>("bnhd,bdhm->bnhm")];
            tensor<fp16, [1, 64, 1, 4]> var_6628_cast = einsum(equation = var_6628_equation_0, values = (var_6598_cast, input_213_cast));
            tensor<string, []> var_6630_equation_0 = const()[name = tensor<string, []>("op_6630_equation_0"), val = tensor<string, []>("bnhd,bdhm->bnhm")];
            tensor<fp16, [1, 64, 1, 4]> var_6630_cast = einsum(equation = var_6630_equation_0, values = (var_6604_cast, input_215_cast));
            tensor<string, []> var_6632_equation_0 = const()[name = tensor<string, []>("op_6632_equation_0"), val = tensor<string, []>("bnhd,bdhm->bnhm")];
            tensor<fp16, [1, 64, 1, 4]> var_6632_cast = einsum(equation = var_6632_equation_0, values = (var_6610_cast, input_217_cast));
            tensor<string, []> var_6634_equation_0 = const()[name = tensor<string, []>("op_6634_equation_0"), val = tensor<string, []>("bnhd,bdhm->bnhm")];
            tensor<fp16, [1, 64, 1, 4]> var_6634_cast = einsum(equation = var_6634_equation_0, values = (var_6616_cast, input_219_cast));
            tensor<bool, []> y_29_interleave_0 = const()[name = tensor<string, []>("y_29_interleave_0"), val = tensor<bool, []>(false)];
            tensor<fp16, [1, 512, 1, 4]> y_29_cast = concat(axis = var_6406, interleave = y_29_interleave_0, values = (var_6620_cast, var_6622_cast, var_6624_cast, var_6626_cast, var_6628_cast, var_6630_cast, var_6632_cast, var_6634_cast));
            tensor<int32, [2]> var_6641 = const()[name = tensor<string, []>("op_6641"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_6643 = const()[name = tensor<string, []>("op_6643"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> input_257_pad_type_0 = const()[name = tensor<string, []>("input_257_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> input_257_pad_0 = const()[name = tensor<string, []>("input_257_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [512, 512, 1, 1]> op_6640_to_fp16_affine_quantized = constexpr_affine_dequantize()[axis = tensor<int32, []>(0), name = tensor<string, []>("op_6640_to_fp16_affine_quantized"), quantized_data = tensor<int8, [512, 512, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(65285376))), scale = tensor<fp16, [512]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(65548160))), zero_point = tensor<int8, [512]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(65547584)))];
            tensor<fp16, [512]> primary_encoder_encoders_8_self_attn_linear_out_bias_to_fp16 = const()[name = tensor<string, []>("primary_encoder_encoders_8_self_attn_linear_out_bias_to_fp16"), val = tensor<fp16, [512]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(65549248)))];
            tensor<fp16, [1, 512, 1, 4]> input_257_cast = conv(bias = primary_encoder_encoders_8_self_attn_linear_out_bias_to_fp16, dilations = var_6643, groups = var_6406, pad = input_257_pad_0, pad_type = input_257_pad_type_0, strides = var_6641, weight = op_6640_to_fp16_affine_quantized, x = y_29_cast);
            tensor<fp16, [1, 512, 1, 4]> x_587_cast = add(x = x_583_cast, y = input_257_cast);
            tensor<fp16, [1, 512, 1, 4]> var_6651_cast = abs(x = x_587_cast);
            tensor<fp16, []> var_6652_to_fp16 = const()[name = tensor<string, []>("op_6652_to_fp16"), val = tensor<fp16, []>(0.001953125)];
            tensor<fp16, [1, 512, 1, 4]> var_6653_cast = mul(x = var_6651_cast, y = var_6652_to_fp16);
            tensor<int32, [1]> var_6654 = const()[name = tensor<string, []>("op_6654"), val = tensor<int32, [1]>([1])];
            tensor<fp16, [1, 1, 1, 4]> scale_379_cast = reduce_sum(axes = var_6654, keep_dims = var_6405, x = var_6653_cast);
            tensor<fp16, []> scale_381_epsilon_0_to_fp16 = const()[name = tensor<string, []>("scale_381_epsilon_0_to_fp16"), val = tensor<fp16, []>(5.96046448e-08)];
            tensor<fp16, [1, 1, 1, 4]> scale_381_cast = rsqrt(epsilon = scale_381_epsilon_0_to_fp16, x = scale_379_cast);
            tensor<fp16, [1, 1, 1, 4]> scale_383_cast = mul(x = scale_381_cast, y = scale_381_cast);
            tensor<fp16, [1, 512, 1, 4]> x_589_cast = mul(x = x_587_cast, y = scale_383_cast);
            tensor<fp16, []> var_6659_to_fp16 = const()[name = tensor<string, []>("op_6659_to_fp16"), val = tensor<fp16, []>(-0.001953125)];
            tensor<fp16, [1, 512, 1, 4]> var_6660_cast = mul(x = x_589_cast, y = var_6659_to_fp16);
            tensor<int32, [1]> var_6661 = const()[name = tensor<string, []>("op_6661"), val = tensor<int32, [1]>([1])];
            tensor<fp16, [1, 1, 1, 4]> x_mean_127_cast = reduce_sum(axes = var_6661, keep_dims = var_6405, x = var_6660_cast);
            tensor<fp16, [1, 512, 1, 4]> x_zero_mean_127_cast = add(x = x_589_cast, y = x_mean_127_cast);
            tensor<fp16, []> var_6664_to_fp16 = const()[name = tensor<string, []>("op_6664_to_fp16"), val = tensor<fp16, []>(0.001953125)];
            tensor<fp16, [1, 512, 1, 4]> var_6665_cast = mul(x = x_zero_mean_127_cast, y = var_6664_to_fp16);
            tensor<fp16, [1, 512, 1, 4]> var_6666_cast = mul(x = var_6665_cast, y = x_zero_mean_127_cast);
            tensor<int32, [1]> var_6667 = const()[name = tensor<string, []>("op_6667"), val = tensor<int32, [1]>([1])];
            tensor<fp16, [1, 1, 1, 4]> x_var_127_cast = reduce_sum(axes = var_6667, keep_dims = var_6405, x = var_6666_cast);
            tensor<fp16, []> var_6669_to_fp16 = const()[name = tensor<string, []>("op_6669_to_fp16"), val = tensor<fp16, []>(1.00135803e-05)];
            tensor<fp16, [1, 1, 1, 4]> var_6670_cast = add(x = x_var_127_cast, y = var_6669_to_fp16);
            tensor<fp16, []> var_6671_epsilon_0_to_fp16 = const()[name = tensor<string, []>("op_6671_epsilon_0_to_fp16"), val = tensor<fp16, []>(5.96046448e-08)];
            tensor<fp16, [1, 1, 1, 4]> var_6671_cast = rsqrt(epsilon = var_6671_epsilon_0_to_fp16, x = var_6670_cast);
            tensor<fp16, [1, 512, 1, 4]> var_6672_cast = mul(x = x_zero_mean_127_cast, y = var_6671_cast);
            tensor<fp16, [512]> x_591_mean_0_to_fp16 = const()[name = tensor<string, []>("x_591_mean_0_to_fp16"), val = tensor<fp16, [512]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(65550336)))];
            tensor<fp16, [512]> x_591_variance_0_to_fp16 = const()[name = tensor<string, []>("x_591_variance_0_to_fp16"), val = tensor<fp16, [512]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(65551424)))];
            tensor<fp16, [512]> x_591_gamma_0_to_fp16 = const()[name = tensor<string, []>("x_591_gamma_0_to_fp16"), val = tensor<fp16, [512]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(65552512)))];
            tensor<fp16, [512]> x_591_beta_0_to_fp16 = const()[name = tensor<string, []>("x_591_beta_0_to_fp16"), val = tensor<fp16, [512]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(65553600)))];
            tensor<fp16, []> x_591_epsilon_0_to_fp16 = const()[name = tensor<string, []>("x_591_epsilon_0_to_fp16"), val = tensor<fp16, []>(1.00135803e-05)];
            tensor<fp16, [1, 512, 1, 4]> x_591_cast = batch_norm(beta = x_591_beta_0_to_fp16, epsilon = x_591_epsilon_0_to_fp16, gamma = x_591_gamma_0_to_fp16, mean = x_591_mean_0_to_fp16, variance = x_591_variance_0_to_fp16, x = var_6672_cast);
            tensor<bool, []> x_593_interleave_0 = const()[name = tensor<string, []>("x_593_interleave_0"), val = tensor<bool, []>(false)];
            tensor<fp16, [1, 512, 1, 36]> x_593_cast = concat(axis = var_6403, interleave = x_593_interleave_0, values = (var_301_cast_8, x_591_cast));
            tensor<int32, [4]> x_595_begin_0 = const()[name = tensor<string, []>("x_595_begin_0"), val = tensor<int32, [4]>([0, 0, 0, 12])];
            tensor<int32, [4]> x_595_end_0 = const()[name = tensor<string, []>("x_595_end_0"), val = tensor<int32, [4]>([1, 512, 1, 36])];
            tensor<bool, [4]> x_595_end_mask_0 = const()[name = tensor<string, []>("x_595_end_mask_0"), val = tensor<bool, [4]>([true, true, true, true])];
            tensor<fp16, [1, 512, 1, 24]> x_595_cast = slice_by_index(begin = x_595_begin_0, end = x_595_end_0, end_mask = x_595_end_mask_0, x = x_593_cast);
            tensor<int32, [4]> x_597_begin_0 = const()[name = tensor<string, []>("x_597_begin_0"), val = tensor<int32, [4]>([0, 0, 0, 12])];
            tensor<int32, [4]> x_597_end_0 = const()[name = tensor<string, []>("x_597_end_0"), val = tensor<int32, [4]>([1, 512, 1, 24])];
            tensor<bool, [4]> x_597_end_mask_0 = const()[name = tensor<string, []>("x_597_end_mask_0"), val = tensor<bool, [4]>([true, true, true, true])];
            tensor<fp16, [1, 512, 1, 12]> x_597_cast = slice_by_index(begin = x_597_begin_0, end = x_597_end_0, end_mask = x_597_end_mask_0, x = x_595_cast);
            tensor<int32, [4]> x_599_begin_0 = const()[name = tensor<string, []>("x_599_begin_0"), val = tensor<int32, [4]>([0, 0, 0, 1])];
            tensor<int32, [4]> x_599_end_0 = const()[name = tensor<string, []>("x_599_end_0"), val = tensor<int32, [4]>([1, 512, 1, 12])];
            tensor<bool, [4]> x_599_end_mask_0 = const()[name = tensor<string, []>("x_599_end_mask_0"), val = tensor<bool, [4]>([true, true, true, true])];
            tensor<fp16, [1, 512, 1, 11]> x_599_cast = slice_by_index(begin = x_599_begin_0, end = x_599_end_0, end_mask = x_599_end_mask_0, x = x_597_cast);
            tensor<int32, [4]> var_6712_begin_0 = const()[name = tensor<string, []>("op_6712_begin_0"), val = tensor<int32, [4]>([0, 0, 0, -7])];
            tensor<int32, [4]> var_6712_end_0 = const()[name = tensor<string, []>("op_6712_end_0"), val = tensor<int32, [4]>([1, 512, 1, 11])];
            tensor<bool, [4]> var_6712_end_mask_0 = const()[name = tensor<string, []>("op_6712_end_mask_0"), val = tensor<bool, [4]>([true, true, true, true])];
            tensor<fp16, [1, 512, 1, 7]> var_6712_cast = slice_by_index(begin = var_6712_begin_0, end = var_6712_end_0, end_mask = var_6712_end_mask_0, x = x_599_cast);
            tensor<int32, [2]> var_6714 = const()[name = tensor<string, []>("op_6714"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_6716 = const()[name = tensor<string, []>("op_6716"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> x_601_pad_type_0 = const()[name = tensor<string, []>("x_601_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> x_601_pad_0 = const()[name = tensor<string, []>("x_601_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [1024, 512, 1, 1]> op_6713_to_fp16_affine_quantized = constexpr_affine_dequantize()[axis = tensor<int32, []>(0), name = tensor<string, []>("op_6713_to_fp16_affine_quantized"), quantized_data = tensor<int8, [1024, 512, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(65554688))), scale = tensor<fp16, [1024]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(66080128))), zero_point = tensor<int8, [1024]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(66079040)))];
            tensor<fp16, [1024]> primary_encoder_encoders_8_conv_module_pointwise_conv1_bias_to_fp16 = const()[name = tensor<string, []>("primary_encoder_encoders_8_conv_module_pointwise_conv1_bias_to_fp16"), val = tensor<fp16, [1024]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(66082240)))];
            tensor<fp16, [1, 1024, 1, 11]> x_601_cast = conv(bias = primary_encoder_encoders_8_conv_module_pointwise_conv1_bias_to_fp16, dilations = var_6716, groups = var_6406, pad = x_601_pad_0, pad_type = x_601_pad_type_0, strides = var_6714, weight = op_6713_to_fp16_affine_quantized, x = x_599_cast);
            tensor<int32, [4]> var_6725_begin_0 = const()[name = tensor<string, []>("op_6725_begin_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<int32, [4]> var_6725_end_0 = const()[name = tensor<string, []>("op_6725_end_0"), val = tensor<int32, [4]>([1, 512, 1, 11])];
            tensor<bool, [4]> var_6725_end_mask_0 = const()[name = tensor<string, []>("op_6725_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [1, 512, 1, 11]> var_6725_cast = slice_by_index(begin = var_6725_begin_0, end = var_6725_end_0, end_mask = var_6725_end_mask_0, x = x_601_cast);
            tensor<int32, [4]> var_6729_begin_0 = const()[name = tensor<string, []>("op_6729_begin_0"), val = tensor<int32, [4]>([0, 512, 0, 0])];
            tensor<int32, [4]> var_6729_end_0 = const()[name = tensor<string, []>("op_6729_end_0"), val = tensor<int32, [4]>([1, 1024, 1, 11])];
            tensor<bool, [4]> var_6729_end_mask_0 = const()[name = tensor<string, []>("op_6729_end_mask_0"), val = tensor<bool, [4]>([true, true, true, true])];
            tensor<fp16, [1, 512, 1, 11]> var_6729_cast = slice_by_index(begin = var_6729_begin_0, end = var_6729_end_0, end_mask = var_6729_end_mask_0, x = x_601_cast);
            tensor<fp16, [1, 512, 1, 11]> var_6732_cast = sigmoid(x = var_6729_cast);
            tensor<fp16, [1, 512, 1, 11]> x_603_cast = mul(x = var_6725_cast, y = var_6732_cast);
            tensor<int32, [2]> var_6735 = const()[name = tensor<string, []>("op_6735"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_6737 = const()[name = tensor<string, []>("op_6737"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> x_605_pad_type_0 = const()[name = tensor<string, []>("x_605_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> x_605_pad_0 = const()[name = tensor<string, []>("x_605_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [512, 1, 1, 8]> op_6734_to_fp16_affine_quantized = constexpr_affine_dequantize()[axis = tensor<int32, []>(0), name = tensor<string, []>("op_6734_to_fp16_affine_quantized"), quantized_data = tensor<int8, [512, 1, 1, 8]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(66084352))), scale = tensor<fp16, [512]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(66089088))), zero_point = tensor<int8, [512]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(66088512)))];
            tensor<fp16, [512]> primary_encoder_encoders_8_conv_module_depthwise_conv_bias_to_fp16 = const()[name = tensor<string, []>("primary_encoder_encoders_8_conv_module_depthwise_conv_bias_to_fp16"), val = tensor<fp16, [512]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(66090176)))];
            tensor<fp16, [1, 512, 1, 4]> x_605_cast = conv(bias = primary_encoder_encoders_8_conv_module_depthwise_conv_bias_to_fp16, dilations = var_6737, groups = var_6394, pad = x_605_pad_0, pad_type = x_605_pad_type_0, strides = var_6735, weight = op_6734_to_fp16_affine_quantized, x = x_603_cast);
            tensor<fp16, [1, 512, 1, 4]> var_6740_cast = abs(x = x_605_cast);
            tensor<fp16, []> var_6741_to_fp16 = const()[name = tensor<string, []>("op_6741_to_fp16"), val = tensor<fp16, []>(0.001953125)];
            tensor<fp16, [1, 512, 1, 4]> var_6742_cast = mul(x = var_6740_cast, y = var_6741_to_fp16);
            tensor<int32, [1]> var_6743 = const()[name = tensor<string, []>("op_6743"), val = tensor<int32, [1]>([1])];
            tensor<fp16, [1, 1, 1, 4]> scale_385_cast = reduce_sum(axes = var_6743, keep_dims = var_6405, x = var_6742_cast);
            tensor<fp16, []> scale_387_epsilon_0_to_fp16 = const()[name = tensor<string, []>("scale_387_epsilon_0_to_fp16"), val = tensor<fp16, []>(5.96046448e-08)];
            tensor<fp16, [1, 1, 1, 4]> scale_387_cast = rsqrt(epsilon = scale_387_epsilon_0_to_fp16, x = scale_385_cast);
            tensor<fp16, [1, 1, 1, 4]> scale_389_cast = mul(x = scale_387_cast, y = scale_387_cast);
            tensor<fp16, [1, 512, 1, 4]> x_607_cast = mul(x = x_605_cast, y = scale_389_cast);
            tensor<fp16, []> var_6748_to_fp16 = const()[name = tensor<string, []>("op_6748_to_fp16"), val = tensor<fp16, []>(-0.001953125)];
            tensor<fp16, [1, 512, 1, 4]> var_6749_cast = mul(x = x_607_cast, y = var_6748_to_fp16);
            tensor<int32, [1]> var_6750 = const()[name = tensor<string, []>("op_6750"), val = tensor<int32, [1]>([1])];
            tensor<fp16, [1, 1, 1, 4]> x_mean_129_cast = reduce_sum(axes = var_6750, keep_dims = var_6405, x = var_6749_cast);
            tensor<fp16, [1, 512, 1, 4]> x_zero_mean_129_cast = add(x = x_607_cast, y = x_mean_129_cast);
            tensor<fp16, []> var_6753_to_fp16 = const()[name = tensor<string, []>("op_6753_to_fp16"), val = tensor<fp16, []>(0.001953125)];
            tensor<fp16, [1, 512, 1, 4]> var_6754_cast = mul(x = x_zero_mean_129_cast, y = var_6753_to_fp16);
            tensor<fp16, [1, 512, 1, 4]> var_6755_cast = mul(x = var_6754_cast, y = x_zero_mean_129_cast);
            tensor<int32, [1]> var_6756 = const()[name = tensor<string, []>("op_6756"), val = tensor<int32, [1]>([1])];
            tensor<fp16, [1, 1, 1, 4]> x_var_129_cast = reduce_sum(axes = var_6756, keep_dims = var_6405, x = var_6755_cast);
            tensor<fp16, []> var_6758_to_fp16 = const()[name = tensor<string, []>("op_6758_to_fp16"), val = tensor<fp16, []>(1.00135803e-05)];
            tensor<fp16, [1, 1, 1, 4]> var_6759_cast = add(x = x_var_129_cast, y = var_6758_to_fp16);
            tensor<fp16, []> var_6760_epsilon_0_to_fp16 = const()[name = tensor<string, []>("op_6760_epsilon_0_to_fp16"), val = tensor<fp16, []>(5.96046448e-08)];
            tensor<fp16, [1, 1, 1, 4]> var_6760_cast = rsqrt(epsilon = var_6760_epsilon_0_to_fp16, x = var_6759_cast);
            tensor<fp16, [1, 512, 1, 4]> var_6761_cast = mul(x = x_zero_mean_129_cast, y = var_6760_cast);
            tensor<fp16, [512]> input_259_mean_0_to_fp16 = const()[name = tensor<string, []>("input_259_mean_0_to_fp16"), val = tensor<fp16, [512]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(66091264)))];
            tensor<fp16, [512]> input_259_variance_0_to_fp16 = const()[name = tensor<string, []>("input_259_variance_0_to_fp16"), val = tensor<fp16, [512]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(66092352)))];
            tensor<fp16, [512]> input_259_gamma_0_to_fp16 = const()[name = tensor<string, []>("input_259_gamma_0_to_fp16"), val = tensor<fp16, [512]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(66093440)))];
            tensor<fp16, [512]> input_259_beta_0_to_fp16 = const()[name = tensor<string, []>("input_259_beta_0_to_fp16"), val = tensor<fp16, [512]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(66094528)))];
            tensor<fp16, []> input_259_epsilon_0_to_fp16 = const()[name = tensor<string, []>("input_259_epsilon_0_to_fp16"), val = tensor<fp16, []>(1.00135803e-05)];
            tensor<fp16, [1, 512, 1, 4]> input_259_cast = batch_norm(beta = input_259_beta_0_to_fp16, epsilon = input_259_epsilon_0_to_fp16, gamma = input_259_gamma_0_to_fp16, mean = input_259_mean_0_to_fp16, variance = input_259_variance_0_to_fp16, x = var_6761_cast);
            tensor<fp16, [1, 512, 1, 4]> x_609_cast = silu(x = input_259_cast);
            tensor<int32, [2]> var_6770 = const()[name = tensor<string, []>("op_6770"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_6772 = const()[name = tensor<string, []>("op_6772"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> input_261_pad_type_0 = const()[name = tensor<string, []>("input_261_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> input_261_pad_0 = const()[name = tensor<string, []>("input_261_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [512, 512, 1, 1]> op_6769_to_fp16_affine_quantized = constexpr_affine_dequantize()[axis = tensor<int32, []>(0), name = tensor<string, []>("op_6769_to_fp16_affine_quantized"), quantized_data = tensor<int8, [512, 512, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(66095616))), scale = tensor<fp16, [512]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(66358400))), zero_point = tensor<int8, [512]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(66357824)))];
            tensor<fp16, [512]> primary_encoder_encoders_8_conv_module_pointwise_conv2_bias_to_fp16 = const()[name = tensor<string, []>("primary_encoder_encoders_8_conv_module_pointwise_conv2_bias_to_fp16"), val = tensor<fp16, [512]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(66359488)))];
            tensor<fp16, [1, 512, 1, 4]> input_261_cast = conv(bias = primary_encoder_encoders_8_conv_module_pointwise_conv2_bias_to_fp16, dilations = var_6772, groups = var_6406, pad = input_261_pad_0, pad_type = input_261_pad_type_0, strides = var_6770, weight = op_6769_to_fp16_affine_quantized, x = x_609_cast);
            tensor<fp16, [1, 512, 1, 4]> x_613_cast = add(x = x_587_cast, y = input_261_cast);
            tensor<fp16, [1, 512, 1, 4]> var_6780_cast = abs(x = x_613_cast);
            tensor<fp16, []> var_6781_to_fp16 = const()[name = tensor<string, []>("op_6781_to_fp16"), val = tensor<fp16, []>(0.001953125)];
            tensor<fp16, [1, 512, 1, 4]> var_6782_cast = mul(x = var_6780_cast, y = var_6781_to_fp16);
            tensor<int32, [1]> var_6783 = const()[name = tensor<string, []>("op_6783"), val = tensor<int32, [1]>([1])];
            tensor<fp16, [1, 1, 1, 4]> scale_391_cast = reduce_sum(axes = var_6783, keep_dims = var_6405, x = var_6782_cast);
            tensor<fp16, []> scale_393_epsilon_0_to_fp16 = const()[name = tensor<string, []>("scale_393_epsilon_0_to_fp16"), val = tensor<fp16, []>(5.96046448e-08)];
            tensor<fp16, [1, 1, 1, 4]> scale_393_cast = rsqrt(epsilon = scale_393_epsilon_0_to_fp16, x = scale_391_cast);
            tensor<fp16, [1, 1, 1, 4]> scale_395_cast = mul(x = scale_393_cast, y = scale_393_cast);
            tensor<fp16, [1, 512, 1, 4]> x_615_cast = mul(x = x_613_cast, y = scale_395_cast);
            tensor<fp16, []> var_6788_to_fp16 = const()[name = tensor<string, []>("op_6788_to_fp16"), val = tensor<fp16, []>(-0.001953125)];
            tensor<fp16, [1, 512, 1, 4]> var_6789_cast = mul(x = x_615_cast, y = var_6788_to_fp16);
            tensor<int32, [1]> var_6790 = const()[name = tensor<string, []>("op_6790"), val = tensor<int32, [1]>([1])];
            tensor<fp16, [1, 1, 1, 4]> x_mean_131_cast = reduce_sum(axes = var_6790, keep_dims = var_6405, x = var_6789_cast);
            tensor<fp16, [1, 512, 1, 4]> x_zero_mean_131_cast = add(x = x_615_cast, y = x_mean_131_cast);
            tensor<fp16, []> var_6793_to_fp16 = const()[name = tensor<string, []>("op_6793_to_fp16"), val = tensor<fp16, []>(0.001953125)];
            tensor<fp16, [1, 512, 1, 4]> var_6794_cast = mul(x = x_zero_mean_131_cast, y = var_6793_to_fp16);
            tensor<fp16, [1, 512, 1, 4]> var_6795_cast = mul(x = var_6794_cast, y = x_zero_mean_131_cast);
            tensor<int32, [1]> var_6796 = const()[name = tensor<string, []>("op_6796"), val = tensor<int32, [1]>([1])];
            tensor<fp16, [1, 1, 1, 4]> x_var_131_cast = reduce_sum(axes = var_6796, keep_dims = var_6405, x = var_6795_cast);
            tensor<fp16, []> var_6798_to_fp16 = const()[name = tensor<string, []>("op_6798_to_fp16"), val = tensor<fp16, []>(1.00135803e-05)];
            tensor<fp16, [1, 1, 1, 4]> var_6799_cast = add(x = x_var_131_cast, y = var_6798_to_fp16);
            tensor<fp16, []> var_6800_epsilon_0_to_fp16 = const()[name = tensor<string, []>("op_6800_epsilon_0_to_fp16"), val = tensor<fp16, []>(5.96046448e-08)];
            tensor<fp16, [1, 1, 1, 4]> var_6800_cast = rsqrt(epsilon = var_6800_epsilon_0_to_fp16, x = var_6799_cast);
            tensor<fp16, [1, 512, 1, 4]> var_6801_cast = mul(x = x_zero_mean_131_cast, y = var_6800_cast);
            tensor<fp16, [512]> x_617_mean_0_to_fp16 = const()[name = tensor<string, []>("x_617_mean_0_to_fp16"), val = tensor<fp16, [512]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(66360576)))];
            tensor<fp16, [512]> x_617_variance_0_to_fp16 = const()[name = tensor<string, []>("x_617_variance_0_to_fp16"), val = tensor<fp16, [512]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(66361664)))];
            tensor<fp16, [512]> x_617_gamma_0_to_fp16 = const()[name = tensor<string, []>("x_617_gamma_0_to_fp16"), val = tensor<fp16, [512]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(66362752)))];
            tensor<fp16, [512]> x_617_beta_0_to_fp16 = const()[name = tensor<string, []>("x_617_beta_0_to_fp16"), val = tensor<fp16, [512]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(66363840)))];
            tensor<fp16, []> x_617_epsilon_0_to_fp16 = const()[name = tensor<string, []>("x_617_epsilon_0_to_fp16"), val = tensor<fp16, []>(1.00135803e-05)];
            tensor<fp16, [1, 512, 1, 4]> x_617_cast = batch_norm(beta = x_617_beta_0_to_fp16, epsilon = x_617_epsilon_0_to_fp16, gamma = x_617_gamma_0_to_fp16, mean = x_617_mean_0_to_fp16, variance = x_617_variance_0_to_fp16, x = var_6801_cast);
            tensor<int32, [2]> var_6812 = const()[name = tensor<string, []>("op_6812"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_6814 = const()[name = tensor<string, []>("op_6814"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> input_263_pad_type_0 = const()[name = tensor<string, []>("input_263_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> input_263_pad_0 = const()[name = tensor<string, []>("input_263_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [2048, 512, 1, 1]> op_6811_to_fp16_affine_quantized = constexpr_affine_dequantize()[axis = tensor<int32, []>(0), name = tensor<string, []>("op_6811_to_fp16_affine_quantized"), quantized_data = tensor<int8, [2048, 512, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(66364928))), scale = tensor<fp16, [2048]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(67415680))), zero_point = tensor<int8, [2048]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(67413568)))];
            tensor<fp16, [2048]> primary_encoder_encoders_8_feed_forward_w_1_bias_to_fp16 = const()[name = tensor<string, []>("primary_encoder_encoders_8_feed_forward_w_1_bias_to_fp16"), val = tensor<fp16, [2048]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(67419840)))];
            tensor<fp16, [1, 2048, 1, 4]> input_263_cast = conv(bias = primary_encoder_encoders_8_feed_forward_w_1_bias_to_fp16, dilations = var_6814, groups = var_6406, pad = input_263_pad_0, pad_type = input_263_pad_type_0, strides = var_6812, weight = op_6811_to_fp16_affine_quantized, x = x_617_cast);
            tensor<fp16, [1, 2048, 1, 4]> input_265_cast = silu(x = input_263_cast);
            tensor<int32, [2]> var_6823 = const()[name = tensor<string, []>("op_6823"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_6825 = const()[name = tensor<string, []>("op_6825"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> input_267_pad_type_0 = const()[name = tensor<string, []>("input_267_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> input_267_pad_0 = const()[name = tensor<string, []>("input_267_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [512, 2048, 1, 1]> op_6830_weight_0_to_fp16_affine_quantized = constexpr_affine_dequantize()[axis = tensor<int32, []>(0), name = tensor<string, []>("op_6830_weight_0_to_fp16_affine_quantized"), quantized_data = tensor<int8, [512, 2048, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(67424000))), scale = tensor<fp16, [512]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(68473216))), zero_point = tensor<int8, [512]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(68472640)))];
            tensor<fp16, [512]> var_6830_bias_0_to_fp16 = const()[name = tensor<string, []>("op_6830_bias_0_to_fp16"), val = tensor<fp16, [512]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(68474304)))];
            tensor<fp16, [1, 512, 1, 4]> var_6830_cast = conv(bias = var_6830_bias_0_to_fp16, dilations = var_6825, groups = var_6406, pad = input_267_pad_0, pad_type = input_267_pad_type_0, strides = var_6823, weight = op_6830_weight_0_to_fp16_affine_quantized, x = input_265_cast);
            tensor<fp16, [1, 512, 1, 4]> x_623_cast = add(x = x_613_cast, y = var_6830_cast);
            tensor<fp16, [1, 512, 1, 4]> var_6832_cast = abs(x = x_623_cast);
            tensor<fp16, []> var_6833_to_fp16 = const()[name = tensor<string, []>("op_6833_to_fp16"), val = tensor<fp16, []>(0.001953125)];
            tensor<fp16, [1, 512, 1, 4]> var_6834_cast = mul(x = var_6832_cast, y = var_6833_to_fp16);
            tensor<int32, [1]> var_6835 = const()[name = tensor<string, []>("op_6835"), val = tensor<int32, [1]>([1])];
            tensor<fp16, [1, 1, 1, 4]> scale_397_cast = reduce_sum(axes = var_6835, keep_dims = var_6405, x = var_6834_cast);
            tensor<fp16, []> scale_399_epsilon_0_to_fp16 = const()[name = tensor<string, []>("scale_399_epsilon_0_to_fp16"), val = tensor<fp16, []>(5.96046448e-08)];
            tensor<fp16, [1, 1, 1, 4]> scale_399_cast = rsqrt(epsilon = scale_399_epsilon_0_to_fp16, x = scale_397_cast);
            tensor<fp16, [1, 1, 1, 4]> scale_401_cast = mul(x = scale_399_cast, y = scale_399_cast);
            tensor<fp16, [1, 512, 1, 4]> x_625_cast = mul(x = x_623_cast, y = scale_401_cast);
            tensor<fp16, []> var_6840_to_fp16 = const()[name = tensor<string, []>("op_6840_to_fp16"), val = tensor<fp16, []>(-0.001953125)];
            tensor<fp16, [1, 512, 1, 4]> var_6841_cast = mul(x = x_625_cast, y = var_6840_to_fp16);
            tensor<int32, [1]> var_6842 = const()[name = tensor<string, []>("op_6842"), val = tensor<int32, [1]>([1])];
            tensor<fp16, [1, 1, 1, 4]> x_mean_133_cast = reduce_sum(axes = var_6842, keep_dims = var_6405, x = var_6841_cast);
            tensor<fp16, [1, 512, 1, 4]> x_zero_mean_133_cast = add(x = x_625_cast, y = x_mean_133_cast);
            tensor<fp16, []> var_6845_to_fp16 = const()[name = tensor<string, []>("op_6845_to_fp16"), val = tensor<fp16, []>(0.001953125)];
            tensor<fp16, [1, 512, 1, 4]> var_6846_cast = mul(x = x_zero_mean_133_cast, y = var_6845_to_fp16);
            tensor<fp16, [1, 512, 1, 4]> var_6847_cast = mul(x = var_6846_cast, y = x_zero_mean_133_cast);
            tensor<int32, [1]> var_6848 = const()[name = tensor<string, []>("op_6848"), val = tensor<int32, [1]>([1])];
            tensor<fp16, [1, 1, 1, 4]> x_var_133_cast = reduce_sum(axes = var_6848, keep_dims = var_6405, x = var_6847_cast);
            tensor<fp16, []> var_6850_to_fp16 = const()[name = tensor<string, []>("op_6850_to_fp16"), val = tensor<fp16, []>(1.00135803e-05)];
            tensor<fp16, [1, 1, 1, 4]> var_6851_cast = add(x = x_var_133_cast, y = var_6850_to_fp16);
            tensor<fp16, []> var_6852_epsilon_0_to_fp16 = const()[name = tensor<string, []>("op_6852_epsilon_0_to_fp16"), val = tensor<fp16, []>(5.96046448e-08)];
            tensor<fp16, [1, 1, 1, 4]> var_6852_cast = rsqrt(epsilon = var_6852_epsilon_0_to_fp16, x = var_6851_cast);
            tensor<fp16, [1, 512, 1, 4]> var_6853_cast = mul(x = x_zero_mean_133_cast, y = var_6852_cast);
            tensor<fp16, [512]> x_627_mean_0_to_fp16 = const()[name = tensor<string, []>("x_627_mean_0_to_fp16"), val = tensor<fp16, [512]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(68475392)))];
            tensor<fp16, [512]> x_627_variance_0_to_fp16 = const()[name = tensor<string, []>("x_627_variance_0_to_fp16"), val = tensor<fp16, [512]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(68476480)))];
            tensor<fp16, [512]> x_627_gamma_0_to_fp16 = const()[name = tensor<string, []>("x_627_gamma_0_to_fp16"), val = tensor<fp16, [512]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(68477568)))];
            tensor<fp16, [512]> x_627_beta_0_to_fp16 = const()[name = tensor<string, []>("x_627_beta_0_to_fp16"), val = tensor<fp16, [512]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(68478656)))];
            tensor<fp16, []> x_627_epsilon_0_to_fp16 = const()[name = tensor<string, []>("x_627_epsilon_0_to_fp16"), val = tensor<fp16, []>(1.00135803e-05)];
            tensor<fp16, [1, 512, 1, 4]> x_627_cast = batch_norm(beta = x_627_beta_0_to_fp16, epsilon = x_627_epsilon_0_to_fp16, gamma = x_627_gamma_0_to_fp16, mean = x_627_mean_0_to_fp16, variance = x_627_variance_0_to_fp16, x = var_6853_cast);
            tensor<int32, []> var_6868 = const()[name = tensor<string, []>("op_6868"), val = tensor<int32, []>(512)];
            tensor<int32, []> var_6874 = const()[name = tensor<string, []>("op_6874"), val = tensor<int32, []>(2)];
            tensor<int32, []> var_6877 = const()[name = tensor<string, []>("op_6877"), val = tensor<int32, []>(-1)];
            tensor<bool, []> var_6879 = const()[name = tensor<string, []>("op_6879"), val = tensor<bool, []>(true)];
            tensor<int32, []> var_6880 = const()[name = tensor<string, []>("op_6880"), val = tensor<int32, []>(1)];
            tensor<fp16, [1, 512, 1, 4]> var_6927_cast = abs(x = x_627_cast);
            tensor<fp16, []> var_6928_to_fp16 = const()[name = tensor<string, []>("op_6928_to_fp16"), val = tensor<fp16, []>(0.001953125)];
            tensor<fp16, [1, 512, 1, 4]> var_6929_cast = mul(x = var_6927_cast, y = var_6928_to_fp16);
            tensor<int32, [1]> var_6930 = const()[name = tensor<string, []>("op_6930"), val = tensor<int32, [1]>([1])];
            tensor<fp16, [1, 1, 1, 4]> scale_403_cast = reduce_sum(axes = var_6930, keep_dims = var_6879, x = var_6929_cast);
            tensor<fp16, []> scale_405_epsilon_0_to_fp16 = const()[name = tensor<string, []>("scale_405_epsilon_0_to_fp16"), val = tensor<fp16, []>(5.96046448e-08)];
            tensor<fp16, [1, 1, 1, 4]> scale_405_cast = rsqrt(epsilon = scale_405_epsilon_0_to_fp16, x = scale_403_cast);
            tensor<fp16, [1, 1, 1, 4]> scale_407_cast = mul(x = scale_405_cast, y = scale_405_cast);
            tensor<fp16, [1, 512, 1, 4]> x_629_cast = mul(x = x_627_cast, y = scale_407_cast);
            tensor<fp16, []> var_6935_to_fp16 = const()[name = tensor<string, []>("op_6935_to_fp16"), val = tensor<fp16, []>(-0.001953125)];
            tensor<fp16, [1, 512, 1, 4]> var_6936_cast = mul(x = x_629_cast, y = var_6935_to_fp16);
            tensor<int32, [1]> var_6937 = const()[name = tensor<string, []>("op_6937"), val = tensor<int32, [1]>([1])];
            tensor<fp16, [1, 1, 1, 4]> x_mean_135_cast = reduce_sum(axes = var_6937, keep_dims = var_6879, x = var_6936_cast);
            tensor<fp16, [1, 512, 1, 4]> x_zero_mean_135_cast = add(x = x_629_cast, y = x_mean_135_cast);
            tensor<fp16, []> var_6940_to_fp16 = const()[name = tensor<string, []>("op_6940_to_fp16"), val = tensor<fp16, []>(0.001953125)];
            tensor<fp16, [1, 512, 1, 4]> var_6941_cast = mul(x = x_zero_mean_135_cast, y = var_6940_to_fp16);
            tensor<fp16, [1, 512, 1, 4]> var_6942_cast = mul(x = var_6941_cast, y = x_zero_mean_135_cast);
            tensor<int32, [1]> var_6943 = const()[name = tensor<string, []>("op_6943"), val = tensor<int32, [1]>([1])];
            tensor<fp16, [1, 1, 1, 4]> x_var_135_cast = reduce_sum(axes = var_6943, keep_dims = var_6879, x = var_6942_cast);
            tensor<fp16, []> var_6945_to_fp16 = const()[name = tensor<string, []>("op_6945_to_fp16"), val = tensor<fp16, []>(1.00135803e-05)];
            tensor<fp16, [1, 1, 1, 4]> var_6946_cast = add(x = x_var_135_cast, y = var_6945_to_fp16);
            tensor<fp16, []> var_6947_epsilon_0_to_fp16 = const()[name = tensor<string, []>("op_6947_epsilon_0_to_fp16"), val = tensor<fp16, []>(5.96046448e-08)];
            tensor<fp16, [1, 1, 1, 4]> var_6947_cast = rsqrt(epsilon = var_6947_epsilon_0_to_fp16, x = var_6946_cast);
            tensor<fp16, [1, 512, 1, 4]> var_6948_cast = mul(x = x_zero_mean_135_cast, y = var_6947_cast);
            tensor<fp16, [512]> x_631_mean_0_to_fp16 = const()[name = tensor<string, []>("x_631_mean_0_to_fp16"), val = tensor<fp16, [512]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(68479744)))];
            tensor<fp16, [512]> x_631_variance_0_to_fp16 = const()[name = tensor<string, []>("x_631_variance_0_to_fp16"), val = tensor<fp16, [512]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(68480832)))];
            tensor<fp16, [512]> x_631_gamma_0_to_fp16 = const()[name = tensor<string, []>("x_631_gamma_0_to_fp16"), val = tensor<fp16, [512]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(68481920)))];
            tensor<fp16, [512]> x_631_beta_0_to_fp16 = const()[name = tensor<string, []>("x_631_beta_0_to_fp16"), val = tensor<fp16, [512]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(68483008)))];
            tensor<fp16, []> x_631_epsilon_0_to_fp16 = const()[name = tensor<string, []>("x_631_epsilon_0_to_fp16"), val = tensor<fp16, []>(1.00135803e-05)];
            tensor<fp16, [1, 512, 1, 4]> x_631_cast = batch_norm(beta = x_631_beta_0_to_fp16, epsilon = x_631_epsilon_0_to_fp16, gamma = x_631_gamma_0_to_fp16, mean = x_631_mean_0_to_fp16, variance = x_631_variance_0_to_fp16, x = var_6948_cast);
            tensor<int32, [2]> var_6959 = const()[name = tensor<string, []>("op_6959"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_6961 = const()[name = tensor<string, []>("op_6961"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> input_269_pad_type_0 = const()[name = tensor<string, []>("input_269_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> input_269_pad_0 = const()[name = tensor<string, []>("input_269_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [2048, 512, 1, 1]> op_6958_to_fp16_affine_quantized = constexpr_affine_dequantize()[axis = tensor<int32, []>(0), name = tensor<string, []>("op_6958_to_fp16_affine_quantized"), quantized_data = tensor<int8, [2048, 512, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(68484096))), scale = tensor<fp16, [2048]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(69534848))), zero_point = tensor<int8, [2048]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(69532736)))];
            tensor<fp16, [2048]> primary_encoder_encoders_9_feed_forward_macaron_w_1_bias_to_fp16 = const()[name = tensor<string, []>("primary_encoder_encoders_9_feed_forward_macaron_w_1_bias_to_fp16"), val = tensor<fp16, [2048]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(69539008)))];
            tensor<fp16, [1, 2048, 1, 4]> input_269_cast = conv(bias = primary_encoder_encoders_9_feed_forward_macaron_w_1_bias_to_fp16, dilations = var_6961, groups = var_6880, pad = input_269_pad_0, pad_type = input_269_pad_type_0, strides = var_6959, weight = op_6958_to_fp16_affine_quantized, x = x_631_cast);
            tensor<fp16, [1, 2048, 1, 4]> input_271_cast = silu(x = input_269_cast);
            tensor<int32, [2]> var_6970 = const()[name = tensor<string, []>("op_6970"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_6972 = const()[name = tensor<string, []>("op_6972"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> input_273_pad_type_0 = const()[name = tensor<string, []>("input_273_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> input_273_pad_0 = const()[name = tensor<string, []>("input_273_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [512, 2048, 1, 1]> op_6977_weight_0_to_fp16_affine_quantized = constexpr_affine_dequantize()[axis = tensor<int32, []>(0), name = tensor<string, []>("op_6977_weight_0_to_fp16_affine_quantized"), quantized_data = tensor<int8, [512, 2048, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(69543168))), scale = tensor<fp16, [512]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(70592384))), zero_point = tensor<int8, [512]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(70591808)))];
            tensor<fp16, [512]> var_6977_bias_0_to_fp16 = const()[name = tensor<string, []>("op_6977_bias_0_to_fp16"), val = tensor<fp16, [512]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(70593472)))];
            tensor<fp16, [1, 512, 1, 4]> var_6977_cast = conv(bias = var_6977_bias_0_to_fp16, dilations = var_6972, groups = var_6880, pad = input_273_pad_0, pad_type = input_273_pad_type_0, strides = var_6970, weight = op_6977_weight_0_to_fp16_affine_quantized, x = input_271_cast);
            tensor<fp16, [1, 512, 1, 4]> x_637_cast = add(x = x_627_cast, y = var_6977_cast);
            tensor<fp16, [1, 512, 1, 4]> var_6979_cast = abs(x = x_637_cast);
            tensor<fp16, []> var_6980_to_fp16 = const()[name = tensor<string, []>("op_6980_to_fp16"), val = tensor<fp16, []>(0.001953125)];
            tensor<fp16, [1, 512, 1, 4]> var_6981_cast = mul(x = var_6979_cast, y = var_6980_to_fp16);
            tensor<int32, [1]> var_6982 = const()[name = tensor<string, []>("op_6982"), val = tensor<int32, [1]>([1])];
            tensor<fp16, [1, 1, 1, 4]> scale_409_cast = reduce_sum(axes = var_6982, keep_dims = var_6879, x = var_6981_cast);
            tensor<fp16, []> scale_411_epsilon_0_to_fp16 = const()[name = tensor<string, []>("scale_411_epsilon_0_to_fp16"), val = tensor<fp16, []>(5.96046448e-08)];
            tensor<fp16, [1, 1, 1, 4]> scale_411_cast = rsqrt(epsilon = scale_411_epsilon_0_to_fp16, x = scale_409_cast);
            tensor<fp16, [1, 1, 1, 4]> scale_413_cast = mul(x = scale_411_cast, y = scale_411_cast);
            tensor<fp16, [1, 512, 1, 4]> x_639_cast = mul(x = x_637_cast, y = scale_413_cast);
            tensor<fp16, []> var_6987_to_fp16 = const()[name = tensor<string, []>("op_6987_to_fp16"), val = tensor<fp16, []>(-0.001953125)];
            tensor<fp16, [1, 512, 1, 4]> var_6988_cast = mul(x = x_639_cast, y = var_6987_to_fp16);
            tensor<int32, [1]> var_6989 = const()[name = tensor<string, []>("op_6989"), val = tensor<int32, [1]>([1])];
            tensor<fp16, [1, 1, 1, 4]> x_mean_137_cast = reduce_sum(axes = var_6989, keep_dims = var_6879, x = var_6988_cast);
            tensor<fp16, [1, 512, 1, 4]> x_zero_mean_137_cast = add(x = x_639_cast, y = x_mean_137_cast);
            tensor<fp16, []> var_6992_to_fp16 = const()[name = tensor<string, []>("op_6992_to_fp16"), val = tensor<fp16, []>(0.001953125)];
            tensor<fp16, [1, 512, 1, 4]> var_6993_cast = mul(x = x_zero_mean_137_cast, y = var_6992_to_fp16);
            tensor<fp16, [1, 512, 1, 4]> var_6994_cast = mul(x = var_6993_cast, y = x_zero_mean_137_cast);
            tensor<int32, [1]> var_6995 = const()[name = tensor<string, []>("op_6995"), val = tensor<int32, [1]>([1])];
            tensor<fp16, [1, 1, 1, 4]> x_var_137_cast = reduce_sum(axes = var_6995, keep_dims = var_6879, x = var_6994_cast);
            tensor<fp16, []> var_6997_to_fp16 = const()[name = tensor<string, []>("op_6997_to_fp16"), val = tensor<fp16, []>(1.00135803e-05)];
            tensor<fp16, [1, 1, 1, 4]> var_6998_cast = add(x = x_var_137_cast, y = var_6997_to_fp16);
            tensor<fp16, []> var_6999_epsilon_0_to_fp16 = const()[name = tensor<string, []>("op_6999_epsilon_0_to_fp16"), val = tensor<fp16, []>(5.96046448e-08)];
            tensor<fp16, [1, 1, 1, 4]> var_6999_cast = rsqrt(epsilon = var_6999_epsilon_0_to_fp16, x = var_6998_cast);
            tensor<fp16, [1, 512, 1, 4]> var_7000_cast = mul(x = x_zero_mean_137_cast, y = var_6999_cast);
            tensor<fp16, [512]> query_15_mean_0_to_fp16 = const()[name = tensor<string, []>("query_15_mean_0_to_fp16"), val = tensor<fp16, [512]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(70594560)))];
            tensor<fp16, [512]> query_15_variance_0_to_fp16 = const()[name = tensor<string, []>("query_15_variance_0_to_fp16"), val = tensor<fp16, [512]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(70595648)))];
            tensor<fp16, [512]> query_15_gamma_0_to_fp16 = const()[name = tensor<string, []>("query_15_gamma_0_to_fp16"), val = tensor<fp16, [512]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(70596736)))];
            tensor<fp16, [512]> query_15_beta_0_to_fp16 = const()[name = tensor<string, []>("query_15_beta_0_to_fp16"), val = tensor<fp16, [512]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(70597824)))];
            tensor<fp16, []> query_15_epsilon_0_to_fp16 = const()[name = tensor<string, []>("query_15_epsilon_0_to_fp16"), val = tensor<fp16, []>(1.00135803e-05)];
            tensor<fp16, [1, 512, 1, 4]> query_15_cast = batch_norm(beta = query_15_beta_0_to_fp16, epsilon = query_15_epsilon_0_to_fp16, gamma = query_15_gamma_0_to_fp16, mean = query_15_mean_0_to_fp16, variance = query_15_variance_0_to_fp16, x = var_7000_cast);
            tensor<int32, [2]> var_7020 = const()[name = tensor<string, []>("op_7020"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_7022 = const()[name = tensor<string, []>("op_7022"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> var_7024_pad_type_0 = const()[name = tensor<string, []>("op_7024_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> var_7024_pad_0 = const()[name = tensor<string, []>("op_7024_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [512, 512, 1, 1]> op_7019_to_fp16_affine_quantized = constexpr_affine_dequantize()[axis = tensor<int32, []>(0), name = tensor<string, []>("op_7019_to_fp16_affine_quantized"), quantized_data = tensor<int8, [512, 512, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(70598912))), scale = tensor<fp16, [512]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(70861696))), zero_point = tensor<int8, [512]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(70861120)))];
            tensor<fp16, [512]> primary_encoder_encoders_9_self_attn_linear_v_bias_to_fp16 = const()[name = tensor<string, []>("primary_encoder_encoders_9_self_attn_linear_v_bias_to_fp16"), val = tensor<fp16, [512]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(70862784)))];
            tensor<fp16, [1, 512, 1, 4]> var_7024_cast = conv(bias = primary_encoder_encoders_9_self_attn_linear_v_bias_to_fp16, dilations = var_7022, groups = var_6880, pad = var_7024_pad_0, pad_type = var_7024_pad_type_0, strides = var_7020, weight = op_7019_to_fp16_affine_quantized, x = query_15_cast);
            tensor<int32, [8]> tile_46 = const()[name = tensor<string, []>("tile_46"), val = tensor<int32, [8]>([64, 64, 64, 64, 64, 64, 64, 64])];
            tensor<int32, []> var_7025_axis_0 = const()[name = tensor<string, []>("op_7025_axis_0"), val = tensor<int32, []>(1)];
            tensor<fp16, [1, 64, 1, 4]> var_7025_cast_0, tensor<fp16, [1, 64, 1, 4]> var_7025_cast_1, tensor<fp16, [1, 64, 1, 4]> var_7025_cast_2, tensor<fp16, [1, 64, 1, 4]> var_7025_cast_3, tensor<fp16, [1, 64, 1, 4]> var_7025_cast_4, tensor<fp16, [1, 64, 1, 4]> var_7025_cast_5, tensor<fp16, [1, 64, 1, 4]> var_7025_cast_6, tensor<fp16, [1, 64, 1, 4]> var_7025_cast_7 = split(axis = var_7025_axis_0, split_sizes = tile_46, x = var_7024_cast);
            tensor<int32, [8]> tile_47 = const()[name = tensor<string, []>("tile_47"), val = tensor<int32, [8]>([1, 1, 1, 1, 1, 1, 1, 1])];
            tensor<int32, []> var_7034_axis_0 = const()[name = tensor<string, []>("op_7034_axis_0"), val = tensor<int32, []>(2)];
            tensor<fp16, [1, 64, 1, 128]> var_7034_cast_0, tensor<fp16, [1, 64, 1, 128]> var_7034_cast_1, tensor<fp16, [1, 64, 1, 128]> var_7034_cast_2, tensor<fp16, [1, 64, 1, 128]> var_7034_cast_3, tensor<fp16, [1, 64, 1, 128]> var_7034_cast_4, tensor<fp16, [1, 64, 1, 128]> var_7034_cast_5, tensor<fp16, [1, 64, 1, 128]> var_7034_cast_6, tensor<fp16, [1, 64, 1, 128]> var_7034_cast_7 = split(axis = var_7034_axis_0, split_sizes = tile_47, x = var_321_cast_9);
            tensor<bool, []> var_7044_interleave_0 = const()[name = tensor<string, []>("op_7044_interleave_0"), val = tensor<bool, []>(false)];
            tensor<fp16, [1, 64, 1, 132]> var_7044_cast = concat(axis = var_6877, interleave = var_7044_interleave_0, values = (var_7034_cast_0, var_7025_cast_0));
            tensor<int32, [4]> var_7048_begin_0 = const()[name = tensor<string, []>("op_7048_begin_0"), val = tensor<int32, [4]>([0, 0, 0, 4])];
            tensor<int32, [4]> var_7048_end_0 = const()[name = tensor<string, []>("op_7048_end_0"), val = tensor<int32, [4]>([1, 64, 1, 132])];
            tensor<bool, [4]> var_7048_end_mask_0 = const()[name = tensor<string, []>("op_7048_end_mask_0"), val = tensor<bool, [4]>([true, true, true, true])];
            tensor<fp16, [1, 64, 1, 128]> var_7048_cast = slice_by_index(begin = var_7048_begin_0, end = var_7048_end_0, end_mask = var_7048_end_mask_0, x = var_7044_cast);
            tensor<bool, []> var_7050_interleave_0 = const()[name = tensor<string, []>("op_7050_interleave_0"), val = tensor<bool, []>(false)];
            tensor<fp16, [1, 64, 1, 132]> var_7050_cast = concat(axis = var_6877, interleave = var_7050_interleave_0, values = (var_7034_cast_1, var_7025_cast_1));
            tensor<int32, [4]> var_7054_begin_0 = const()[name = tensor<string, []>("op_7054_begin_0"), val = tensor<int32, [4]>([0, 0, 0, 4])];
            tensor<int32, [4]> var_7054_end_0 = const()[name = tensor<string, []>("op_7054_end_0"), val = tensor<int32, [4]>([1, 64, 1, 132])];
            tensor<bool, [4]> var_7054_end_mask_0 = const()[name = tensor<string, []>("op_7054_end_mask_0"), val = tensor<bool, [4]>([true, true, true, true])];
            tensor<fp16, [1, 64, 1, 128]> var_7054_cast = slice_by_index(begin = var_7054_begin_0, end = var_7054_end_0, end_mask = var_7054_end_mask_0, x = var_7050_cast);
            tensor<bool, []> var_7056_interleave_0 = const()[name = tensor<string, []>("op_7056_interleave_0"), val = tensor<bool, []>(false)];
            tensor<fp16, [1, 64, 1, 132]> var_7056_cast = concat(axis = var_6877, interleave = var_7056_interleave_0, values = (var_7034_cast_2, var_7025_cast_2));
            tensor<int32, [4]> var_7060_begin_0 = const()[name = tensor<string, []>("op_7060_begin_0"), val = tensor<int32, [4]>([0, 0, 0, 4])];
            tensor<int32, [4]> var_7060_end_0 = const()[name = tensor<string, []>("op_7060_end_0"), val = tensor<int32, [4]>([1, 64, 1, 132])];
            tensor<bool, [4]> var_7060_end_mask_0 = const()[name = tensor<string, []>("op_7060_end_mask_0"), val = tensor<bool, [4]>([true, true, true, true])];
            tensor<fp16, [1, 64, 1, 128]> var_7060_cast = slice_by_index(begin = var_7060_begin_0, end = var_7060_end_0, end_mask = var_7060_end_mask_0, x = var_7056_cast);
            tensor<bool, []> var_7062_interleave_0 = const()[name = tensor<string, []>("op_7062_interleave_0"), val = tensor<bool, []>(false)];
            tensor<fp16, [1, 64, 1, 132]> var_7062_cast = concat(axis = var_6877, interleave = var_7062_interleave_0, values = (var_7034_cast_3, var_7025_cast_3));
            tensor<int32, [4]> var_7066_begin_0 = const()[name = tensor<string, []>("op_7066_begin_0"), val = tensor<int32, [4]>([0, 0, 0, 4])];
            tensor<int32, [4]> var_7066_end_0 = const()[name = tensor<string, []>("op_7066_end_0"), val = tensor<int32, [4]>([1, 64, 1, 132])];
            tensor<bool, [4]> var_7066_end_mask_0 = const()[name = tensor<string, []>("op_7066_end_mask_0"), val = tensor<bool, [4]>([true, true, true, true])];
            tensor<fp16, [1, 64, 1, 128]> var_7066_cast = slice_by_index(begin = var_7066_begin_0, end = var_7066_end_0, end_mask = var_7066_end_mask_0, x = var_7062_cast);
            tensor<bool, []> var_7068_interleave_0 = const()[name = tensor<string, []>("op_7068_interleave_0"), val = tensor<bool, []>(false)];
            tensor<fp16, [1, 64, 1, 132]> var_7068_cast = concat(axis = var_6877, interleave = var_7068_interleave_0, values = (var_7034_cast_4, var_7025_cast_4));
            tensor<int32, [4]> var_7072_begin_0 = const()[name = tensor<string, []>("op_7072_begin_0"), val = tensor<int32, [4]>([0, 0, 0, 4])];
            tensor<int32, [4]> var_7072_end_0 = const()[name = tensor<string, []>("op_7072_end_0"), val = tensor<int32, [4]>([1, 64, 1, 132])];
            tensor<bool, [4]> var_7072_end_mask_0 = const()[name = tensor<string, []>("op_7072_end_mask_0"), val = tensor<bool, [4]>([true, true, true, true])];
            tensor<fp16, [1, 64, 1, 128]> var_7072_cast = slice_by_index(begin = var_7072_begin_0, end = var_7072_end_0, end_mask = var_7072_end_mask_0, x = var_7068_cast);
            tensor<bool, []> var_7074_interleave_0 = const()[name = tensor<string, []>("op_7074_interleave_0"), val = tensor<bool, []>(false)];
            tensor<fp16, [1, 64, 1, 132]> var_7074_cast = concat(axis = var_6877, interleave = var_7074_interleave_0, values = (var_7034_cast_5, var_7025_cast_5));
            tensor<int32, [4]> var_7078_begin_0 = const()[name = tensor<string, []>("op_7078_begin_0"), val = tensor<int32, [4]>([0, 0, 0, 4])];
            tensor<int32, [4]> var_7078_end_0 = const()[name = tensor<string, []>("op_7078_end_0"), val = tensor<int32, [4]>([1, 64, 1, 132])];
            tensor<bool, [4]> var_7078_end_mask_0 = const()[name = tensor<string, []>("op_7078_end_mask_0"), val = tensor<bool, [4]>([true, true, true, true])];
            tensor<fp16, [1, 64, 1, 128]> var_7078_cast = slice_by_index(begin = var_7078_begin_0, end = var_7078_end_0, end_mask = var_7078_end_mask_0, x = var_7074_cast);
            tensor<bool, []> var_7080_interleave_0 = const()[name = tensor<string, []>("op_7080_interleave_0"), val = tensor<bool, []>(false)];
            tensor<fp16, [1, 64, 1, 132]> var_7080_cast = concat(axis = var_6877, interleave = var_7080_interleave_0, values = (var_7034_cast_6, var_7025_cast_6));
            tensor<int32, [4]> var_7084_begin_0 = const()[name = tensor<string, []>("op_7084_begin_0"), val = tensor<int32, [4]>([0, 0, 0, 4])];
            tensor<int32, [4]> var_7084_end_0 = const()[name = tensor<string, []>("op_7084_end_0"), val = tensor<int32, [4]>([1, 64, 1, 132])];
            tensor<bool, [4]> var_7084_end_mask_0 = const()[name = tensor<string, []>("op_7084_end_mask_0"), val = tensor<bool, [4]>([true, true, true, true])];
            tensor<fp16, [1, 64, 1, 128]> var_7084_cast = slice_by_index(begin = var_7084_begin_0, end = var_7084_end_0, end_mask = var_7084_end_mask_0, x = var_7080_cast);
            tensor<bool, []> var_7086_interleave_0 = const()[name = tensor<string, []>("op_7086_interleave_0"), val = tensor<bool, []>(false)];
            tensor<fp16, [1, 64, 1, 132]> var_7086_cast = concat(axis = var_6877, interleave = var_7086_interleave_0, values = (var_7034_cast_7, var_7025_cast_7));
            tensor<int32, [4]> var_7090_begin_0 = const()[name = tensor<string, []>("op_7090_begin_0"), val = tensor<int32, [4]>([0, 0, 0, 4])];
            tensor<int32, [4]> var_7090_end_0 = const()[name = tensor<string, []>("op_7090_end_0"), val = tensor<int32, [4]>([1, 64, 1, 132])];
            tensor<bool, [4]> var_7090_end_mask_0 = const()[name = tensor<string, []>("op_7090_end_mask_0"), val = tensor<bool, [4]>([true, true, true, true])];
            tensor<fp16, [1, 64, 1, 128]> var_7090_cast = slice_by_index(begin = var_7090_begin_0, end = var_7090_end_0, end_mask = var_7090_end_mask_0, x = var_7086_cast);
            tensor<bool, []> var_7092_interleave_0 = const()[name = tensor<string, []>("op_7092_interleave_0"), val = tensor<bool, []>(false)];
            tensor<fp16, [1, 64, 8, 128]> var_7092_cast = concat(axis = var_6874, interleave = var_7092_interleave_0, values = (var_7048_cast, var_7054_cast, var_7060_cast, var_7066_cast, var_7072_cast, var_7078_cast, var_7084_cast, var_7090_cast));
            tensor<string, []> var_7094_equation_0 = const()[name = tensor<string, []>("op_7094_equation_0"), val = tensor<string, []>("bnhd,bdhm->bnhm")];
            tensor<fp16, [1, 64, 1, 4]> var_7094_cast = einsum(equation = var_7094_equation_0, values = (var_7048_cast, input_205_cast));
            tensor<string, []> var_7096_equation_0 = const()[name = tensor<string, []>("op_7096_equation_0"), val = tensor<string, []>("bnhd,bdhm->bnhm")];
            tensor<fp16, [1, 64, 1, 4]> var_7096_cast = einsum(equation = var_7096_equation_0, values = (var_7054_cast, input_207_cast));
            tensor<string, []> var_7098_equation_0 = const()[name = tensor<string, []>("op_7098_equation_0"), val = tensor<string, []>("bnhd,bdhm->bnhm")];
            tensor<fp16, [1, 64, 1, 4]> var_7098_cast = einsum(equation = var_7098_equation_0, values = (var_7060_cast, input_209_cast));
            tensor<string, []> var_7100_equation_0 = const()[name = tensor<string, []>("op_7100_equation_0"), val = tensor<string, []>("bnhd,bdhm->bnhm")];
            tensor<fp16, [1, 64, 1, 4]> var_7100_cast = einsum(equation = var_7100_equation_0, values = (var_7066_cast, input_211_cast));
            tensor<string, []> var_7102_equation_0 = const()[name = tensor<string, []>("op_7102_equation_0"), val = tensor<string, []>("bnhd,bdhm->bnhm")];
            tensor<fp16, [1, 64, 1, 4]> var_7102_cast = einsum(equation = var_7102_equation_0, values = (var_7072_cast, input_213_cast));
            tensor<string, []> var_7104_equation_0 = const()[name = tensor<string, []>("op_7104_equation_0"), val = tensor<string, []>("bnhd,bdhm->bnhm")];
            tensor<fp16, [1, 64, 1, 4]> var_7104_cast = einsum(equation = var_7104_equation_0, values = (var_7078_cast, input_215_cast));
            tensor<string, []> var_7106_equation_0 = const()[name = tensor<string, []>("op_7106_equation_0"), val = tensor<string, []>("bnhd,bdhm->bnhm")];
            tensor<fp16, [1, 64, 1, 4]> var_7106_cast = einsum(equation = var_7106_equation_0, values = (var_7084_cast, input_217_cast));
            tensor<string, []> var_7108_equation_0 = const()[name = tensor<string, []>("op_7108_equation_0"), val = tensor<string, []>("bnhd,bdhm->bnhm")];
            tensor<fp16, [1, 64, 1, 4]> var_7108_cast = einsum(equation = var_7108_equation_0, values = (var_7090_cast, input_219_cast));
            tensor<bool, []> y_31_interleave_0 = const()[name = tensor<string, []>("y_31_interleave_0"), val = tensor<bool, []>(false)];
            tensor<fp16, [1, 512, 1, 4]> y_31_cast = concat(axis = var_6880, interleave = y_31_interleave_0, values = (var_7094_cast, var_7096_cast, var_7098_cast, var_7100_cast, var_7102_cast, var_7104_cast, var_7106_cast, var_7108_cast));
            tensor<int32, [2]> var_7115 = const()[name = tensor<string, []>("op_7115"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_7117 = const()[name = tensor<string, []>("op_7117"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> input_275_pad_type_0 = const()[name = tensor<string, []>("input_275_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> input_275_pad_0 = const()[name = tensor<string, []>("input_275_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [512, 512, 1, 1]> op_7114_to_fp16_affine_quantized = constexpr_affine_dequantize()[axis = tensor<int32, []>(0), name = tensor<string, []>("op_7114_to_fp16_affine_quantized"), quantized_data = tensor<int8, [512, 512, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(70863872))), scale = tensor<fp16, [512]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(71126656))), zero_point = tensor<int8, [512]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(71126080)))];
            tensor<fp16, [512]> primary_encoder_encoders_9_self_attn_linear_out_bias_to_fp16 = const()[name = tensor<string, []>("primary_encoder_encoders_9_self_attn_linear_out_bias_to_fp16"), val = tensor<fp16, [512]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(71127744)))];
            tensor<fp16, [1, 512, 1, 4]> input_275_cast = conv(bias = primary_encoder_encoders_9_self_attn_linear_out_bias_to_fp16, dilations = var_7117, groups = var_6880, pad = input_275_pad_0, pad_type = input_275_pad_type_0, strides = var_7115, weight = op_7114_to_fp16_affine_quantized, x = y_31_cast);
            tensor<fp16, [1, 512, 1, 4]> x_641_cast = add(x = x_637_cast, y = input_275_cast);
            tensor<fp16, [1, 512, 1, 4]> var_7125_cast = abs(x = x_641_cast);
            tensor<fp16, []> var_7126_to_fp16 = const()[name = tensor<string, []>("op_7126_to_fp16"), val = tensor<fp16, []>(0.001953125)];
            tensor<fp16, [1, 512, 1, 4]> var_7127_cast = mul(x = var_7125_cast, y = var_7126_to_fp16);
            tensor<int32, [1]> var_7128 = const()[name = tensor<string, []>("op_7128"), val = tensor<int32, [1]>([1])];
            tensor<fp16, [1, 1, 1, 4]> scale_415_cast = reduce_sum(axes = var_7128, keep_dims = var_6879, x = var_7127_cast);
            tensor<fp16, []> scale_417_epsilon_0_to_fp16 = const()[name = tensor<string, []>("scale_417_epsilon_0_to_fp16"), val = tensor<fp16, []>(5.96046448e-08)];
            tensor<fp16, [1, 1, 1, 4]> scale_417_cast = rsqrt(epsilon = scale_417_epsilon_0_to_fp16, x = scale_415_cast);
            tensor<fp16, [1, 1, 1, 4]> scale_419_cast = mul(x = scale_417_cast, y = scale_417_cast);
            tensor<fp16, [1, 512, 1, 4]> x_643_cast = mul(x = x_641_cast, y = scale_419_cast);
            tensor<fp16, []> var_7133_to_fp16 = const()[name = tensor<string, []>("op_7133_to_fp16"), val = tensor<fp16, []>(-0.001953125)];
            tensor<fp16, [1, 512, 1, 4]> var_7134_cast = mul(x = x_643_cast, y = var_7133_to_fp16);
            tensor<int32, [1]> var_7135 = const()[name = tensor<string, []>("op_7135"), val = tensor<int32, [1]>([1])];
            tensor<fp16, [1, 1, 1, 4]> x_mean_139_cast = reduce_sum(axes = var_7135, keep_dims = var_6879, x = var_7134_cast);
            tensor<fp16, [1, 512, 1, 4]> x_zero_mean_139_cast = add(x = x_643_cast, y = x_mean_139_cast);
            tensor<fp16, []> var_7138_to_fp16 = const()[name = tensor<string, []>("op_7138_to_fp16"), val = tensor<fp16, []>(0.001953125)];
            tensor<fp16, [1, 512, 1, 4]> var_7139_cast = mul(x = x_zero_mean_139_cast, y = var_7138_to_fp16);
            tensor<fp16, [1, 512, 1, 4]> var_7140_cast = mul(x = var_7139_cast, y = x_zero_mean_139_cast);
            tensor<int32, [1]> var_7141 = const()[name = tensor<string, []>("op_7141"), val = tensor<int32, [1]>([1])];
            tensor<fp16, [1, 1, 1, 4]> x_var_139_cast = reduce_sum(axes = var_7141, keep_dims = var_6879, x = var_7140_cast);
            tensor<fp16, []> var_7143_to_fp16 = const()[name = tensor<string, []>("op_7143_to_fp16"), val = tensor<fp16, []>(1.00135803e-05)];
            tensor<fp16, [1, 1, 1, 4]> var_7144_cast = add(x = x_var_139_cast, y = var_7143_to_fp16);
            tensor<fp16, []> var_7145_epsilon_0_to_fp16 = const()[name = tensor<string, []>("op_7145_epsilon_0_to_fp16"), val = tensor<fp16, []>(5.96046448e-08)];
            tensor<fp16, [1, 1, 1, 4]> var_7145_cast = rsqrt(epsilon = var_7145_epsilon_0_to_fp16, x = var_7144_cast);
            tensor<fp16, [1, 512, 1, 4]> var_7146_cast = mul(x = x_zero_mean_139_cast, y = var_7145_cast);
            tensor<fp16, [512]> x_645_mean_0_to_fp16 = const()[name = tensor<string, []>("x_645_mean_0_to_fp16"), val = tensor<fp16, [512]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(71128832)))];
            tensor<fp16, [512]> x_645_variance_0_to_fp16 = const()[name = tensor<string, []>("x_645_variance_0_to_fp16"), val = tensor<fp16, [512]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(71129920)))];
            tensor<fp16, [512]> x_645_gamma_0_to_fp16 = const()[name = tensor<string, []>("x_645_gamma_0_to_fp16"), val = tensor<fp16, [512]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(71131008)))];
            tensor<fp16, [512]> x_645_beta_0_to_fp16 = const()[name = tensor<string, []>("x_645_beta_0_to_fp16"), val = tensor<fp16, [512]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(71132096)))];
            tensor<fp16, []> x_645_epsilon_0_to_fp16 = const()[name = tensor<string, []>("x_645_epsilon_0_to_fp16"), val = tensor<fp16, []>(1.00135803e-05)];
            tensor<fp16, [1, 512, 1, 4]> x_645_cast = batch_norm(beta = x_645_beta_0_to_fp16, epsilon = x_645_epsilon_0_to_fp16, gamma = x_645_gamma_0_to_fp16, mean = x_645_mean_0_to_fp16, variance = x_645_variance_0_to_fp16, x = var_7146_cast);
            tensor<bool, []> x_647_interleave_0 = const()[name = tensor<string, []>("x_647_interleave_0"), val = tensor<bool, []>(false)];
            tensor<fp16, [1, 512, 1, 36]> x_647_cast = concat(axis = var_6877, interleave = x_647_interleave_0, values = (var_301_cast_9, x_645_cast));
            tensor<int32, [4]> x_649_begin_0 = const()[name = tensor<string, []>("x_649_begin_0"), val = tensor<int32, [4]>([0, 0, 0, 12])];
            tensor<int32, [4]> x_649_end_0 = const()[name = tensor<string, []>("x_649_end_0"), val = tensor<int32, [4]>([1, 512, 1, 36])];
            tensor<bool, [4]> x_649_end_mask_0 = const()[name = tensor<string, []>("x_649_end_mask_0"), val = tensor<bool, [4]>([true, true, true, true])];
            tensor<fp16, [1, 512, 1, 24]> x_649_cast = slice_by_index(begin = x_649_begin_0, end = x_649_end_0, end_mask = x_649_end_mask_0, x = x_647_cast);
            tensor<int32, [4]> x_651_begin_0 = const()[name = tensor<string, []>("x_651_begin_0"), val = tensor<int32, [4]>([0, 0, 0, 12])];
            tensor<int32, [4]> x_651_end_0 = const()[name = tensor<string, []>("x_651_end_0"), val = tensor<int32, [4]>([1, 512, 1, 24])];
            tensor<bool, [4]> x_651_end_mask_0 = const()[name = tensor<string, []>("x_651_end_mask_0"), val = tensor<bool, [4]>([true, true, true, true])];
            tensor<fp16, [1, 512, 1, 12]> x_651_cast = slice_by_index(begin = x_651_begin_0, end = x_651_end_0, end_mask = x_651_end_mask_0, x = x_649_cast);
            tensor<int32, [4]> x_653_begin_0 = const()[name = tensor<string, []>("x_653_begin_0"), val = tensor<int32, [4]>([0, 0, 0, 1])];
            tensor<int32, [4]> x_653_end_0 = const()[name = tensor<string, []>("x_653_end_0"), val = tensor<int32, [4]>([1, 512, 1, 12])];
            tensor<bool, [4]> x_653_end_mask_0 = const()[name = tensor<string, []>("x_653_end_mask_0"), val = tensor<bool, [4]>([true, true, true, true])];
            tensor<fp16, [1, 512, 1, 11]> x_653_cast = slice_by_index(begin = x_653_begin_0, end = x_653_end_0, end_mask = x_653_end_mask_0, x = x_651_cast);
            tensor<int32, [4]> var_7186_begin_0 = const()[name = tensor<string, []>("op_7186_begin_0"), val = tensor<int32, [4]>([0, 0, 0, -7])];
            tensor<int32, [4]> var_7186_end_0 = const()[name = tensor<string, []>("op_7186_end_0"), val = tensor<int32, [4]>([1, 512, 1, 11])];
            tensor<bool, [4]> var_7186_end_mask_0 = const()[name = tensor<string, []>("op_7186_end_mask_0"), val = tensor<bool, [4]>([true, true, true, true])];
            tensor<fp16, [1, 512, 1, 7]> var_7186_cast = slice_by_index(begin = var_7186_begin_0, end = var_7186_end_0, end_mask = var_7186_end_mask_0, x = x_653_cast);
            tensor<int32, [2]> var_7188 = const()[name = tensor<string, []>("op_7188"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_7190 = const()[name = tensor<string, []>("op_7190"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> x_655_pad_type_0 = const()[name = tensor<string, []>("x_655_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> x_655_pad_0 = const()[name = tensor<string, []>("x_655_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [1024, 512, 1, 1]> op_7187_to_fp16_affine_quantized = constexpr_affine_dequantize()[axis = tensor<int32, []>(0), name = tensor<string, []>("op_7187_to_fp16_affine_quantized"), quantized_data = tensor<int8, [1024, 512, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(71133184))), scale = tensor<fp16, [1024]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(71658624))), zero_point = tensor<int8, [1024]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(71657536)))];
            tensor<fp16, [1024]> primary_encoder_encoders_9_conv_module_pointwise_conv1_bias_to_fp16 = const()[name = tensor<string, []>("primary_encoder_encoders_9_conv_module_pointwise_conv1_bias_to_fp16"), val = tensor<fp16, [1024]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(71660736)))];
            tensor<fp16, [1, 1024, 1, 11]> x_655_cast = conv(bias = primary_encoder_encoders_9_conv_module_pointwise_conv1_bias_to_fp16, dilations = var_7190, groups = var_6880, pad = x_655_pad_0, pad_type = x_655_pad_type_0, strides = var_7188, weight = op_7187_to_fp16_affine_quantized, x = x_653_cast);
            tensor<int32, [4]> var_7199_begin_0 = const()[name = tensor<string, []>("op_7199_begin_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<int32, [4]> var_7199_end_0 = const()[name = tensor<string, []>("op_7199_end_0"), val = tensor<int32, [4]>([1, 512, 1, 11])];
            tensor<bool, [4]> var_7199_end_mask_0 = const()[name = tensor<string, []>("op_7199_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [1, 512, 1, 11]> var_7199_cast = slice_by_index(begin = var_7199_begin_0, end = var_7199_end_0, end_mask = var_7199_end_mask_0, x = x_655_cast);
            tensor<int32, [4]> var_7203_begin_0 = const()[name = tensor<string, []>("op_7203_begin_0"), val = tensor<int32, [4]>([0, 512, 0, 0])];
            tensor<int32, [4]> var_7203_end_0 = const()[name = tensor<string, []>("op_7203_end_0"), val = tensor<int32, [4]>([1, 1024, 1, 11])];
            tensor<bool, [4]> var_7203_end_mask_0 = const()[name = tensor<string, []>("op_7203_end_mask_0"), val = tensor<bool, [4]>([true, true, true, true])];
            tensor<fp16, [1, 512, 1, 11]> var_7203_cast = slice_by_index(begin = var_7203_begin_0, end = var_7203_end_0, end_mask = var_7203_end_mask_0, x = x_655_cast);
            tensor<fp16, [1, 512, 1, 11]> var_7206_cast = sigmoid(x = var_7203_cast);
            tensor<fp16, [1, 512, 1, 11]> x_657_cast = mul(x = var_7199_cast, y = var_7206_cast);
            tensor<int32, [2]> var_7209 = const()[name = tensor<string, []>("op_7209"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_7211 = const()[name = tensor<string, []>("op_7211"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> x_659_pad_type_0 = const()[name = tensor<string, []>("x_659_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> x_659_pad_0 = const()[name = tensor<string, []>("x_659_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [512, 1, 1, 8]> op_7208_to_fp16_affine_quantized = constexpr_affine_dequantize()[axis = tensor<int32, []>(0), name = tensor<string, []>("op_7208_to_fp16_affine_quantized"), quantized_data = tensor<int8, [512, 1, 1, 8]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(71662848))), scale = tensor<fp16, [512]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(71667584))), zero_point = tensor<int8, [512]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(71667008)))];
            tensor<fp16, [512]> primary_encoder_encoders_9_conv_module_depthwise_conv_bias_to_fp16 = const()[name = tensor<string, []>("primary_encoder_encoders_9_conv_module_depthwise_conv_bias_to_fp16"), val = tensor<fp16, [512]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(71668672)))];
            tensor<fp16, [1, 512, 1, 4]> x_659_cast = conv(bias = primary_encoder_encoders_9_conv_module_depthwise_conv_bias_to_fp16, dilations = var_7211, groups = var_6868, pad = x_659_pad_0, pad_type = x_659_pad_type_0, strides = var_7209, weight = op_7208_to_fp16_affine_quantized, x = x_657_cast);
            tensor<fp16, [1, 512, 1, 4]> var_7214_cast = abs(x = x_659_cast);
            tensor<fp16, []> var_7215_to_fp16 = const()[name = tensor<string, []>("op_7215_to_fp16"), val = tensor<fp16, []>(0.001953125)];
            tensor<fp16, [1, 512, 1, 4]> var_7216_cast = mul(x = var_7214_cast, y = var_7215_to_fp16);
            tensor<int32, [1]> var_7217 = const()[name = tensor<string, []>("op_7217"), val = tensor<int32, [1]>([1])];
            tensor<fp16, [1, 1, 1, 4]> scale_421_cast = reduce_sum(axes = var_7217, keep_dims = var_6879, x = var_7216_cast);
            tensor<fp16, []> scale_423_epsilon_0_to_fp16 = const()[name = tensor<string, []>("scale_423_epsilon_0_to_fp16"), val = tensor<fp16, []>(5.96046448e-08)];
            tensor<fp16, [1, 1, 1, 4]> scale_423_cast = rsqrt(epsilon = scale_423_epsilon_0_to_fp16, x = scale_421_cast);
            tensor<fp16, [1, 1, 1, 4]> scale_425_cast = mul(x = scale_423_cast, y = scale_423_cast);
            tensor<fp16, [1, 512, 1, 4]> x_661_cast = mul(x = x_659_cast, y = scale_425_cast);
            tensor<fp16, []> var_7222_to_fp16 = const()[name = tensor<string, []>("op_7222_to_fp16"), val = tensor<fp16, []>(-0.001953125)];
            tensor<fp16, [1, 512, 1, 4]> var_7223_cast = mul(x = x_661_cast, y = var_7222_to_fp16);
            tensor<int32, [1]> var_7224 = const()[name = tensor<string, []>("op_7224"), val = tensor<int32, [1]>([1])];
            tensor<fp16, [1, 1, 1, 4]> x_mean_141_cast = reduce_sum(axes = var_7224, keep_dims = var_6879, x = var_7223_cast);
            tensor<fp16, [1, 512, 1, 4]> x_zero_mean_141_cast = add(x = x_661_cast, y = x_mean_141_cast);
            tensor<fp16, []> var_7227_to_fp16 = const()[name = tensor<string, []>("op_7227_to_fp16"), val = tensor<fp16, []>(0.001953125)];
            tensor<fp16, [1, 512, 1, 4]> var_7228_cast = mul(x = x_zero_mean_141_cast, y = var_7227_to_fp16);
            tensor<fp16, [1, 512, 1, 4]> var_7229_cast = mul(x = var_7228_cast, y = x_zero_mean_141_cast);
            tensor<int32, [1]> var_7230 = const()[name = tensor<string, []>("op_7230"), val = tensor<int32, [1]>([1])];
            tensor<fp16, [1, 1, 1, 4]> x_var_141_cast = reduce_sum(axes = var_7230, keep_dims = var_6879, x = var_7229_cast);
            tensor<fp16, []> var_7232_to_fp16 = const()[name = tensor<string, []>("op_7232_to_fp16"), val = tensor<fp16, []>(1.00135803e-05)];
            tensor<fp16, [1, 1, 1, 4]> var_7233_cast = add(x = x_var_141_cast, y = var_7232_to_fp16);
            tensor<fp16, []> var_7234_epsilon_0_to_fp16 = const()[name = tensor<string, []>("op_7234_epsilon_0_to_fp16"), val = tensor<fp16, []>(5.96046448e-08)];
            tensor<fp16, [1, 1, 1, 4]> var_7234_cast = rsqrt(epsilon = var_7234_epsilon_0_to_fp16, x = var_7233_cast);
            tensor<fp16, [1, 512, 1, 4]> var_7235_cast = mul(x = x_zero_mean_141_cast, y = var_7234_cast);
            tensor<fp16, [512]> input_277_mean_0_to_fp16 = const()[name = tensor<string, []>("input_277_mean_0_to_fp16"), val = tensor<fp16, [512]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(71669760)))];
            tensor<fp16, [512]> input_277_variance_0_to_fp16 = const()[name = tensor<string, []>("input_277_variance_0_to_fp16"), val = tensor<fp16, [512]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(71670848)))];
            tensor<fp16, [512]> input_277_gamma_0_to_fp16 = const()[name = tensor<string, []>("input_277_gamma_0_to_fp16"), val = tensor<fp16, [512]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(71671936)))];
            tensor<fp16, [512]> input_277_beta_0_to_fp16 = const()[name = tensor<string, []>("input_277_beta_0_to_fp16"), val = tensor<fp16, [512]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(71673024)))];
            tensor<fp16, []> input_277_epsilon_0_to_fp16 = const()[name = tensor<string, []>("input_277_epsilon_0_to_fp16"), val = tensor<fp16, []>(1.00135803e-05)];
            tensor<fp16, [1, 512, 1, 4]> input_277_cast = batch_norm(beta = input_277_beta_0_to_fp16, epsilon = input_277_epsilon_0_to_fp16, gamma = input_277_gamma_0_to_fp16, mean = input_277_mean_0_to_fp16, variance = input_277_variance_0_to_fp16, x = var_7235_cast);
            tensor<fp16, [1, 512, 1, 4]> x_663_cast = silu(x = input_277_cast);
            tensor<int32, [2]> var_7244 = const()[name = tensor<string, []>("op_7244"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_7246 = const()[name = tensor<string, []>("op_7246"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> input_279_pad_type_0 = const()[name = tensor<string, []>("input_279_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> input_279_pad_0 = const()[name = tensor<string, []>("input_279_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [512, 512, 1, 1]> op_7243_to_fp16_affine_quantized = constexpr_affine_dequantize()[axis = tensor<int32, []>(0), name = tensor<string, []>("op_7243_to_fp16_affine_quantized"), quantized_data = tensor<int8, [512, 512, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(71674112))), scale = tensor<fp16, [512]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(71936896))), zero_point = tensor<int8, [512]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(71936320)))];
            tensor<fp16, [512]> primary_encoder_encoders_9_conv_module_pointwise_conv2_bias_to_fp16 = const()[name = tensor<string, []>("primary_encoder_encoders_9_conv_module_pointwise_conv2_bias_to_fp16"), val = tensor<fp16, [512]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(71937984)))];
            tensor<fp16, [1, 512, 1, 4]> input_279_cast = conv(bias = primary_encoder_encoders_9_conv_module_pointwise_conv2_bias_to_fp16, dilations = var_7246, groups = var_6880, pad = input_279_pad_0, pad_type = input_279_pad_type_0, strides = var_7244, weight = op_7243_to_fp16_affine_quantized, x = x_663_cast);
            tensor<fp16, [1, 512, 1, 4]> x_667_cast = add(x = x_641_cast, y = input_279_cast);
            tensor<fp16, [1, 512, 1, 4]> var_7254_cast = abs(x = x_667_cast);
            tensor<fp16, []> var_7255_to_fp16 = const()[name = tensor<string, []>("op_7255_to_fp16"), val = tensor<fp16, []>(0.001953125)];
            tensor<fp16, [1, 512, 1, 4]> var_7256_cast = mul(x = var_7254_cast, y = var_7255_to_fp16);
            tensor<int32, [1]> var_7257 = const()[name = tensor<string, []>("op_7257"), val = tensor<int32, [1]>([1])];
            tensor<fp16, [1, 1, 1, 4]> scale_427_cast = reduce_sum(axes = var_7257, keep_dims = var_6879, x = var_7256_cast);
            tensor<fp16, []> scale_429_epsilon_0_to_fp16 = const()[name = tensor<string, []>("scale_429_epsilon_0_to_fp16"), val = tensor<fp16, []>(5.96046448e-08)];
            tensor<fp16, [1, 1, 1, 4]> scale_429_cast = rsqrt(epsilon = scale_429_epsilon_0_to_fp16, x = scale_427_cast);
            tensor<fp16, [1, 1, 1, 4]> scale_431_cast = mul(x = scale_429_cast, y = scale_429_cast);
            tensor<fp16, [1, 512, 1, 4]> x_669_cast = mul(x = x_667_cast, y = scale_431_cast);
            tensor<fp16, []> var_7262_to_fp16 = const()[name = tensor<string, []>("op_7262_to_fp16"), val = tensor<fp16, []>(-0.001953125)];
            tensor<fp16, [1, 512, 1, 4]> var_7263_cast = mul(x = x_669_cast, y = var_7262_to_fp16);
            tensor<int32, [1]> var_7264 = const()[name = tensor<string, []>("op_7264"), val = tensor<int32, [1]>([1])];
            tensor<fp16, [1, 1, 1, 4]> x_mean_143_cast = reduce_sum(axes = var_7264, keep_dims = var_6879, x = var_7263_cast);
            tensor<fp16, [1, 512, 1, 4]> x_zero_mean_143_cast = add(x = x_669_cast, y = x_mean_143_cast);
            tensor<fp16, []> var_7267_to_fp16 = const()[name = tensor<string, []>("op_7267_to_fp16"), val = tensor<fp16, []>(0.001953125)];
            tensor<fp16, [1, 512, 1, 4]> var_7268_cast = mul(x = x_zero_mean_143_cast, y = var_7267_to_fp16);
            tensor<fp16, [1, 512, 1, 4]> var_7269_cast = mul(x = var_7268_cast, y = x_zero_mean_143_cast);
            tensor<int32, [1]> var_7270 = const()[name = tensor<string, []>("op_7270"), val = tensor<int32, [1]>([1])];
            tensor<fp16, [1, 1, 1, 4]> x_var_143_cast = reduce_sum(axes = var_7270, keep_dims = var_6879, x = var_7269_cast);
            tensor<fp16, []> var_7272_to_fp16 = const()[name = tensor<string, []>("op_7272_to_fp16"), val = tensor<fp16, []>(1.00135803e-05)];
            tensor<fp16, [1, 1, 1, 4]> var_7273_cast = add(x = x_var_143_cast, y = var_7272_to_fp16);
            tensor<fp16, []> var_7274_epsilon_0_to_fp16 = const()[name = tensor<string, []>("op_7274_epsilon_0_to_fp16"), val = tensor<fp16, []>(5.96046448e-08)];
            tensor<fp16, [1, 1, 1, 4]> var_7274_cast = rsqrt(epsilon = var_7274_epsilon_0_to_fp16, x = var_7273_cast);
            tensor<fp16, [1, 512, 1, 4]> var_7275_cast = mul(x = x_zero_mean_143_cast, y = var_7274_cast);
            tensor<fp16, [512]> x_671_mean_0_to_fp16 = const()[name = tensor<string, []>("x_671_mean_0_to_fp16"), val = tensor<fp16, [512]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(71939072)))];
            tensor<fp16, [512]> x_671_variance_0_to_fp16 = const()[name = tensor<string, []>("x_671_variance_0_to_fp16"), val = tensor<fp16, [512]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(71940160)))];
            tensor<fp16, [512]> x_671_gamma_0_to_fp16 = const()[name = tensor<string, []>("x_671_gamma_0_to_fp16"), val = tensor<fp16, [512]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(71941248)))];
            tensor<fp16, [512]> x_671_beta_0_to_fp16 = const()[name = tensor<string, []>("x_671_beta_0_to_fp16"), val = tensor<fp16, [512]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(71942336)))];
            tensor<fp16, []> x_671_epsilon_0_to_fp16 = const()[name = tensor<string, []>("x_671_epsilon_0_to_fp16"), val = tensor<fp16, []>(1.00135803e-05)];
            tensor<fp16, [1, 512, 1, 4]> x_671_cast = batch_norm(beta = x_671_beta_0_to_fp16, epsilon = x_671_epsilon_0_to_fp16, gamma = x_671_gamma_0_to_fp16, mean = x_671_mean_0_to_fp16, variance = x_671_variance_0_to_fp16, x = var_7275_cast);
            tensor<int32, [2]> var_7286 = const()[name = tensor<string, []>("op_7286"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_7288 = const()[name = tensor<string, []>("op_7288"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> input_281_pad_type_0 = const()[name = tensor<string, []>("input_281_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> input_281_pad_0 = const()[name = tensor<string, []>("input_281_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [2048, 512, 1, 1]> op_7285_to_fp16_affine_quantized = constexpr_affine_dequantize()[axis = tensor<int32, []>(0), name = tensor<string, []>("op_7285_to_fp16_affine_quantized"), quantized_data = tensor<int8, [2048, 512, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(71943424))), scale = tensor<fp16, [2048]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(72994176))), zero_point = tensor<int8, [2048]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(72992064)))];
            tensor<fp16, [2048]> primary_encoder_encoders_9_feed_forward_w_1_bias_to_fp16 = const()[name = tensor<string, []>("primary_encoder_encoders_9_feed_forward_w_1_bias_to_fp16"), val = tensor<fp16, [2048]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(72998336)))];
            tensor<fp16, [1, 2048, 1, 4]> input_281_cast = conv(bias = primary_encoder_encoders_9_feed_forward_w_1_bias_to_fp16, dilations = var_7288, groups = var_6880, pad = input_281_pad_0, pad_type = input_281_pad_type_0, strides = var_7286, weight = op_7285_to_fp16_affine_quantized, x = x_671_cast);
            tensor<fp16, [1, 2048, 1, 4]> input_283_cast = silu(x = input_281_cast);
            tensor<int32, [2]> var_7297 = const()[name = tensor<string, []>("op_7297"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_7299 = const()[name = tensor<string, []>("op_7299"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> input_285_pad_type_0 = const()[name = tensor<string, []>("input_285_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> input_285_pad_0 = const()[name = tensor<string, []>("input_285_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [512, 2048, 1, 1]> op_7304_weight_0_to_fp16_affine_quantized = constexpr_affine_dequantize()[axis = tensor<int32, []>(0), name = tensor<string, []>("op_7304_weight_0_to_fp16_affine_quantized"), quantized_data = tensor<int8, [512, 2048, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(73002496))), scale = tensor<fp16, [512]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(74051712))), zero_point = tensor<int8, [512]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(74051136)))];
            tensor<fp16, [512]> var_7304_bias_0_to_fp16 = const()[name = tensor<string, []>("op_7304_bias_0_to_fp16"), val = tensor<fp16, [512]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(74052800)))];
            tensor<fp16, [1, 512, 1, 4]> var_7304_cast = conv(bias = var_7304_bias_0_to_fp16, dilations = var_7299, groups = var_6880, pad = input_285_pad_0, pad_type = input_285_pad_type_0, strides = var_7297, weight = op_7304_weight_0_to_fp16_affine_quantized, x = input_283_cast);
            tensor<fp16, [1, 512, 1, 4]> x_677_cast = add(x = x_667_cast, y = var_7304_cast);
            tensor<fp16, [1, 512, 1, 4]> var_7306_cast = abs(x = x_677_cast);
            tensor<fp16, []> var_7307_to_fp16 = const()[name = tensor<string, []>("op_7307_to_fp16"), val = tensor<fp16, []>(0.001953125)];
            tensor<fp16, [1, 512, 1, 4]> var_7308_cast = mul(x = var_7306_cast, y = var_7307_to_fp16);
            tensor<int32, [1]> var_7309 = const()[name = tensor<string, []>("op_7309"), val = tensor<int32, [1]>([1])];
            tensor<fp16, [1, 1, 1, 4]> scale_433_cast = reduce_sum(axes = var_7309, keep_dims = var_6879, x = var_7308_cast);
            tensor<fp16, []> scale_435_epsilon_0_to_fp16 = const()[name = tensor<string, []>("scale_435_epsilon_0_to_fp16"), val = tensor<fp16, []>(5.96046448e-08)];
            tensor<fp16, [1, 1, 1, 4]> scale_435_cast = rsqrt(epsilon = scale_435_epsilon_0_to_fp16, x = scale_433_cast);
            tensor<fp16, [1, 1, 1, 4]> scale_437_cast = mul(x = scale_435_cast, y = scale_435_cast);
            tensor<fp16, [1, 512, 1, 4]> x_679_cast = mul(x = x_677_cast, y = scale_437_cast);
            tensor<fp16, []> var_7314_to_fp16 = const()[name = tensor<string, []>("op_7314_to_fp16"), val = tensor<fp16, []>(-0.001953125)];
            tensor<fp16, [1, 512, 1, 4]> var_7315_cast = mul(x = x_679_cast, y = var_7314_to_fp16);
            tensor<int32, [1]> var_7316 = const()[name = tensor<string, []>("op_7316"), val = tensor<int32, [1]>([1])];
            tensor<fp16, [1, 1, 1, 4]> x_mean_145_cast = reduce_sum(axes = var_7316, keep_dims = var_6879, x = var_7315_cast);
            tensor<fp16, [1, 512, 1, 4]> x_zero_mean_145_cast = add(x = x_679_cast, y = x_mean_145_cast);
            tensor<fp16, []> var_7319_to_fp16 = const()[name = tensor<string, []>("op_7319_to_fp16"), val = tensor<fp16, []>(0.001953125)];
            tensor<fp16, [1, 512, 1, 4]> var_7320_cast = mul(x = x_zero_mean_145_cast, y = var_7319_to_fp16);
            tensor<fp16, [1, 512, 1, 4]> var_7321_cast = mul(x = var_7320_cast, y = x_zero_mean_145_cast);
            tensor<int32, [1]> var_7322 = const()[name = tensor<string, []>("op_7322"), val = tensor<int32, [1]>([1])];
            tensor<fp16, [1, 1, 1, 4]> x_var_145_cast = reduce_sum(axes = var_7322, keep_dims = var_6879, x = var_7321_cast);
            tensor<fp16, []> var_7324_to_fp16 = const()[name = tensor<string, []>("op_7324_to_fp16"), val = tensor<fp16, []>(1.00135803e-05)];
            tensor<fp16, [1, 1, 1, 4]> var_7325_cast = add(x = x_var_145_cast, y = var_7324_to_fp16);
            tensor<fp16, []> var_7326_epsilon_0_to_fp16 = const()[name = tensor<string, []>("op_7326_epsilon_0_to_fp16"), val = tensor<fp16, []>(5.96046448e-08)];
            tensor<fp16, [1, 1, 1, 4]> var_7326_cast = rsqrt(epsilon = var_7326_epsilon_0_to_fp16, x = var_7325_cast);
            tensor<fp16, [1, 512, 1, 4]> var_7327_cast = mul(x = x_zero_mean_145_cast, y = var_7326_cast);
            tensor<fp16, [512]> x_681_mean_0_to_fp16 = const()[name = tensor<string, []>("x_681_mean_0_to_fp16"), val = tensor<fp16, [512]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(74053888)))];
            tensor<fp16, [512]> x_681_variance_0_to_fp16 = const()[name = tensor<string, []>("x_681_variance_0_to_fp16"), val = tensor<fp16, [512]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(74054976)))];
            tensor<fp16, [512]> x_681_gamma_0_to_fp16 = const()[name = tensor<string, []>("x_681_gamma_0_to_fp16"), val = tensor<fp16, [512]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(74056064)))];
            tensor<fp16, [512]> x_681_beta_0_to_fp16 = const()[name = tensor<string, []>("x_681_beta_0_to_fp16"), val = tensor<fp16, [512]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(74057152)))];
            tensor<fp16, []> x_681_epsilon_0_to_fp16 = const()[name = tensor<string, []>("x_681_epsilon_0_to_fp16"), val = tensor<fp16, []>(1.00135803e-05)];
            tensor<fp16, [1, 512, 1, 4]> x_681_cast = batch_norm(beta = x_681_beta_0_to_fp16, epsilon = x_681_epsilon_0_to_fp16, gamma = x_681_gamma_0_to_fp16, mean = x_681_mean_0_to_fp16, variance = x_681_variance_0_to_fp16, x = var_7327_cast);
            tensor<int32, []> var_7342 = const()[name = tensor<string, []>("op_7342"), val = tensor<int32, []>(512)];
            tensor<int32, []> var_7348 = const()[name = tensor<string, []>("op_7348"), val = tensor<int32, []>(2)];
            tensor<int32, []> var_7351 = const()[name = tensor<string, []>("op_7351"), val = tensor<int32, []>(-1)];
            tensor<bool, []> var_7353 = const()[name = tensor<string, []>("op_7353"), val = tensor<bool, []>(true)];
            tensor<int32, []> var_7354 = const()[name = tensor<string, []>("op_7354"), val = tensor<int32, []>(1)];
            tensor<fp16, [1, 512, 1, 4]> var_7401_cast = abs(x = x_681_cast);
            tensor<fp16, []> var_7402_to_fp16 = const()[name = tensor<string, []>("op_7402_to_fp16"), val = tensor<fp16, []>(0.001953125)];
            tensor<fp16, [1, 512, 1, 4]> var_7403_cast = mul(x = var_7401_cast, y = var_7402_to_fp16);
            tensor<int32, [1]> var_7404 = const()[name = tensor<string, []>("op_7404"), val = tensor<int32, [1]>([1])];
            tensor<fp16, [1, 1, 1, 4]> scale_439_cast = reduce_sum(axes = var_7404, keep_dims = var_7353, x = var_7403_cast);
            tensor<fp16, []> scale_441_epsilon_0_to_fp16 = const()[name = tensor<string, []>("scale_441_epsilon_0_to_fp16"), val = tensor<fp16, []>(5.96046448e-08)];
            tensor<fp16, [1, 1, 1, 4]> scale_441_cast = rsqrt(epsilon = scale_441_epsilon_0_to_fp16, x = scale_439_cast);
            tensor<fp16, [1, 1, 1, 4]> scale_443_cast = mul(x = scale_441_cast, y = scale_441_cast);
            tensor<fp16, [1, 512, 1, 4]> x_683_cast = mul(x = x_681_cast, y = scale_443_cast);
            tensor<fp16, []> var_7409_to_fp16 = const()[name = tensor<string, []>("op_7409_to_fp16"), val = tensor<fp16, []>(-0.001953125)];
            tensor<fp16, [1, 512, 1, 4]> var_7410_cast = mul(x = x_683_cast, y = var_7409_to_fp16);
            tensor<int32, [1]> var_7411 = const()[name = tensor<string, []>("op_7411"), val = tensor<int32, [1]>([1])];
            tensor<fp16, [1, 1, 1, 4]> x_mean_147_cast = reduce_sum(axes = var_7411, keep_dims = var_7353, x = var_7410_cast);
            tensor<fp16, [1, 512, 1, 4]> x_zero_mean_147_cast = add(x = x_683_cast, y = x_mean_147_cast);
            tensor<fp16, []> var_7414_to_fp16 = const()[name = tensor<string, []>("op_7414_to_fp16"), val = tensor<fp16, []>(0.001953125)];
            tensor<fp16, [1, 512, 1, 4]> var_7415_cast = mul(x = x_zero_mean_147_cast, y = var_7414_to_fp16);
            tensor<fp16, [1, 512, 1, 4]> var_7416_cast = mul(x = var_7415_cast, y = x_zero_mean_147_cast);
            tensor<int32, [1]> var_7417 = const()[name = tensor<string, []>("op_7417"), val = tensor<int32, [1]>([1])];
            tensor<fp16, [1, 1, 1, 4]> x_var_147_cast = reduce_sum(axes = var_7417, keep_dims = var_7353, x = var_7416_cast);
            tensor<fp16, []> var_7419_to_fp16 = const()[name = tensor<string, []>("op_7419_to_fp16"), val = tensor<fp16, []>(1.00135803e-05)];
            tensor<fp16, [1, 1, 1, 4]> var_7420_cast = add(x = x_var_147_cast, y = var_7419_to_fp16);
            tensor<fp16, []> var_7421_epsilon_0_to_fp16 = const()[name = tensor<string, []>("op_7421_epsilon_0_to_fp16"), val = tensor<fp16, []>(5.96046448e-08)];
            tensor<fp16, [1, 1, 1, 4]> var_7421_cast = rsqrt(epsilon = var_7421_epsilon_0_to_fp16, x = var_7420_cast);
            tensor<fp16, [1, 512, 1, 4]> var_7422_cast = mul(x = x_zero_mean_147_cast, y = var_7421_cast);
            tensor<fp16, [512]> x_685_mean_0_to_fp16 = const()[name = tensor<string, []>("x_685_mean_0_to_fp16"), val = tensor<fp16, [512]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(74058240)))];
            tensor<fp16, [512]> x_685_variance_0_to_fp16 = const()[name = tensor<string, []>("x_685_variance_0_to_fp16"), val = tensor<fp16, [512]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(74059328)))];
            tensor<fp16, [512]> x_685_gamma_0_to_fp16 = const()[name = tensor<string, []>("x_685_gamma_0_to_fp16"), val = tensor<fp16, [512]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(74060416)))];
            tensor<fp16, [512]> x_685_beta_0_to_fp16 = const()[name = tensor<string, []>("x_685_beta_0_to_fp16"), val = tensor<fp16, [512]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(74061504)))];
            tensor<fp16, []> x_685_epsilon_0_to_fp16 = const()[name = tensor<string, []>("x_685_epsilon_0_to_fp16"), val = tensor<fp16, []>(1.00135803e-05)];
            tensor<fp16, [1, 512, 1, 4]> x_685_cast = batch_norm(beta = x_685_beta_0_to_fp16, epsilon = x_685_epsilon_0_to_fp16, gamma = x_685_gamma_0_to_fp16, mean = x_685_mean_0_to_fp16, variance = x_685_variance_0_to_fp16, x = var_7422_cast);
            tensor<int32, [2]> var_7433 = const()[name = tensor<string, []>("op_7433"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_7435 = const()[name = tensor<string, []>("op_7435"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> input_287_pad_type_0 = const()[name = tensor<string, []>("input_287_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> input_287_pad_0 = const()[name = tensor<string, []>("input_287_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [2048, 512, 1, 1]> op_7432_to_fp16_affine_quantized = constexpr_affine_dequantize()[axis = tensor<int32, []>(0), name = tensor<string, []>("op_7432_to_fp16_affine_quantized"), quantized_data = tensor<int8, [2048, 512, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(74062592))), scale = tensor<fp16, [2048]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(75113344))), zero_point = tensor<int8, [2048]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(75111232)))];
            tensor<fp16, [2048]> primary_encoder_encoders_10_feed_forward_macaron_w_1_bias_to_fp16 = const()[name = tensor<string, []>("primary_encoder_encoders_10_feed_forward_macaron_w_1_bias_to_fp16"), val = tensor<fp16, [2048]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(75117504)))];
            tensor<fp16, [1, 2048, 1, 4]> input_287_cast = conv(bias = primary_encoder_encoders_10_feed_forward_macaron_w_1_bias_to_fp16, dilations = var_7435, groups = var_7354, pad = input_287_pad_0, pad_type = input_287_pad_type_0, strides = var_7433, weight = op_7432_to_fp16_affine_quantized, x = x_685_cast);
            tensor<fp16, [1, 2048, 1, 4]> input_289_cast = silu(x = input_287_cast);
            tensor<int32, [2]> var_7444 = const()[name = tensor<string, []>("op_7444"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_7446 = const()[name = tensor<string, []>("op_7446"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> input_291_pad_type_0 = const()[name = tensor<string, []>("input_291_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> input_291_pad_0 = const()[name = tensor<string, []>("input_291_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [512, 2048, 1, 1]> op_7451_weight_0_to_fp16_affine_quantized = constexpr_affine_dequantize()[axis = tensor<int32, []>(0), name = tensor<string, []>("op_7451_weight_0_to_fp16_affine_quantized"), quantized_data = tensor<int8, [512, 2048, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(75121664))), scale = tensor<fp16, [512]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(76170880))), zero_point = tensor<int8, [512]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(76170304)))];
            tensor<fp16, [512]> var_7451_bias_0_to_fp16 = const()[name = tensor<string, []>("op_7451_bias_0_to_fp16"), val = tensor<fp16, [512]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(76171968)))];
            tensor<fp16, [1, 512, 1, 4]> var_7451_cast = conv(bias = var_7451_bias_0_to_fp16, dilations = var_7446, groups = var_7354, pad = input_291_pad_0, pad_type = input_291_pad_type_0, strides = var_7444, weight = op_7451_weight_0_to_fp16_affine_quantized, x = input_289_cast);
            tensor<fp16, [1, 512, 1, 4]> x_691_cast = add(x = x_681_cast, y = var_7451_cast);
            tensor<fp16, [1, 512, 1, 4]> var_7453_cast = abs(x = x_691_cast);
            tensor<fp16, []> var_7454_to_fp16 = const()[name = tensor<string, []>("op_7454_to_fp16"), val = tensor<fp16, []>(0.001953125)];
            tensor<fp16, [1, 512, 1, 4]> var_7455_cast = mul(x = var_7453_cast, y = var_7454_to_fp16);
            tensor<int32, [1]> var_7456 = const()[name = tensor<string, []>("op_7456"), val = tensor<int32, [1]>([1])];
            tensor<fp16, [1, 1, 1, 4]> scale_445_cast = reduce_sum(axes = var_7456, keep_dims = var_7353, x = var_7455_cast);
            tensor<fp16, []> scale_447_epsilon_0_to_fp16 = const()[name = tensor<string, []>("scale_447_epsilon_0_to_fp16"), val = tensor<fp16, []>(5.96046448e-08)];
            tensor<fp16, [1, 1, 1, 4]> scale_447_cast = rsqrt(epsilon = scale_447_epsilon_0_to_fp16, x = scale_445_cast);
            tensor<fp16, [1, 1, 1, 4]> scale_449_cast = mul(x = scale_447_cast, y = scale_447_cast);
            tensor<fp16, [1, 512, 1, 4]> x_693_cast = mul(x = x_691_cast, y = scale_449_cast);
            tensor<fp16, []> var_7461_to_fp16 = const()[name = tensor<string, []>("op_7461_to_fp16"), val = tensor<fp16, []>(-0.001953125)];
            tensor<fp16, [1, 512, 1, 4]> var_7462_cast = mul(x = x_693_cast, y = var_7461_to_fp16);
            tensor<int32, [1]> var_7463 = const()[name = tensor<string, []>("op_7463"), val = tensor<int32, [1]>([1])];
            tensor<fp16, [1, 1, 1, 4]> x_mean_149_cast = reduce_sum(axes = var_7463, keep_dims = var_7353, x = var_7462_cast);
            tensor<fp16, [1, 512, 1, 4]> x_zero_mean_149_cast = add(x = x_693_cast, y = x_mean_149_cast);
            tensor<fp16, []> var_7466_to_fp16 = const()[name = tensor<string, []>("op_7466_to_fp16"), val = tensor<fp16, []>(0.001953125)];
            tensor<fp16, [1, 512, 1, 4]> var_7467_cast = mul(x = x_zero_mean_149_cast, y = var_7466_to_fp16);
            tensor<fp16, [1, 512, 1, 4]> var_7468_cast = mul(x = var_7467_cast, y = x_zero_mean_149_cast);
            tensor<int32, [1]> var_7469 = const()[name = tensor<string, []>("op_7469"), val = tensor<int32, [1]>([1])];
            tensor<fp16, [1, 1, 1, 4]> x_var_149_cast = reduce_sum(axes = var_7469, keep_dims = var_7353, x = var_7468_cast);
            tensor<fp16, []> var_7471_to_fp16 = const()[name = tensor<string, []>("op_7471_to_fp16"), val = tensor<fp16, []>(1.00135803e-05)];
            tensor<fp16, [1, 1, 1, 4]> var_7472_cast = add(x = x_var_149_cast, y = var_7471_to_fp16);
            tensor<fp16, []> var_7473_epsilon_0_to_fp16 = const()[name = tensor<string, []>("op_7473_epsilon_0_to_fp16"), val = tensor<fp16, []>(5.96046448e-08)];
            tensor<fp16, [1, 1, 1, 4]> var_7473_cast = rsqrt(epsilon = var_7473_epsilon_0_to_fp16, x = var_7472_cast);
            tensor<fp16, [1, 512, 1, 4]> var_7474_cast = mul(x = x_zero_mean_149_cast, y = var_7473_cast);
            tensor<fp16, [512]> query_17_mean_0_to_fp16 = const()[name = tensor<string, []>("query_17_mean_0_to_fp16"), val = tensor<fp16, [512]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(76173056)))];
            tensor<fp16, [512]> query_17_variance_0_to_fp16 = const()[name = tensor<string, []>("query_17_variance_0_to_fp16"), val = tensor<fp16, [512]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(76174144)))];
            tensor<fp16, [512]> query_17_gamma_0_to_fp16 = const()[name = tensor<string, []>("query_17_gamma_0_to_fp16"), val = tensor<fp16, [512]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(76175232)))];
            tensor<fp16, [512]> query_17_beta_0_to_fp16 = const()[name = tensor<string, []>("query_17_beta_0_to_fp16"), val = tensor<fp16, [512]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(76176320)))];
            tensor<fp16, []> query_17_epsilon_0_to_fp16 = const()[name = tensor<string, []>("query_17_epsilon_0_to_fp16"), val = tensor<fp16, []>(1.00135803e-05)];
            tensor<fp16, [1, 512, 1, 4]> query_17_cast = batch_norm(beta = query_17_beta_0_to_fp16, epsilon = query_17_epsilon_0_to_fp16, gamma = query_17_gamma_0_to_fp16, mean = query_17_mean_0_to_fp16, variance = query_17_variance_0_to_fp16, x = var_7474_cast);
            tensor<int32, [2]> var_7494 = const()[name = tensor<string, []>("op_7494"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_7496 = const()[name = tensor<string, []>("op_7496"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> var_7498_pad_type_0 = const()[name = tensor<string, []>("op_7498_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> var_7498_pad_0 = const()[name = tensor<string, []>("op_7498_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [512, 512, 1, 1]> op_7493_to_fp16_affine_quantized = constexpr_affine_dequantize()[axis = tensor<int32, []>(0), name = tensor<string, []>("op_7493_to_fp16_affine_quantized"), quantized_data = tensor<int8, [512, 512, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(76177408))), scale = tensor<fp16, [512]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(76440192))), zero_point = tensor<int8, [512]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(76439616)))];
            tensor<fp16, [512]> primary_encoder_encoders_10_self_attn_linear_v_bias_to_fp16 = const()[name = tensor<string, []>("primary_encoder_encoders_10_self_attn_linear_v_bias_to_fp16"), val = tensor<fp16, [512]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(76441280)))];
            tensor<fp16, [1, 512, 1, 4]> var_7498_cast = conv(bias = primary_encoder_encoders_10_self_attn_linear_v_bias_to_fp16, dilations = var_7496, groups = var_7354, pad = var_7498_pad_0, pad_type = var_7498_pad_type_0, strides = var_7494, weight = op_7493_to_fp16_affine_quantized, x = query_17_cast);
            tensor<int32, [8]> tile_48 = const()[name = tensor<string, []>("tile_48"), val = tensor<int32, [8]>([64, 64, 64, 64, 64, 64, 64, 64])];
            tensor<int32, []> var_7499_axis_0 = const()[name = tensor<string, []>("op_7499_axis_0"), val = tensor<int32, []>(1)];
            tensor<fp16, [1, 64, 1, 4]> var_7499_cast_0, tensor<fp16, [1, 64, 1, 4]> var_7499_cast_1, tensor<fp16, [1, 64, 1, 4]> var_7499_cast_2, tensor<fp16, [1, 64, 1, 4]> var_7499_cast_3, tensor<fp16, [1, 64, 1, 4]> var_7499_cast_4, tensor<fp16, [1, 64, 1, 4]> var_7499_cast_5, tensor<fp16, [1, 64, 1, 4]> var_7499_cast_6, tensor<fp16, [1, 64, 1, 4]> var_7499_cast_7 = split(axis = var_7499_axis_0, split_sizes = tile_48, x = var_7498_cast);
            tensor<int32, [8]> tile_49 = const()[name = tensor<string, []>("tile_49"), val = tensor<int32, [8]>([1, 1, 1, 1, 1, 1, 1, 1])];
            tensor<int32, []> var_7508_axis_0 = const()[name = tensor<string, []>("op_7508_axis_0"), val = tensor<int32, []>(2)];
            tensor<fp16, [1, 64, 1, 128]> var_7508_cast_0, tensor<fp16, [1, 64, 1, 128]> var_7508_cast_1, tensor<fp16, [1, 64, 1, 128]> var_7508_cast_2, tensor<fp16, [1, 64, 1, 128]> var_7508_cast_3, tensor<fp16, [1, 64, 1, 128]> var_7508_cast_4, tensor<fp16, [1, 64, 1, 128]> var_7508_cast_5, tensor<fp16, [1, 64, 1, 128]> var_7508_cast_6, tensor<fp16, [1, 64, 1, 128]> var_7508_cast_7 = split(axis = var_7508_axis_0, split_sizes = tile_49, x = var_321_cast_10);
            tensor<bool, []> var_7518_interleave_0 = const()[name = tensor<string, []>("op_7518_interleave_0"), val = tensor<bool, []>(false)];
            tensor<fp16, [1, 64, 1, 132]> var_7518_cast = concat(axis = var_7351, interleave = var_7518_interleave_0, values = (var_7508_cast_0, var_7499_cast_0));
            tensor<int32, [4]> var_7522_begin_0 = const()[name = tensor<string, []>("op_7522_begin_0"), val = tensor<int32, [4]>([0, 0, 0, 4])];
            tensor<int32, [4]> var_7522_end_0 = const()[name = tensor<string, []>("op_7522_end_0"), val = tensor<int32, [4]>([1, 64, 1, 132])];
            tensor<bool, [4]> var_7522_end_mask_0 = const()[name = tensor<string, []>("op_7522_end_mask_0"), val = tensor<bool, [4]>([true, true, true, true])];
            tensor<fp16, [1, 64, 1, 128]> var_7522_cast = slice_by_index(begin = var_7522_begin_0, end = var_7522_end_0, end_mask = var_7522_end_mask_0, x = var_7518_cast);
            tensor<bool, []> var_7524_interleave_0 = const()[name = tensor<string, []>("op_7524_interleave_0"), val = tensor<bool, []>(false)];
            tensor<fp16, [1, 64, 1, 132]> var_7524_cast = concat(axis = var_7351, interleave = var_7524_interleave_0, values = (var_7508_cast_1, var_7499_cast_1));
            tensor<int32, [4]> var_7528_begin_0 = const()[name = tensor<string, []>("op_7528_begin_0"), val = tensor<int32, [4]>([0, 0, 0, 4])];
            tensor<int32, [4]> var_7528_end_0 = const()[name = tensor<string, []>("op_7528_end_0"), val = tensor<int32, [4]>([1, 64, 1, 132])];
            tensor<bool, [4]> var_7528_end_mask_0 = const()[name = tensor<string, []>("op_7528_end_mask_0"), val = tensor<bool, [4]>([true, true, true, true])];
            tensor<fp16, [1, 64, 1, 128]> var_7528_cast = slice_by_index(begin = var_7528_begin_0, end = var_7528_end_0, end_mask = var_7528_end_mask_0, x = var_7524_cast);
            tensor<bool, []> var_7530_interleave_0 = const()[name = tensor<string, []>("op_7530_interleave_0"), val = tensor<bool, []>(false)];
            tensor<fp16, [1, 64, 1, 132]> var_7530_cast = concat(axis = var_7351, interleave = var_7530_interleave_0, values = (var_7508_cast_2, var_7499_cast_2));
            tensor<int32, [4]> var_7534_begin_0 = const()[name = tensor<string, []>("op_7534_begin_0"), val = tensor<int32, [4]>([0, 0, 0, 4])];
            tensor<int32, [4]> var_7534_end_0 = const()[name = tensor<string, []>("op_7534_end_0"), val = tensor<int32, [4]>([1, 64, 1, 132])];
            tensor<bool, [4]> var_7534_end_mask_0 = const()[name = tensor<string, []>("op_7534_end_mask_0"), val = tensor<bool, [4]>([true, true, true, true])];
            tensor<fp16, [1, 64, 1, 128]> var_7534_cast = slice_by_index(begin = var_7534_begin_0, end = var_7534_end_0, end_mask = var_7534_end_mask_0, x = var_7530_cast);
            tensor<bool, []> var_7536_interleave_0 = const()[name = tensor<string, []>("op_7536_interleave_0"), val = tensor<bool, []>(false)];
            tensor<fp16, [1, 64, 1, 132]> var_7536_cast = concat(axis = var_7351, interleave = var_7536_interleave_0, values = (var_7508_cast_3, var_7499_cast_3));
            tensor<int32, [4]> var_7540_begin_0 = const()[name = tensor<string, []>("op_7540_begin_0"), val = tensor<int32, [4]>([0, 0, 0, 4])];
            tensor<int32, [4]> var_7540_end_0 = const()[name = tensor<string, []>("op_7540_end_0"), val = tensor<int32, [4]>([1, 64, 1, 132])];
            tensor<bool, [4]> var_7540_end_mask_0 = const()[name = tensor<string, []>("op_7540_end_mask_0"), val = tensor<bool, [4]>([true, true, true, true])];
            tensor<fp16, [1, 64, 1, 128]> var_7540_cast = slice_by_index(begin = var_7540_begin_0, end = var_7540_end_0, end_mask = var_7540_end_mask_0, x = var_7536_cast);
            tensor<bool, []> var_7542_interleave_0 = const()[name = tensor<string, []>("op_7542_interleave_0"), val = tensor<bool, []>(false)];
            tensor<fp16, [1, 64, 1, 132]> var_7542_cast = concat(axis = var_7351, interleave = var_7542_interleave_0, values = (var_7508_cast_4, var_7499_cast_4));
            tensor<int32, [4]> var_7546_begin_0 = const()[name = tensor<string, []>("op_7546_begin_0"), val = tensor<int32, [4]>([0, 0, 0, 4])];
            tensor<int32, [4]> var_7546_end_0 = const()[name = tensor<string, []>("op_7546_end_0"), val = tensor<int32, [4]>([1, 64, 1, 132])];
            tensor<bool, [4]> var_7546_end_mask_0 = const()[name = tensor<string, []>("op_7546_end_mask_0"), val = tensor<bool, [4]>([true, true, true, true])];
            tensor<fp16, [1, 64, 1, 128]> var_7546_cast = slice_by_index(begin = var_7546_begin_0, end = var_7546_end_0, end_mask = var_7546_end_mask_0, x = var_7542_cast);
            tensor<bool, []> var_7548_interleave_0 = const()[name = tensor<string, []>("op_7548_interleave_0"), val = tensor<bool, []>(false)];
            tensor<fp16, [1, 64, 1, 132]> var_7548_cast = concat(axis = var_7351, interleave = var_7548_interleave_0, values = (var_7508_cast_5, var_7499_cast_5));
            tensor<int32, [4]> var_7552_begin_0 = const()[name = tensor<string, []>("op_7552_begin_0"), val = tensor<int32, [4]>([0, 0, 0, 4])];
            tensor<int32, [4]> var_7552_end_0 = const()[name = tensor<string, []>("op_7552_end_0"), val = tensor<int32, [4]>([1, 64, 1, 132])];
            tensor<bool, [4]> var_7552_end_mask_0 = const()[name = tensor<string, []>("op_7552_end_mask_0"), val = tensor<bool, [4]>([true, true, true, true])];
            tensor<fp16, [1, 64, 1, 128]> var_7552_cast = slice_by_index(begin = var_7552_begin_0, end = var_7552_end_0, end_mask = var_7552_end_mask_0, x = var_7548_cast);
            tensor<bool, []> var_7554_interleave_0 = const()[name = tensor<string, []>("op_7554_interleave_0"), val = tensor<bool, []>(false)];
            tensor<fp16, [1, 64, 1, 132]> var_7554_cast = concat(axis = var_7351, interleave = var_7554_interleave_0, values = (var_7508_cast_6, var_7499_cast_6));
            tensor<int32, [4]> var_7558_begin_0 = const()[name = tensor<string, []>("op_7558_begin_0"), val = tensor<int32, [4]>([0, 0, 0, 4])];
            tensor<int32, [4]> var_7558_end_0 = const()[name = tensor<string, []>("op_7558_end_0"), val = tensor<int32, [4]>([1, 64, 1, 132])];
            tensor<bool, [4]> var_7558_end_mask_0 = const()[name = tensor<string, []>("op_7558_end_mask_0"), val = tensor<bool, [4]>([true, true, true, true])];
            tensor<fp16, [1, 64, 1, 128]> var_7558_cast = slice_by_index(begin = var_7558_begin_0, end = var_7558_end_0, end_mask = var_7558_end_mask_0, x = var_7554_cast);
            tensor<bool, []> var_7560_interleave_0 = const()[name = tensor<string, []>("op_7560_interleave_0"), val = tensor<bool, []>(false)];
            tensor<fp16, [1, 64, 1, 132]> var_7560_cast = concat(axis = var_7351, interleave = var_7560_interleave_0, values = (var_7508_cast_7, var_7499_cast_7));
            tensor<int32, [4]> var_7564_begin_0 = const()[name = tensor<string, []>("op_7564_begin_0"), val = tensor<int32, [4]>([0, 0, 0, 4])];
            tensor<int32, [4]> var_7564_end_0 = const()[name = tensor<string, []>("op_7564_end_0"), val = tensor<int32, [4]>([1, 64, 1, 132])];
            tensor<bool, [4]> var_7564_end_mask_0 = const()[name = tensor<string, []>("op_7564_end_mask_0"), val = tensor<bool, [4]>([true, true, true, true])];
            tensor<fp16, [1, 64, 1, 128]> var_7564_cast = slice_by_index(begin = var_7564_begin_0, end = var_7564_end_0, end_mask = var_7564_end_mask_0, x = var_7560_cast);
            tensor<bool, []> var_7566_interleave_0 = const()[name = tensor<string, []>("op_7566_interleave_0"), val = tensor<bool, []>(false)];
            tensor<fp16, [1, 64, 8, 128]> var_7566_cast = concat(axis = var_7348, interleave = var_7566_interleave_0, values = (var_7522_cast, var_7528_cast, var_7534_cast, var_7540_cast, var_7546_cast, var_7552_cast, var_7558_cast, var_7564_cast));
            tensor<string, []> var_7568_equation_0 = const()[name = tensor<string, []>("op_7568_equation_0"), val = tensor<string, []>("bnhd,bdhm->bnhm")];
            tensor<fp16, [1, 64, 1, 4]> var_7568_cast = einsum(equation = var_7568_equation_0, values = (var_7522_cast, input_205_cast));
            tensor<string, []> var_7570_equation_0 = const()[name = tensor<string, []>("op_7570_equation_0"), val = tensor<string, []>("bnhd,bdhm->bnhm")];
            tensor<fp16, [1, 64, 1, 4]> var_7570_cast = einsum(equation = var_7570_equation_0, values = (var_7528_cast, input_207_cast));
            tensor<string, []> var_7572_equation_0 = const()[name = tensor<string, []>("op_7572_equation_0"), val = tensor<string, []>("bnhd,bdhm->bnhm")];
            tensor<fp16, [1, 64, 1, 4]> var_7572_cast = einsum(equation = var_7572_equation_0, values = (var_7534_cast, input_209_cast));
            tensor<string, []> var_7574_equation_0 = const()[name = tensor<string, []>("op_7574_equation_0"), val = tensor<string, []>("bnhd,bdhm->bnhm")];
            tensor<fp16, [1, 64, 1, 4]> var_7574_cast = einsum(equation = var_7574_equation_0, values = (var_7540_cast, input_211_cast));
            tensor<string, []> var_7576_equation_0 = const()[name = tensor<string, []>("op_7576_equation_0"), val = tensor<string, []>("bnhd,bdhm->bnhm")];
            tensor<fp16, [1, 64, 1, 4]> var_7576_cast = einsum(equation = var_7576_equation_0, values = (var_7546_cast, input_213_cast));
            tensor<string, []> var_7578_equation_0 = const()[name = tensor<string, []>("op_7578_equation_0"), val = tensor<string, []>("bnhd,bdhm->bnhm")];
            tensor<fp16, [1, 64, 1, 4]> var_7578_cast = einsum(equation = var_7578_equation_0, values = (var_7552_cast, input_215_cast));
            tensor<string, []> var_7580_equation_0 = const()[name = tensor<string, []>("op_7580_equation_0"), val = tensor<string, []>("bnhd,bdhm->bnhm")];
            tensor<fp16, [1, 64, 1, 4]> var_7580_cast = einsum(equation = var_7580_equation_0, values = (var_7558_cast, input_217_cast));
            tensor<string, []> var_7582_equation_0 = const()[name = tensor<string, []>("op_7582_equation_0"), val = tensor<string, []>("bnhd,bdhm->bnhm")];
            tensor<fp16, [1, 64, 1, 4]> var_7582_cast = einsum(equation = var_7582_equation_0, values = (var_7564_cast, input_219_cast));
            tensor<bool, []> y_33_interleave_0 = const()[name = tensor<string, []>("y_33_interleave_0"), val = tensor<bool, []>(false)];
            tensor<fp16, [1, 512, 1, 4]> y_33_cast = concat(axis = var_7354, interleave = y_33_interleave_0, values = (var_7568_cast, var_7570_cast, var_7572_cast, var_7574_cast, var_7576_cast, var_7578_cast, var_7580_cast, var_7582_cast));
            tensor<int32, [2]> var_7589 = const()[name = tensor<string, []>("op_7589"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_7591 = const()[name = tensor<string, []>("op_7591"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> input_293_pad_type_0 = const()[name = tensor<string, []>("input_293_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> input_293_pad_0 = const()[name = tensor<string, []>("input_293_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [512, 512, 1, 1]> op_7588_to_fp16_affine_quantized = constexpr_affine_dequantize()[axis = tensor<int32, []>(0), name = tensor<string, []>("op_7588_to_fp16_affine_quantized"), quantized_data = tensor<int8, [512, 512, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(76442368))), scale = tensor<fp16, [512]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(76705152))), zero_point = tensor<int8, [512]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(76704576)))];
            tensor<fp16, [512]> primary_encoder_encoders_10_self_attn_linear_out_bias_to_fp16 = const()[name = tensor<string, []>("primary_encoder_encoders_10_self_attn_linear_out_bias_to_fp16"), val = tensor<fp16, [512]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(76706240)))];
            tensor<fp16, [1, 512, 1, 4]> input_293_cast = conv(bias = primary_encoder_encoders_10_self_attn_linear_out_bias_to_fp16, dilations = var_7591, groups = var_7354, pad = input_293_pad_0, pad_type = input_293_pad_type_0, strides = var_7589, weight = op_7588_to_fp16_affine_quantized, x = y_33_cast);
            tensor<fp16, [1, 512, 1, 4]> x_695_cast = add(x = x_691_cast, y = input_293_cast);
            tensor<fp16, [1, 512, 1, 4]> var_7599_cast = abs(x = x_695_cast);
            tensor<fp16, []> var_7600_to_fp16 = const()[name = tensor<string, []>("op_7600_to_fp16"), val = tensor<fp16, []>(0.001953125)];
            tensor<fp16, [1, 512, 1, 4]> var_7601_cast = mul(x = var_7599_cast, y = var_7600_to_fp16);
            tensor<int32, [1]> var_7602 = const()[name = tensor<string, []>("op_7602"), val = tensor<int32, [1]>([1])];
            tensor<fp16, [1, 1, 1, 4]> scale_451_cast = reduce_sum(axes = var_7602, keep_dims = var_7353, x = var_7601_cast);
            tensor<fp16, []> scale_453_epsilon_0_to_fp16 = const()[name = tensor<string, []>("scale_453_epsilon_0_to_fp16"), val = tensor<fp16, []>(5.96046448e-08)];
            tensor<fp16, [1, 1, 1, 4]> scale_453_cast = rsqrt(epsilon = scale_453_epsilon_0_to_fp16, x = scale_451_cast);
            tensor<fp16, [1, 1, 1, 4]> scale_455_cast = mul(x = scale_453_cast, y = scale_453_cast);
            tensor<fp16, [1, 512, 1, 4]> x_697_cast = mul(x = x_695_cast, y = scale_455_cast);
            tensor<fp16, []> var_7607_to_fp16 = const()[name = tensor<string, []>("op_7607_to_fp16"), val = tensor<fp16, []>(-0.001953125)];
            tensor<fp16, [1, 512, 1, 4]> var_7608_cast = mul(x = x_697_cast, y = var_7607_to_fp16);
            tensor<int32, [1]> var_7609 = const()[name = tensor<string, []>("op_7609"), val = tensor<int32, [1]>([1])];
            tensor<fp16, [1, 1, 1, 4]> x_mean_151_cast = reduce_sum(axes = var_7609, keep_dims = var_7353, x = var_7608_cast);
            tensor<fp16, [1, 512, 1, 4]> x_zero_mean_151_cast = add(x = x_697_cast, y = x_mean_151_cast);
            tensor<fp16, []> var_7612_to_fp16 = const()[name = tensor<string, []>("op_7612_to_fp16"), val = tensor<fp16, []>(0.001953125)];
            tensor<fp16, [1, 512, 1, 4]> var_7613_cast = mul(x = x_zero_mean_151_cast, y = var_7612_to_fp16);
            tensor<fp16, [1, 512, 1, 4]> var_7614_cast = mul(x = var_7613_cast, y = x_zero_mean_151_cast);
            tensor<int32, [1]> var_7615 = const()[name = tensor<string, []>("op_7615"), val = tensor<int32, [1]>([1])];
            tensor<fp16, [1, 1, 1, 4]> x_var_151_cast = reduce_sum(axes = var_7615, keep_dims = var_7353, x = var_7614_cast);
            tensor<fp16, []> var_7617_to_fp16 = const()[name = tensor<string, []>("op_7617_to_fp16"), val = tensor<fp16, []>(1.00135803e-05)];
            tensor<fp16, [1, 1, 1, 4]> var_7618_cast = add(x = x_var_151_cast, y = var_7617_to_fp16);
            tensor<fp16, []> var_7619_epsilon_0_to_fp16 = const()[name = tensor<string, []>("op_7619_epsilon_0_to_fp16"), val = tensor<fp16, []>(5.96046448e-08)];
            tensor<fp16, [1, 1, 1, 4]> var_7619_cast = rsqrt(epsilon = var_7619_epsilon_0_to_fp16, x = var_7618_cast);
            tensor<fp16, [1, 512, 1, 4]> var_7620_cast = mul(x = x_zero_mean_151_cast, y = var_7619_cast);
            tensor<fp16, [512]> x_699_mean_0_to_fp16 = const()[name = tensor<string, []>("x_699_mean_0_to_fp16"), val = tensor<fp16, [512]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(76707328)))];
            tensor<fp16, [512]> x_699_variance_0_to_fp16 = const()[name = tensor<string, []>("x_699_variance_0_to_fp16"), val = tensor<fp16, [512]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(76708416)))];
            tensor<fp16, [512]> x_699_gamma_0_to_fp16 = const()[name = tensor<string, []>("x_699_gamma_0_to_fp16"), val = tensor<fp16, [512]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(76709504)))];
            tensor<fp16, [512]> x_699_beta_0_to_fp16 = const()[name = tensor<string, []>("x_699_beta_0_to_fp16"), val = tensor<fp16, [512]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(76710592)))];
            tensor<fp16, []> x_699_epsilon_0_to_fp16 = const()[name = tensor<string, []>("x_699_epsilon_0_to_fp16"), val = tensor<fp16, []>(1.00135803e-05)];
            tensor<fp16, [1, 512, 1, 4]> x_699_cast = batch_norm(beta = x_699_beta_0_to_fp16, epsilon = x_699_epsilon_0_to_fp16, gamma = x_699_gamma_0_to_fp16, mean = x_699_mean_0_to_fp16, variance = x_699_variance_0_to_fp16, x = var_7620_cast);
            tensor<bool, []> x_701_interleave_0 = const()[name = tensor<string, []>("x_701_interleave_0"), val = tensor<bool, []>(false)];
            tensor<fp16, [1, 512, 1, 36]> x_701_cast = concat(axis = var_7351, interleave = x_701_interleave_0, values = (var_301_cast_10, x_699_cast));
            tensor<int32, [4]> x_703_begin_0 = const()[name = tensor<string, []>("x_703_begin_0"), val = tensor<int32, [4]>([0, 0, 0, 12])];
            tensor<int32, [4]> x_703_end_0 = const()[name = tensor<string, []>("x_703_end_0"), val = tensor<int32, [4]>([1, 512, 1, 36])];
            tensor<bool, [4]> x_703_end_mask_0 = const()[name = tensor<string, []>("x_703_end_mask_0"), val = tensor<bool, [4]>([true, true, true, true])];
            tensor<fp16, [1, 512, 1, 24]> x_703_cast = slice_by_index(begin = x_703_begin_0, end = x_703_end_0, end_mask = x_703_end_mask_0, x = x_701_cast);
            tensor<int32, [4]> x_705_begin_0 = const()[name = tensor<string, []>("x_705_begin_0"), val = tensor<int32, [4]>([0, 0, 0, 12])];
            tensor<int32, [4]> x_705_end_0 = const()[name = tensor<string, []>("x_705_end_0"), val = tensor<int32, [4]>([1, 512, 1, 24])];
            tensor<bool, [4]> x_705_end_mask_0 = const()[name = tensor<string, []>("x_705_end_mask_0"), val = tensor<bool, [4]>([true, true, true, true])];
            tensor<fp16, [1, 512, 1, 12]> x_705_cast = slice_by_index(begin = x_705_begin_0, end = x_705_end_0, end_mask = x_705_end_mask_0, x = x_703_cast);
            tensor<int32, [4]> x_707_begin_0 = const()[name = tensor<string, []>("x_707_begin_0"), val = tensor<int32, [4]>([0, 0, 0, 1])];
            tensor<int32, [4]> x_707_end_0 = const()[name = tensor<string, []>("x_707_end_0"), val = tensor<int32, [4]>([1, 512, 1, 12])];
            tensor<bool, [4]> x_707_end_mask_0 = const()[name = tensor<string, []>("x_707_end_mask_0"), val = tensor<bool, [4]>([true, true, true, true])];
            tensor<fp16, [1, 512, 1, 11]> x_707_cast = slice_by_index(begin = x_707_begin_0, end = x_707_end_0, end_mask = x_707_end_mask_0, x = x_705_cast);
            tensor<int32, [4]> var_7660_begin_0 = const()[name = tensor<string, []>("op_7660_begin_0"), val = tensor<int32, [4]>([0, 0, 0, -7])];
            tensor<int32, [4]> var_7660_end_0 = const()[name = tensor<string, []>("op_7660_end_0"), val = tensor<int32, [4]>([1, 512, 1, 11])];
            tensor<bool, [4]> var_7660_end_mask_0 = const()[name = tensor<string, []>("op_7660_end_mask_0"), val = tensor<bool, [4]>([true, true, true, true])];
            tensor<fp16, [1, 512, 1, 7]> var_7660_cast = slice_by_index(begin = var_7660_begin_0, end = var_7660_end_0, end_mask = var_7660_end_mask_0, x = x_707_cast);
            tensor<int32, [2]> var_7662 = const()[name = tensor<string, []>("op_7662"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_7664 = const()[name = tensor<string, []>("op_7664"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> x_709_pad_type_0 = const()[name = tensor<string, []>("x_709_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> x_709_pad_0 = const()[name = tensor<string, []>("x_709_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [1024, 512, 1, 1]> op_7661_to_fp16_affine_quantized = constexpr_affine_dequantize()[axis = tensor<int32, []>(0), name = tensor<string, []>("op_7661_to_fp16_affine_quantized"), quantized_data = tensor<int8, [1024, 512, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(76711680))), scale = tensor<fp16, [1024]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(77237120))), zero_point = tensor<int8, [1024]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(77236032)))];
            tensor<fp16, [1024]> primary_encoder_encoders_10_conv_module_pointwise_conv1_bias_to_fp16 = const()[name = tensor<string, []>("primary_encoder_encoders_10_conv_module_pointwise_conv1_bias_to_fp16"), val = tensor<fp16, [1024]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(77239232)))];
            tensor<fp16, [1, 1024, 1, 11]> x_709_cast = conv(bias = primary_encoder_encoders_10_conv_module_pointwise_conv1_bias_to_fp16, dilations = var_7664, groups = var_7354, pad = x_709_pad_0, pad_type = x_709_pad_type_0, strides = var_7662, weight = op_7661_to_fp16_affine_quantized, x = x_707_cast);
            tensor<int32, [4]> var_7673_begin_0 = const()[name = tensor<string, []>("op_7673_begin_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<int32, [4]> var_7673_end_0 = const()[name = tensor<string, []>("op_7673_end_0"), val = tensor<int32, [4]>([1, 512, 1, 11])];
            tensor<bool, [4]> var_7673_end_mask_0 = const()[name = tensor<string, []>("op_7673_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [1, 512, 1, 11]> var_7673_cast = slice_by_index(begin = var_7673_begin_0, end = var_7673_end_0, end_mask = var_7673_end_mask_0, x = x_709_cast);
            tensor<int32, [4]> var_7677_begin_0 = const()[name = tensor<string, []>("op_7677_begin_0"), val = tensor<int32, [4]>([0, 512, 0, 0])];
            tensor<int32, [4]> var_7677_end_0 = const()[name = tensor<string, []>("op_7677_end_0"), val = tensor<int32, [4]>([1, 1024, 1, 11])];
            tensor<bool, [4]> var_7677_end_mask_0 = const()[name = tensor<string, []>("op_7677_end_mask_0"), val = tensor<bool, [4]>([true, true, true, true])];
            tensor<fp16, [1, 512, 1, 11]> var_7677_cast = slice_by_index(begin = var_7677_begin_0, end = var_7677_end_0, end_mask = var_7677_end_mask_0, x = x_709_cast);
            tensor<fp16, [1, 512, 1, 11]> var_7680_cast = sigmoid(x = var_7677_cast);
            tensor<fp16, [1, 512, 1, 11]> x_711_cast = mul(x = var_7673_cast, y = var_7680_cast);
            tensor<int32, [2]> var_7683 = const()[name = tensor<string, []>("op_7683"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_7685 = const()[name = tensor<string, []>("op_7685"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> x_713_pad_type_0 = const()[name = tensor<string, []>("x_713_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> x_713_pad_0 = const()[name = tensor<string, []>("x_713_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [512, 1, 1, 8]> op_7682_to_fp16_affine_quantized = constexpr_affine_dequantize()[axis = tensor<int32, []>(0), name = tensor<string, []>("op_7682_to_fp16_affine_quantized"), quantized_data = tensor<int8, [512, 1, 1, 8]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(77241344))), scale = tensor<fp16, [512]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(77246080))), zero_point = tensor<int8, [512]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(77245504)))];
            tensor<fp16, [512]> primary_encoder_encoders_10_conv_module_depthwise_conv_bias_to_fp16 = const()[name = tensor<string, []>("primary_encoder_encoders_10_conv_module_depthwise_conv_bias_to_fp16"), val = tensor<fp16, [512]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(77247168)))];
            tensor<fp16, [1, 512, 1, 4]> x_713_cast = conv(bias = primary_encoder_encoders_10_conv_module_depthwise_conv_bias_to_fp16, dilations = var_7685, groups = var_7342, pad = x_713_pad_0, pad_type = x_713_pad_type_0, strides = var_7683, weight = op_7682_to_fp16_affine_quantized, x = x_711_cast);
            tensor<fp16, [1, 512, 1, 4]> var_7688_cast = abs(x = x_713_cast);
            tensor<fp16, []> var_7689_to_fp16 = const()[name = tensor<string, []>("op_7689_to_fp16"), val = tensor<fp16, []>(0.001953125)];
            tensor<fp16, [1, 512, 1, 4]> var_7690_cast = mul(x = var_7688_cast, y = var_7689_to_fp16);
            tensor<int32, [1]> var_7691 = const()[name = tensor<string, []>("op_7691"), val = tensor<int32, [1]>([1])];
            tensor<fp16, [1, 1, 1, 4]> scale_457_cast = reduce_sum(axes = var_7691, keep_dims = var_7353, x = var_7690_cast);
            tensor<fp16, []> scale_459_epsilon_0_to_fp16 = const()[name = tensor<string, []>("scale_459_epsilon_0_to_fp16"), val = tensor<fp16, []>(5.96046448e-08)];
            tensor<fp16, [1, 1, 1, 4]> scale_459_cast = rsqrt(epsilon = scale_459_epsilon_0_to_fp16, x = scale_457_cast);
            tensor<fp16, [1, 1, 1, 4]> scale_461_cast = mul(x = scale_459_cast, y = scale_459_cast);
            tensor<fp16, [1, 512, 1, 4]> x_715_cast = mul(x = x_713_cast, y = scale_461_cast);
            tensor<fp16, []> var_7696_to_fp16 = const()[name = tensor<string, []>("op_7696_to_fp16"), val = tensor<fp16, []>(-0.001953125)];
            tensor<fp16, [1, 512, 1, 4]> var_7697_cast = mul(x = x_715_cast, y = var_7696_to_fp16);
            tensor<int32, [1]> var_7698 = const()[name = tensor<string, []>("op_7698"), val = tensor<int32, [1]>([1])];
            tensor<fp16, [1, 1, 1, 4]> x_mean_153_cast = reduce_sum(axes = var_7698, keep_dims = var_7353, x = var_7697_cast);
            tensor<fp16, [1, 512, 1, 4]> x_zero_mean_153_cast = add(x = x_715_cast, y = x_mean_153_cast);
            tensor<fp16, []> var_7701_to_fp16 = const()[name = tensor<string, []>("op_7701_to_fp16"), val = tensor<fp16, []>(0.001953125)];
            tensor<fp16, [1, 512, 1, 4]> var_7702_cast = mul(x = x_zero_mean_153_cast, y = var_7701_to_fp16);
            tensor<fp16, [1, 512, 1, 4]> var_7703_cast = mul(x = var_7702_cast, y = x_zero_mean_153_cast);
            tensor<int32, [1]> var_7704 = const()[name = tensor<string, []>("op_7704"), val = tensor<int32, [1]>([1])];
            tensor<fp16, [1, 1, 1, 4]> x_var_153_cast = reduce_sum(axes = var_7704, keep_dims = var_7353, x = var_7703_cast);
            tensor<fp16, []> var_7706_to_fp16 = const()[name = tensor<string, []>("op_7706_to_fp16"), val = tensor<fp16, []>(1.00135803e-05)];
            tensor<fp16, [1, 1, 1, 4]> var_7707_cast = add(x = x_var_153_cast, y = var_7706_to_fp16);
            tensor<fp16, []> var_7708_epsilon_0_to_fp16 = const()[name = tensor<string, []>("op_7708_epsilon_0_to_fp16"), val = tensor<fp16, []>(5.96046448e-08)];
            tensor<fp16, [1, 1, 1, 4]> var_7708_cast = rsqrt(epsilon = var_7708_epsilon_0_to_fp16, x = var_7707_cast);
            tensor<fp16, [1, 512, 1, 4]> var_7709_cast = mul(x = x_zero_mean_153_cast, y = var_7708_cast);
            tensor<fp16, [512]> input_295_mean_0_to_fp16 = const()[name = tensor<string, []>("input_295_mean_0_to_fp16"), val = tensor<fp16, [512]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(77248256)))];
            tensor<fp16, [512]> input_295_variance_0_to_fp16 = const()[name = tensor<string, []>("input_295_variance_0_to_fp16"), val = tensor<fp16, [512]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(77249344)))];
            tensor<fp16, [512]> input_295_gamma_0_to_fp16 = const()[name = tensor<string, []>("input_295_gamma_0_to_fp16"), val = tensor<fp16, [512]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(77250432)))];
            tensor<fp16, [512]> input_295_beta_0_to_fp16 = const()[name = tensor<string, []>("input_295_beta_0_to_fp16"), val = tensor<fp16, [512]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(77251520)))];
            tensor<fp16, []> input_295_epsilon_0_to_fp16 = const()[name = tensor<string, []>("input_295_epsilon_0_to_fp16"), val = tensor<fp16, []>(1.00135803e-05)];
            tensor<fp16, [1, 512, 1, 4]> input_295_cast = batch_norm(beta = input_295_beta_0_to_fp16, epsilon = input_295_epsilon_0_to_fp16, gamma = input_295_gamma_0_to_fp16, mean = input_295_mean_0_to_fp16, variance = input_295_variance_0_to_fp16, x = var_7709_cast);
            tensor<fp16, [1, 512, 1, 4]> x_717_cast = silu(x = input_295_cast);
            tensor<int32, [2]> var_7718 = const()[name = tensor<string, []>("op_7718"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_7720 = const()[name = tensor<string, []>("op_7720"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> input_297_pad_type_0 = const()[name = tensor<string, []>("input_297_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> input_297_pad_0 = const()[name = tensor<string, []>("input_297_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [512, 512, 1, 1]> op_7717_to_fp16_affine_quantized = constexpr_affine_dequantize()[axis = tensor<int32, []>(0), name = tensor<string, []>("op_7717_to_fp16_affine_quantized"), quantized_data = tensor<int8, [512, 512, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(77252608))), scale = tensor<fp16, [512]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(77515392))), zero_point = tensor<int8, [512]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(77514816)))];
            tensor<fp16, [512]> primary_encoder_encoders_10_conv_module_pointwise_conv2_bias_to_fp16 = const()[name = tensor<string, []>("primary_encoder_encoders_10_conv_module_pointwise_conv2_bias_to_fp16"), val = tensor<fp16, [512]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(77516480)))];
            tensor<fp16, [1, 512, 1, 4]> input_297_cast = conv(bias = primary_encoder_encoders_10_conv_module_pointwise_conv2_bias_to_fp16, dilations = var_7720, groups = var_7354, pad = input_297_pad_0, pad_type = input_297_pad_type_0, strides = var_7718, weight = op_7717_to_fp16_affine_quantized, x = x_717_cast);
            tensor<fp16, [1, 512, 1, 4]> x_721_cast = add(x = x_695_cast, y = input_297_cast);
            tensor<fp16, [1, 512, 1, 4]> var_7728_cast = abs(x = x_721_cast);
            tensor<fp16, []> var_7729_to_fp16 = const()[name = tensor<string, []>("op_7729_to_fp16"), val = tensor<fp16, []>(0.001953125)];
            tensor<fp16, [1, 512, 1, 4]> var_7730_cast = mul(x = var_7728_cast, y = var_7729_to_fp16);
            tensor<int32, [1]> var_7731 = const()[name = tensor<string, []>("op_7731"), val = tensor<int32, [1]>([1])];
            tensor<fp16, [1, 1, 1, 4]> scale_463_cast = reduce_sum(axes = var_7731, keep_dims = var_7353, x = var_7730_cast);
            tensor<fp16, []> scale_465_epsilon_0_to_fp16 = const()[name = tensor<string, []>("scale_465_epsilon_0_to_fp16"), val = tensor<fp16, []>(5.96046448e-08)];
            tensor<fp16, [1, 1, 1, 4]> scale_465_cast = rsqrt(epsilon = scale_465_epsilon_0_to_fp16, x = scale_463_cast);
            tensor<fp16, [1, 1, 1, 4]> scale_467_cast = mul(x = scale_465_cast, y = scale_465_cast);
            tensor<fp16, [1, 512, 1, 4]> x_723_cast = mul(x = x_721_cast, y = scale_467_cast);
            tensor<fp16, []> var_7736_to_fp16 = const()[name = tensor<string, []>("op_7736_to_fp16"), val = tensor<fp16, []>(-0.001953125)];
            tensor<fp16, [1, 512, 1, 4]> var_7737_cast = mul(x = x_723_cast, y = var_7736_to_fp16);
            tensor<int32, [1]> var_7738 = const()[name = tensor<string, []>("op_7738"), val = tensor<int32, [1]>([1])];
            tensor<fp16, [1, 1, 1, 4]> x_mean_155_cast = reduce_sum(axes = var_7738, keep_dims = var_7353, x = var_7737_cast);
            tensor<fp16, [1, 512, 1, 4]> x_zero_mean_155_cast = add(x = x_723_cast, y = x_mean_155_cast);
            tensor<fp16, []> var_7741_to_fp16 = const()[name = tensor<string, []>("op_7741_to_fp16"), val = tensor<fp16, []>(0.001953125)];
            tensor<fp16, [1, 512, 1, 4]> var_7742_cast = mul(x = x_zero_mean_155_cast, y = var_7741_to_fp16);
            tensor<fp16, [1, 512, 1, 4]> var_7743_cast = mul(x = var_7742_cast, y = x_zero_mean_155_cast);
            tensor<int32, [1]> var_7744 = const()[name = tensor<string, []>("op_7744"), val = tensor<int32, [1]>([1])];
            tensor<fp16, [1, 1, 1, 4]> x_var_155_cast = reduce_sum(axes = var_7744, keep_dims = var_7353, x = var_7743_cast);
            tensor<fp16, []> var_7746_to_fp16 = const()[name = tensor<string, []>("op_7746_to_fp16"), val = tensor<fp16, []>(1.00135803e-05)];
            tensor<fp16, [1, 1, 1, 4]> var_7747_cast = add(x = x_var_155_cast, y = var_7746_to_fp16);
            tensor<fp16, []> var_7748_epsilon_0_to_fp16 = const()[name = tensor<string, []>("op_7748_epsilon_0_to_fp16"), val = tensor<fp16, []>(5.96046448e-08)];
            tensor<fp16, [1, 1, 1, 4]> var_7748_cast = rsqrt(epsilon = var_7748_epsilon_0_to_fp16, x = var_7747_cast);
            tensor<fp16, [1, 512, 1, 4]> var_7749_cast = mul(x = x_zero_mean_155_cast, y = var_7748_cast);
            tensor<fp16, [512]> x_725_mean_0_to_fp16 = const()[name = tensor<string, []>("x_725_mean_0_to_fp16"), val = tensor<fp16, [512]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(77517568)))];
            tensor<fp16, [512]> x_725_variance_0_to_fp16 = const()[name = tensor<string, []>("x_725_variance_0_to_fp16"), val = tensor<fp16, [512]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(77518656)))];
            tensor<fp16, [512]> x_725_gamma_0_to_fp16 = const()[name = tensor<string, []>("x_725_gamma_0_to_fp16"), val = tensor<fp16, [512]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(77519744)))];
            tensor<fp16, [512]> x_725_beta_0_to_fp16 = const()[name = tensor<string, []>("x_725_beta_0_to_fp16"), val = tensor<fp16, [512]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(77520832)))];
            tensor<fp16, []> x_725_epsilon_0_to_fp16 = const()[name = tensor<string, []>("x_725_epsilon_0_to_fp16"), val = tensor<fp16, []>(1.00135803e-05)];
            tensor<fp16, [1, 512, 1, 4]> x_725_cast = batch_norm(beta = x_725_beta_0_to_fp16, epsilon = x_725_epsilon_0_to_fp16, gamma = x_725_gamma_0_to_fp16, mean = x_725_mean_0_to_fp16, variance = x_725_variance_0_to_fp16, x = var_7749_cast);
            tensor<int32, [2]> var_7760 = const()[name = tensor<string, []>("op_7760"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_7762 = const()[name = tensor<string, []>("op_7762"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> input_299_pad_type_0 = const()[name = tensor<string, []>("input_299_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> input_299_pad_0 = const()[name = tensor<string, []>("input_299_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [2048, 512, 1, 1]> op_7759_to_fp16_affine_quantized = constexpr_affine_dequantize()[axis = tensor<int32, []>(0), name = tensor<string, []>("op_7759_to_fp16_affine_quantized"), quantized_data = tensor<int8, [2048, 512, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(77521920))), scale = tensor<fp16, [2048]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(78572672))), zero_point = tensor<int8, [2048]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(78570560)))];
            tensor<fp16, [2048]> primary_encoder_encoders_10_feed_forward_w_1_bias_to_fp16 = const()[name = tensor<string, []>("primary_encoder_encoders_10_feed_forward_w_1_bias_to_fp16"), val = tensor<fp16, [2048]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(78576832)))];
            tensor<fp16, [1, 2048, 1, 4]> input_299_cast = conv(bias = primary_encoder_encoders_10_feed_forward_w_1_bias_to_fp16, dilations = var_7762, groups = var_7354, pad = input_299_pad_0, pad_type = input_299_pad_type_0, strides = var_7760, weight = op_7759_to_fp16_affine_quantized, x = x_725_cast);
            tensor<fp16, [1, 2048, 1, 4]> input_301_cast = silu(x = input_299_cast);
            tensor<int32, [2]> var_7771 = const()[name = tensor<string, []>("op_7771"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_7773 = const()[name = tensor<string, []>("op_7773"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> input_303_pad_type_0 = const()[name = tensor<string, []>("input_303_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> input_303_pad_0 = const()[name = tensor<string, []>("input_303_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [512, 2048, 1, 1]> op_7778_weight_0_to_fp16_affine_quantized = constexpr_affine_dequantize()[axis = tensor<int32, []>(0), name = tensor<string, []>("op_7778_weight_0_to_fp16_affine_quantized"), quantized_data = tensor<int8, [512, 2048, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(78580992))), scale = tensor<fp16, [512]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(79630208))), zero_point = tensor<int8, [512]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(79629632)))];
            tensor<fp16, [512]> var_7778_bias_0_to_fp16 = const()[name = tensor<string, []>("op_7778_bias_0_to_fp16"), val = tensor<fp16, [512]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(79631296)))];
            tensor<fp16, [1, 512, 1, 4]> var_7778_cast = conv(bias = var_7778_bias_0_to_fp16, dilations = var_7773, groups = var_7354, pad = input_303_pad_0, pad_type = input_303_pad_type_0, strides = var_7771, weight = op_7778_weight_0_to_fp16_affine_quantized, x = input_301_cast);
            tensor<fp16, [1, 512, 1, 4]> x_731_cast = add(x = x_721_cast, y = var_7778_cast);
            tensor<fp16, [1, 512, 1, 4]> var_7780_cast = abs(x = x_731_cast);
            tensor<fp16, []> var_7781_to_fp16 = const()[name = tensor<string, []>("op_7781_to_fp16"), val = tensor<fp16, []>(0.001953125)];
            tensor<fp16, [1, 512, 1, 4]> var_7782_cast = mul(x = var_7780_cast, y = var_7781_to_fp16);
            tensor<int32, [1]> var_7783 = const()[name = tensor<string, []>("op_7783"), val = tensor<int32, [1]>([1])];
            tensor<fp16, [1, 1, 1, 4]> scale_469_cast = reduce_sum(axes = var_7783, keep_dims = var_7353, x = var_7782_cast);
            tensor<fp16, []> scale_471_epsilon_0_to_fp16 = const()[name = tensor<string, []>("scale_471_epsilon_0_to_fp16"), val = tensor<fp16, []>(5.96046448e-08)];
            tensor<fp16, [1, 1, 1, 4]> scale_471_cast = rsqrt(epsilon = scale_471_epsilon_0_to_fp16, x = scale_469_cast);
            tensor<fp16, [1, 1, 1, 4]> scale_473_cast = mul(x = scale_471_cast, y = scale_471_cast);
            tensor<fp16, [1, 512, 1, 4]> x_733_cast = mul(x = x_731_cast, y = scale_473_cast);
            tensor<fp16, []> var_7788_to_fp16 = const()[name = tensor<string, []>("op_7788_to_fp16"), val = tensor<fp16, []>(-0.001953125)];
            tensor<fp16, [1, 512, 1, 4]> var_7789_cast = mul(x = x_733_cast, y = var_7788_to_fp16);
            tensor<int32, [1]> var_7790 = const()[name = tensor<string, []>("op_7790"), val = tensor<int32, [1]>([1])];
            tensor<fp16, [1, 1, 1, 4]> x_mean_157_cast = reduce_sum(axes = var_7790, keep_dims = var_7353, x = var_7789_cast);
            tensor<fp16, [1, 512, 1, 4]> x_zero_mean_157_cast = add(x = x_733_cast, y = x_mean_157_cast);
            tensor<fp16, []> var_7793_to_fp16 = const()[name = tensor<string, []>("op_7793_to_fp16"), val = tensor<fp16, []>(0.001953125)];
            tensor<fp16, [1, 512, 1, 4]> var_7794_cast = mul(x = x_zero_mean_157_cast, y = var_7793_to_fp16);
            tensor<fp16, [1, 512, 1, 4]> var_7795_cast = mul(x = var_7794_cast, y = x_zero_mean_157_cast);
            tensor<int32, [1]> var_7796 = const()[name = tensor<string, []>("op_7796"), val = tensor<int32, [1]>([1])];
            tensor<fp16, [1, 1, 1, 4]> x_var_157_cast = reduce_sum(axes = var_7796, keep_dims = var_7353, x = var_7795_cast);
            tensor<fp16, []> var_7798_to_fp16 = const()[name = tensor<string, []>("op_7798_to_fp16"), val = tensor<fp16, []>(1.00135803e-05)];
            tensor<fp16, [1, 1, 1, 4]> var_7799_cast = add(x = x_var_157_cast, y = var_7798_to_fp16);
            tensor<fp16, []> var_7800_epsilon_0_to_fp16 = const()[name = tensor<string, []>("op_7800_epsilon_0_to_fp16"), val = tensor<fp16, []>(5.96046448e-08)];
            tensor<fp16, [1, 1, 1, 4]> var_7800_cast = rsqrt(epsilon = var_7800_epsilon_0_to_fp16, x = var_7799_cast);
            tensor<fp16, [1, 512, 1, 4]> var_7801_cast = mul(x = x_zero_mean_157_cast, y = var_7800_cast);
            tensor<fp16, [512]> x_735_mean_0_to_fp16 = const()[name = tensor<string, []>("x_735_mean_0_to_fp16"), val = tensor<fp16, [512]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(79632384)))];
            tensor<fp16, [512]> x_735_variance_0_to_fp16 = const()[name = tensor<string, []>("x_735_variance_0_to_fp16"), val = tensor<fp16, [512]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(79633472)))];
            tensor<fp16, [512]> x_735_gamma_0_to_fp16 = const()[name = tensor<string, []>("x_735_gamma_0_to_fp16"), val = tensor<fp16, [512]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(79634560)))];
            tensor<fp16, [512]> x_735_beta_0_to_fp16 = const()[name = tensor<string, []>("x_735_beta_0_to_fp16"), val = tensor<fp16, [512]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(79635648)))];
            tensor<fp16, []> x_735_epsilon_0_to_fp16 = const()[name = tensor<string, []>("x_735_epsilon_0_to_fp16"), val = tensor<fp16, []>(1.00135803e-05)];
            tensor<fp16, [1, 512, 1, 4]> x_735_cast = batch_norm(beta = x_735_beta_0_to_fp16, epsilon = x_735_epsilon_0_to_fp16, gamma = x_735_gamma_0_to_fp16, mean = x_735_mean_0_to_fp16, variance = x_735_variance_0_to_fp16, x = var_7801_cast);
            tensor<int32, []> var_7816 = const()[name = tensor<string, []>("op_7816"), val = tensor<int32, []>(512)];
            tensor<int32, []> var_7822 = const()[name = tensor<string, []>("op_7822"), val = tensor<int32, []>(2)];
            tensor<int32, []> var_7825 = const()[name = tensor<string, []>("op_7825"), val = tensor<int32, []>(-1)];
            tensor<bool, []> var_7827 = const()[name = tensor<string, []>("op_7827"), val = tensor<bool, []>(true)];
            tensor<int32, []> var_7828 = const()[name = tensor<string, []>("op_7828"), val = tensor<int32, []>(1)];
            tensor<fp16, [1, 512, 1, 4]> var_7875_cast = abs(x = x_735_cast);
            tensor<fp16, []> var_7876_to_fp16 = const()[name = tensor<string, []>("op_7876_to_fp16"), val = tensor<fp16, []>(0.001953125)];
            tensor<fp16, [1, 512, 1, 4]> var_7877_cast = mul(x = var_7875_cast, y = var_7876_to_fp16);
            tensor<int32, [1]> var_7878 = const()[name = tensor<string, []>("op_7878"), val = tensor<int32, [1]>([1])];
            tensor<fp16, [1, 1, 1, 4]> scale_475_cast = reduce_sum(axes = var_7878, keep_dims = var_7827, x = var_7877_cast);
            tensor<fp16, []> scale_477_epsilon_0_to_fp16 = const()[name = tensor<string, []>("scale_477_epsilon_0_to_fp16"), val = tensor<fp16, []>(5.96046448e-08)];
            tensor<fp16, [1, 1, 1, 4]> scale_477_cast = rsqrt(epsilon = scale_477_epsilon_0_to_fp16, x = scale_475_cast);
            tensor<fp16, [1, 1, 1, 4]> scale_479_cast = mul(x = scale_477_cast, y = scale_477_cast);
            tensor<fp16, [1, 512, 1, 4]> x_737_cast = mul(x = x_735_cast, y = scale_479_cast);
            tensor<fp16, []> var_7883_to_fp16 = const()[name = tensor<string, []>("op_7883_to_fp16"), val = tensor<fp16, []>(-0.001953125)];
            tensor<fp16, [1, 512, 1, 4]> var_7884_cast = mul(x = x_737_cast, y = var_7883_to_fp16);
            tensor<int32, [1]> var_7885 = const()[name = tensor<string, []>("op_7885"), val = tensor<int32, [1]>([1])];
            tensor<fp16, [1, 1, 1, 4]> x_mean_159_cast = reduce_sum(axes = var_7885, keep_dims = var_7827, x = var_7884_cast);
            tensor<fp16, [1, 512, 1, 4]> x_zero_mean_159_cast = add(x = x_737_cast, y = x_mean_159_cast);
            tensor<fp16, []> var_7888_to_fp16 = const()[name = tensor<string, []>("op_7888_to_fp16"), val = tensor<fp16, []>(0.001953125)];
            tensor<fp16, [1, 512, 1, 4]> var_7889_cast = mul(x = x_zero_mean_159_cast, y = var_7888_to_fp16);
            tensor<fp16, [1, 512, 1, 4]> var_7890_cast = mul(x = var_7889_cast, y = x_zero_mean_159_cast);
            tensor<int32, [1]> var_7891 = const()[name = tensor<string, []>("op_7891"), val = tensor<int32, [1]>([1])];
            tensor<fp16, [1, 1, 1, 4]> x_var_159_cast = reduce_sum(axes = var_7891, keep_dims = var_7827, x = var_7890_cast);
            tensor<fp16, []> var_7893_to_fp16 = const()[name = tensor<string, []>("op_7893_to_fp16"), val = tensor<fp16, []>(1.00135803e-05)];
            tensor<fp16, [1, 1, 1, 4]> var_7894_cast = add(x = x_var_159_cast, y = var_7893_to_fp16);
            tensor<fp16, []> var_7895_epsilon_0_to_fp16 = const()[name = tensor<string, []>("op_7895_epsilon_0_to_fp16"), val = tensor<fp16, []>(5.96046448e-08)];
            tensor<fp16, [1, 1, 1, 4]> var_7895_cast = rsqrt(epsilon = var_7895_epsilon_0_to_fp16, x = var_7894_cast);
            tensor<fp16, [1, 512, 1, 4]> var_7896_cast = mul(x = x_zero_mean_159_cast, y = var_7895_cast);
            tensor<fp16, [512]> x_739_mean_0_to_fp16 = const()[name = tensor<string, []>("x_739_mean_0_to_fp16"), val = tensor<fp16, [512]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(79636736)))];
            tensor<fp16, [512]> x_739_variance_0_to_fp16 = const()[name = tensor<string, []>("x_739_variance_0_to_fp16"), val = tensor<fp16, [512]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(79637824)))];
            tensor<fp16, [512]> x_739_gamma_0_to_fp16 = const()[name = tensor<string, []>("x_739_gamma_0_to_fp16"), val = tensor<fp16, [512]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(79638912)))];
            tensor<fp16, [512]> x_739_beta_0_to_fp16 = const()[name = tensor<string, []>("x_739_beta_0_to_fp16"), val = tensor<fp16, [512]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(79640000)))];
            tensor<fp16, []> x_739_epsilon_0_to_fp16 = const()[name = tensor<string, []>("x_739_epsilon_0_to_fp16"), val = tensor<fp16, []>(1.00135803e-05)];
            tensor<fp16, [1, 512, 1, 4]> x_739_cast = batch_norm(beta = x_739_beta_0_to_fp16, epsilon = x_739_epsilon_0_to_fp16, gamma = x_739_gamma_0_to_fp16, mean = x_739_mean_0_to_fp16, variance = x_739_variance_0_to_fp16, x = var_7896_cast);
            tensor<int32, [2]> var_7907 = const()[name = tensor<string, []>("op_7907"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_7909 = const()[name = tensor<string, []>("op_7909"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> input_305_pad_type_0 = const()[name = tensor<string, []>("input_305_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> input_305_pad_0 = const()[name = tensor<string, []>("input_305_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [2048, 512, 1, 1]> op_7906_to_fp16_affine_quantized = constexpr_affine_dequantize()[axis = tensor<int32, []>(0), name = tensor<string, []>("op_7906_to_fp16_affine_quantized"), quantized_data = tensor<int8, [2048, 512, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(79641088))), scale = tensor<fp16, [2048]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(80691840))), zero_point = tensor<int8, [2048]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(80689728)))];
            tensor<fp16, [2048]> primary_encoder_encoders_11_feed_forward_macaron_w_1_bias_to_fp16 = const()[name = tensor<string, []>("primary_encoder_encoders_11_feed_forward_macaron_w_1_bias_to_fp16"), val = tensor<fp16, [2048]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(80696000)))];
            tensor<fp16, [1, 2048, 1, 4]> input_305_cast = conv(bias = primary_encoder_encoders_11_feed_forward_macaron_w_1_bias_to_fp16, dilations = var_7909, groups = var_7828, pad = input_305_pad_0, pad_type = input_305_pad_type_0, strides = var_7907, weight = op_7906_to_fp16_affine_quantized, x = x_739_cast);
            tensor<fp16, [1, 2048, 1, 4]> input_307_cast = silu(x = input_305_cast);
            tensor<int32, [2]> var_7918 = const()[name = tensor<string, []>("op_7918"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_7920 = const()[name = tensor<string, []>("op_7920"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> input_309_pad_type_0 = const()[name = tensor<string, []>("input_309_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> input_309_pad_0 = const()[name = tensor<string, []>("input_309_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [512, 2048, 1, 1]> op_7925_weight_0_to_fp16_affine_quantized = constexpr_affine_dequantize()[axis = tensor<int32, []>(0), name = tensor<string, []>("op_7925_weight_0_to_fp16_affine_quantized"), quantized_data = tensor<int8, [512, 2048, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(80700160))), scale = tensor<fp16, [512]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(81749376))), zero_point = tensor<int8, [512]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(81748800)))];
            tensor<fp16, [512]> var_7925_bias_0_to_fp16 = const()[name = tensor<string, []>("op_7925_bias_0_to_fp16"), val = tensor<fp16, [512]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(81750464)))];
            tensor<fp16, [1, 512, 1, 4]> var_7925_cast = conv(bias = var_7925_bias_0_to_fp16, dilations = var_7920, groups = var_7828, pad = input_309_pad_0, pad_type = input_309_pad_type_0, strides = var_7918, weight = op_7925_weight_0_to_fp16_affine_quantized, x = input_307_cast);
            tensor<fp16, [1, 512, 1, 4]> x_745_cast = add(x = x_735_cast, y = var_7925_cast);
            tensor<fp16, [1, 512, 1, 4]> var_7927_cast = abs(x = x_745_cast);
            tensor<fp16, []> var_7928_to_fp16 = const()[name = tensor<string, []>("op_7928_to_fp16"), val = tensor<fp16, []>(0.001953125)];
            tensor<fp16, [1, 512, 1, 4]> var_7929_cast = mul(x = var_7927_cast, y = var_7928_to_fp16);
            tensor<int32, [1]> var_7930 = const()[name = tensor<string, []>("op_7930"), val = tensor<int32, [1]>([1])];
            tensor<fp16, [1, 1, 1, 4]> scale_481_cast = reduce_sum(axes = var_7930, keep_dims = var_7827, x = var_7929_cast);
            tensor<fp16, []> scale_483_epsilon_0_to_fp16 = const()[name = tensor<string, []>("scale_483_epsilon_0_to_fp16"), val = tensor<fp16, []>(5.96046448e-08)];
            tensor<fp16, [1, 1, 1, 4]> scale_483_cast = rsqrt(epsilon = scale_483_epsilon_0_to_fp16, x = scale_481_cast);
            tensor<fp16, [1, 1, 1, 4]> scale_485_cast = mul(x = scale_483_cast, y = scale_483_cast);
            tensor<fp16, [1, 512, 1, 4]> x_747_cast = mul(x = x_745_cast, y = scale_485_cast);
            tensor<fp16, []> var_7935_to_fp16 = const()[name = tensor<string, []>("op_7935_to_fp16"), val = tensor<fp16, []>(-0.001953125)];
            tensor<fp16, [1, 512, 1, 4]> var_7936_cast = mul(x = x_747_cast, y = var_7935_to_fp16);
            tensor<int32, [1]> var_7937 = const()[name = tensor<string, []>("op_7937"), val = tensor<int32, [1]>([1])];
            tensor<fp16, [1, 1, 1, 4]> x_mean_161_cast = reduce_sum(axes = var_7937, keep_dims = var_7827, x = var_7936_cast);
            tensor<fp16, [1, 512, 1, 4]> x_zero_mean_161_cast = add(x = x_747_cast, y = x_mean_161_cast);
            tensor<fp16, []> var_7940_to_fp16 = const()[name = tensor<string, []>("op_7940_to_fp16"), val = tensor<fp16, []>(0.001953125)];
            tensor<fp16, [1, 512, 1, 4]> var_7941_cast = mul(x = x_zero_mean_161_cast, y = var_7940_to_fp16);
            tensor<fp16, [1, 512, 1, 4]> var_7942_cast = mul(x = var_7941_cast, y = x_zero_mean_161_cast);
            tensor<int32, [1]> var_7943 = const()[name = tensor<string, []>("op_7943"), val = tensor<int32, [1]>([1])];
            tensor<fp16, [1, 1, 1, 4]> x_var_161_cast = reduce_sum(axes = var_7943, keep_dims = var_7827, x = var_7942_cast);
            tensor<fp16, []> var_7945_to_fp16 = const()[name = tensor<string, []>("op_7945_to_fp16"), val = tensor<fp16, []>(1.00135803e-05)];
            tensor<fp16, [1, 1, 1, 4]> var_7946_cast = add(x = x_var_161_cast, y = var_7945_to_fp16);
            tensor<fp16, []> var_7947_epsilon_0_to_fp16 = const()[name = tensor<string, []>("op_7947_epsilon_0_to_fp16"), val = tensor<fp16, []>(5.96046448e-08)];
            tensor<fp16, [1, 1, 1, 4]> var_7947_cast = rsqrt(epsilon = var_7947_epsilon_0_to_fp16, x = var_7946_cast);
            tensor<fp16, [1, 512, 1, 4]> var_7948_cast = mul(x = x_zero_mean_161_cast, y = var_7947_cast);
            tensor<fp16, [512]> query_mean_0_to_fp16 = const()[name = tensor<string, []>("query_mean_0_to_fp16"), val = tensor<fp16, [512]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(81751552)))];
            tensor<fp16, [512]> query_variance_0_to_fp16 = const()[name = tensor<string, []>("query_variance_0_to_fp16"), val = tensor<fp16, [512]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(81752640)))];
            tensor<fp16, [512]> query_gamma_0_to_fp16 = const()[name = tensor<string, []>("query_gamma_0_to_fp16"), val = tensor<fp16, [512]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(81753728)))];
            tensor<fp16, [512]> query_beta_0_to_fp16 = const()[name = tensor<string, []>("query_beta_0_to_fp16"), val = tensor<fp16, [512]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(81754816)))];
            tensor<fp16, []> query_epsilon_0_to_fp16 = const()[name = tensor<string, []>("query_epsilon_0_to_fp16"), val = tensor<fp16, []>(1.00135803e-05)];
            tensor<fp16, [1, 512, 1, 4]> query_cast = batch_norm(beta = query_beta_0_to_fp16, epsilon = query_epsilon_0_to_fp16, gamma = query_gamma_0_to_fp16, mean = query_mean_0_to_fp16, variance = query_variance_0_to_fp16, x = var_7948_cast);
            tensor<int32, [2]> var_7968 = const()[name = tensor<string, []>("op_7968"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_7970 = const()[name = tensor<string, []>("op_7970"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> var_7972_pad_type_0 = const()[name = tensor<string, []>("op_7972_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> var_7972_pad_0 = const()[name = tensor<string, []>("op_7972_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [512, 512, 1, 1]> op_7967_to_fp16_affine_quantized = constexpr_affine_dequantize()[axis = tensor<int32, []>(0), name = tensor<string, []>("op_7967_to_fp16_affine_quantized"), quantized_data = tensor<int8, [512, 512, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(81755904))), scale = tensor<fp16, [512]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(82018688))), zero_point = tensor<int8, [512]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(82018112)))];
            tensor<fp16, [512]> primary_encoder_encoders_11_self_attn_linear_v_bias_to_fp16 = const()[name = tensor<string, []>("primary_encoder_encoders_11_self_attn_linear_v_bias_to_fp16"), val = tensor<fp16, [512]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(82019776)))];
            tensor<fp16, [1, 512, 1, 4]> var_7972_cast = conv(bias = primary_encoder_encoders_11_self_attn_linear_v_bias_to_fp16, dilations = var_7970, groups = var_7828, pad = var_7972_pad_0, pad_type = var_7972_pad_type_0, strides = var_7968, weight = op_7967_to_fp16_affine_quantized, x = query_cast);
            tensor<int32, [8]> tile_50 = const()[name = tensor<string, []>("tile_50"), val = tensor<int32, [8]>([64, 64, 64, 64, 64, 64, 64, 64])];
            tensor<int32, []> var_7973_axis_0 = const()[name = tensor<string, []>("op_7973_axis_0"), val = tensor<int32, []>(1)];
            tensor<fp16, [1, 64, 1, 4]> var_7973_cast_0, tensor<fp16, [1, 64, 1, 4]> var_7973_cast_1, tensor<fp16, [1, 64, 1, 4]> var_7973_cast_2, tensor<fp16, [1, 64, 1, 4]> var_7973_cast_3, tensor<fp16, [1, 64, 1, 4]> var_7973_cast_4, tensor<fp16, [1, 64, 1, 4]> var_7973_cast_5, tensor<fp16, [1, 64, 1, 4]> var_7973_cast_6, tensor<fp16, [1, 64, 1, 4]> var_7973_cast_7 = split(axis = var_7973_axis_0, split_sizes = tile_50, x = var_7972_cast);
            tensor<int32, [8]> tile_51 = const()[name = tensor<string, []>("tile_51"), val = tensor<int32, [8]>([1, 1, 1, 1, 1, 1, 1, 1])];
            tensor<int32, []> var_7982_axis_0 = const()[name = tensor<string, []>("op_7982_axis_0"), val = tensor<int32, []>(2)];
            tensor<fp16, [1, 64, 1, 128]> var_7982_cast_0, tensor<fp16, [1, 64, 1, 128]> var_7982_cast_1, tensor<fp16, [1, 64, 1, 128]> var_7982_cast_2, tensor<fp16, [1, 64, 1, 128]> var_7982_cast_3, tensor<fp16, [1, 64, 1, 128]> var_7982_cast_4, tensor<fp16, [1, 64, 1, 128]> var_7982_cast_5, tensor<fp16, [1, 64, 1, 128]> var_7982_cast_6, tensor<fp16, [1, 64, 1, 128]> var_7982_cast_7 = split(axis = var_7982_axis_0, split_sizes = tile_51, x = var_321_cast_11);
            tensor<bool, []> var_7992_interleave_0 = const()[name = tensor<string, []>("op_7992_interleave_0"), val = tensor<bool, []>(false)];
            tensor<fp16, [1, 64, 1, 132]> var_7992_cast = concat(axis = var_7825, interleave = var_7992_interleave_0, values = (var_7982_cast_0, var_7973_cast_0));
            tensor<int32, [4]> var_7996_begin_0 = const()[name = tensor<string, []>("op_7996_begin_0"), val = tensor<int32, [4]>([0, 0, 0, 4])];
            tensor<int32, [4]> var_7996_end_0 = const()[name = tensor<string, []>("op_7996_end_0"), val = tensor<int32, [4]>([1, 64, 1, 132])];
            tensor<bool, [4]> var_7996_end_mask_0 = const()[name = tensor<string, []>("op_7996_end_mask_0"), val = tensor<bool, [4]>([true, true, true, true])];
            tensor<fp16, [1, 64, 1, 128]> var_7996_cast = slice_by_index(begin = var_7996_begin_0, end = var_7996_end_0, end_mask = var_7996_end_mask_0, x = var_7992_cast);
            tensor<bool, []> var_7998_interleave_0 = const()[name = tensor<string, []>("op_7998_interleave_0"), val = tensor<bool, []>(false)];
            tensor<fp16, [1, 64, 1, 132]> var_7998_cast = concat(axis = var_7825, interleave = var_7998_interleave_0, values = (var_7982_cast_1, var_7973_cast_1));
            tensor<int32, [4]> var_8002_begin_0 = const()[name = tensor<string, []>("op_8002_begin_0"), val = tensor<int32, [4]>([0, 0, 0, 4])];
            tensor<int32, [4]> var_8002_end_0 = const()[name = tensor<string, []>("op_8002_end_0"), val = tensor<int32, [4]>([1, 64, 1, 132])];
            tensor<bool, [4]> var_8002_end_mask_0 = const()[name = tensor<string, []>("op_8002_end_mask_0"), val = tensor<bool, [4]>([true, true, true, true])];
            tensor<fp16, [1, 64, 1, 128]> var_8002_cast = slice_by_index(begin = var_8002_begin_0, end = var_8002_end_0, end_mask = var_8002_end_mask_0, x = var_7998_cast);
            tensor<bool, []> var_8004_interleave_0 = const()[name = tensor<string, []>("op_8004_interleave_0"), val = tensor<bool, []>(false)];
            tensor<fp16, [1, 64, 1, 132]> var_8004_cast = concat(axis = var_7825, interleave = var_8004_interleave_0, values = (var_7982_cast_2, var_7973_cast_2));
            tensor<int32, [4]> var_8008_begin_0 = const()[name = tensor<string, []>("op_8008_begin_0"), val = tensor<int32, [4]>([0, 0, 0, 4])];
            tensor<int32, [4]> var_8008_end_0 = const()[name = tensor<string, []>("op_8008_end_0"), val = tensor<int32, [4]>([1, 64, 1, 132])];
            tensor<bool, [4]> var_8008_end_mask_0 = const()[name = tensor<string, []>("op_8008_end_mask_0"), val = tensor<bool, [4]>([true, true, true, true])];
            tensor<fp16, [1, 64, 1, 128]> var_8008_cast = slice_by_index(begin = var_8008_begin_0, end = var_8008_end_0, end_mask = var_8008_end_mask_0, x = var_8004_cast);
            tensor<bool, []> var_8010_interleave_0 = const()[name = tensor<string, []>("op_8010_interleave_0"), val = tensor<bool, []>(false)];
            tensor<fp16, [1, 64, 1, 132]> var_8010_cast = concat(axis = var_7825, interleave = var_8010_interleave_0, values = (var_7982_cast_3, var_7973_cast_3));
            tensor<int32, [4]> var_8014_begin_0 = const()[name = tensor<string, []>("op_8014_begin_0"), val = tensor<int32, [4]>([0, 0, 0, 4])];
            tensor<int32, [4]> var_8014_end_0 = const()[name = tensor<string, []>("op_8014_end_0"), val = tensor<int32, [4]>([1, 64, 1, 132])];
            tensor<bool, [4]> var_8014_end_mask_0 = const()[name = tensor<string, []>("op_8014_end_mask_0"), val = tensor<bool, [4]>([true, true, true, true])];
            tensor<fp16, [1, 64, 1, 128]> var_8014_cast = slice_by_index(begin = var_8014_begin_0, end = var_8014_end_0, end_mask = var_8014_end_mask_0, x = var_8010_cast);
            tensor<bool, []> var_8016_interleave_0 = const()[name = tensor<string, []>("op_8016_interleave_0"), val = tensor<bool, []>(false)];
            tensor<fp16, [1, 64, 1, 132]> var_8016_cast = concat(axis = var_7825, interleave = var_8016_interleave_0, values = (var_7982_cast_4, var_7973_cast_4));
            tensor<int32, [4]> var_8020_begin_0 = const()[name = tensor<string, []>("op_8020_begin_0"), val = tensor<int32, [4]>([0, 0, 0, 4])];
            tensor<int32, [4]> var_8020_end_0 = const()[name = tensor<string, []>("op_8020_end_0"), val = tensor<int32, [4]>([1, 64, 1, 132])];
            tensor<bool, [4]> var_8020_end_mask_0 = const()[name = tensor<string, []>("op_8020_end_mask_0"), val = tensor<bool, [4]>([true, true, true, true])];
            tensor<fp16, [1, 64, 1, 128]> var_8020_cast = slice_by_index(begin = var_8020_begin_0, end = var_8020_end_0, end_mask = var_8020_end_mask_0, x = var_8016_cast);
            tensor<bool, []> var_8022_interleave_0 = const()[name = tensor<string, []>("op_8022_interleave_0"), val = tensor<bool, []>(false)];
            tensor<fp16, [1, 64, 1, 132]> var_8022_cast = concat(axis = var_7825, interleave = var_8022_interleave_0, values = (var_7982_cast_5, var_7973_cast_5));
            tensor<int32, [4]> var_8026_begin_0 = const()[name = tensor<string, []>("op_8026_begin_0"), val = tensor<int32, [4]>([0, 0, 0, 4])];
            tensor<int32, [4]> var_8026_end_0 = const()[name = tensor<string, []>("op_8026_end_0"), val = tensor<int32, [4]>([1, 64, 1, 132])];
            tensor<bool, [4]> var_8026_end_mask_0 = const()[name = tensor<string, []>("op_8026_end_mask_0"), val = tensor<bool, [4]>([true, true, true, true])];
            tensor<fp16, [1, 64, 1, 128]> var_8026_cast = slice_by_index(begin = var_8026_begin_0, end = var_8026_end_0, end_mask = var_8026_end_mask_0, x = var_8022_cast);
            tensor<bool, []> var_8028_interleave_0 = const()[name = tensor<string, []>("op_8028_interleave_0"), val = tensor<bool, []>(false)];
            tensor<fp16, [1, 64, 1, 132]> var_8028_cast = concat(axis = var_7825, interleave = var_8028_interleave_0, values = (var_7982_cast_6, var_7973_cast_6));
            tensor<int32, [4]> var_8032_begin_0 = const()[name = tensor<string, []>("op_8032_begin_0"), val = tensor<int32, [4]>([0, 0, 0, 4])];
            tensor<int32, [4]> var_8032_end_0 = const()[name = tensor<string, []>("op_8032_end_0"), val = tensor<int32, [4]>([1, 64, 1, 132])];
            tensor<bool, [4]> var_8032_end_mask_0 = const()[name = tensor<string, []>("op_8032_end_mask_0"), val = tensor<bool, [4]>([true, true, true, true])];
            tensor<fp16, [1, 64, 1, 128]> var_8032_cast = slice_by_index(begin = var_8032_begin_0, end = var_8032_end_0, end_mask = var_8032_end_mask_0, x = var_8028_cast);
            tensor<bool, []> var_8034_interleave_0 = const()[name = tensor<string, []>("op_8034_interleave_0"), val = tensor<bool, []>(false)];
            tensor<fp16, [1, 64, 1, 132]> var_8034_cast = concat(axis = var_7825, interleave = var_8034_interleave_0, values = (var_7982_cast_7, var_7973_cast_7));
            tensor<int32, [4]> var_8038_begin_0 = const()[name = tensor<string, []>("op_8038_begin_0"), val = tensor<int32, [4]>([0, 0, 0, 4])];
            tensor<int32, [4]> var_8038_end_0 = const()[name = tensor<string, []>("op_8038_end_0"), val = tensor<int32, [4]>([1, 64, 1, 132])];
            tensor<bool, [4]> var_8038_end_mask_0 = const()[name = tensor<string, []>("op_8038_end_mask_0"), val = tensor<bool, [4]>([true, true, true, true])];
            tensor<fp16, [1, 64, 1, 128]> var_8038_cast = slice_by_index(begin = var_8038_begin_0, end = var_8038_end_0, end_mask = var_8038_end_mask_0, x = var_8034_cast);
            tensor<bool, []> var_8040_interleave_0 = const()[name = tensor<string, []>("op_8040_interleave_0"), val = tensor<bool, []>(false)];
            tensor<fp16, [1, 64, 8, 128]> var_8040_cast = concat(axis = var_7822, interleave = var_8040_interleave_0, values = (var_7996_cast, var_8002_cast, var_8008_cast, var_8014_cast, var_8020_cast, var_8026_cast, var_8032_cast, var_8038_cast));
            tensor<string, []> var_8042_equation_0 = const()[name = tensor<string, []>("op_8042_equation_0"), val = tensor<string, []>("bnhd,bdhm->bnhm")];
            tensor<fp16, [1, 64, 1, 4]> var_8042_cast = einsum(equation = var_8042_equation_0, values = (var_7996_cast, input_205_cast));
            tensor<string, []> var_8044_equation_0 = const()[name = tensor<string, []>("op_8044_equation_0"), val = tensor<string, []>("bnhd,bdhm->bnhm")];
            tensor<fp16, [1, 64, 1, 4]> var_8044_cast = einsum(equation = var_8044_equation_0, values = (var_8002_cast, input_207_cast));
            tensor<string, []> var_8046_equation_0 = const()[name = tensor<string, []>("op_8046_equation_0"), val = tensor<string, []>("bnhd,bdhm->bnhm")];
            tensor<fp16, [1, 64, 1, 4]> var_8046_cast = einsum(equation = var_8046_equation_0, values = (var_8008_cast, input_209_cast));
            tensor<string, []> var_8048_equation_0 = const()[name = tensor<string, []>("op_8048_equation_0"), val = tensor<string, []>("bnhd,bdhm->bnhm")];
            tensor<fp16, [1, 64, 1, 4]> var_8048_cast = einsum(equation = var_8048_equation_0, values = (var_8014_cast, input_211_cast));
            tensor<string, []> var_8050_equation_0 = const()[name = tensor<string, []>("op_8050_equation_0"), val = tensor<string, []>("bnhd,bdhm->bnhm")];
            tensor<fp16, [1, 64, 1, 4]> var_8050_cast = einsum(equation = var_8050_equation_0, values = (var_8020_cast, input_213_cast));
            tensor<string, []> var_8052_equation_0 = const()[name = tensor<string, []>("op_8052_equation_0"), val = tensor<string, []>("bnhd,bdhm->bnhm")];
            tensor<fp16, [1, 64, 1, 4]> var_8052_cast = einsum(equation = var_8052_equation_0, values = (var_8026_cast, input_215_cast));
            tensor<string, []> var_8054_equation_0 = const()[name = tensor<string, []>("op_8054_equation_0"), val = tensor<string, []>("bnhd,bdhm->bnhm")];
            tensor<fp16, [1, 64, 1, 4]> var_8054_cast = einsum(equation = var_8054_equation_0, values = (var_8032_cast, input_217_cast));
            tensor<string, []> var_8056_equation_0 = const()[name = tensor<string, []>("op_8056_equation_0"), val = tensor<string, []>("bnhd,bdhm->bnhm")];
            tensor<fp16, [1, 64, 1, 4]> var_8056_cast = einsum(equation = var_8056_equation_0, values = (var_8038_cast, input_219_cast));
            tensor<bool, []> y_35_interleave_0 = const()[name = tensor<string, []>("y_35_interleave_0"), val = tensor<bool, []>(false)];
            tensor<fp16, [1, 512, 1, 4]> y_35_cast = concat(axis = var_7828, interleave = y_35_interleave_0, values = (var_8042_cast, var_8044_cast, var_8046_cast, var_8048_cast, var_8050_cast, var_8052_cast, var_8054_cast, var_8056_cast));
            tensor<int32, [2]> var_8063 = const()[name = tensor<string, []>("op_8063"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_8065 = const()[name = tensor<string, []>("op_8065"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> input_311_pad_type_0 = const()[name = tensor<string, []>("input_311_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> input_311_pad_0 = const()[name = tensor<string, []>("input_311_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [512, 512, 1, 1]> op_8062_to_fp16_affine_quantized = constexpr_affine_dequantize()[axis = tensor<int32, []>(0), name = tensor<string, []>("op_8062_to_fp16_affine_quantized"), quantized_data = tensor<int8, [512, 512, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(82020864))), scale = tensor<fp16, [512]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(82283648))), zero_point = tensor<int8, [512]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(82283072)))];
            tensor<fp16, [512]> primary_encoder_encoders_11_self_attn_linear_out_bias_to_fp16 = const()[name = tensor<string, []>("primary_encoder_encoders_11_self_attn_linear_out_bias_to_fp16"), val = tensor<fp16, [512]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(82284736)))];
            tensor<fp16, [1, 512, 1, 4]> input_311_cast = conv(bias = primary_encoder_encoders_11_self_attn_linear_out_bias_to_fp16, dilations = var_8065, groups = var_7828, pad = input_311_pad_0, pad_type = input_311_pad_type_0, strides = var_8063, weight = op_8062_to_fp16_affine_quantized, x = y_35_cast);
            tensor<fp16, [1, 512, 1, 4]> x_749_cast = add(x = x_745_cast, y = input_311_cast);
            tensor<fp16, [1, 512, 1, 4]> var_8073_cast = abs(x = x_749_cast);
            tensor<fp16, []> var_8074_to_fp16 = const()[name = tensor<string, []>("op_8074_to_fp16"), val = tensor<fp16, []>(0.001953125)];
            tensor<fp16, [1, 512, 1, 4]> var_8075_cast = mul(x = var_8073_cast, y = var_8074_to_fp16);
            tensor<int32, [1]> var_8076 = const()[name = tensor<string, []>("op_8076"), val = tensor<int32, [1]>([1])];
            tensor<fp16, [1, 1, 1, 4]> scale_487_cast = reduce_sum(axes = var_8076, keep_dims = var_7827, x = var_8075_cast);
            tensor<fp16, []> scale_489_epsilon_0_to_fp16 = const()[name = tensor<string, []>("scale_489_epsilon_0_to_fp16"), val = tensor<fp16, []>(5.96046448e-08)];
            tensor<fp16, [1, 1, 1, 4]> scale_489_cast = rsqrt(epsilon = scale_489_epsilon_0_to_fp16, x = scale_487_cast);
            tensor<fp16, [1, 1, 1, 4]> scale_491_cast = mul(x = scale_489_cast, y = scale_489_cast);
            tensor<fp16, [1, 512, 1, 4]> x_751_cast = mul(x = x_749_cast, y = scale_491_cast);
            tensor<fp16, []> var_8081_to_fp16 = const()[name = tensor<string, []>("op_8081_to_fp16"), val = tensor<fp16, []>(-0.001953125)];
            tensor<fp16, [1, 512, 1, 4]> var_8082_cast = mul(x = x_751_cast, y = var_8081_to_fp16);
            tensor<int32, [1]> var_8083 = const()[name = tensor<string, []>("op_8083"), val = tensor<int32, [1]>([1])];
            tensor<fp16, [1, 1, 1, 4]> x_mean_163_cast = reduce_sum(axes = var_8083, keep_dims = var_7827, x = var_8082_cast);
            tensor<fp16, [1, 512, 1, 4]> x_zero_mean_163_cast = add(x = x_751_cast, y = x_mean_163_cast);
            tensor<fp16, []> var_8086_to_fp16 = const()[name = tensor<string, []>("op_8086_to_fp16"), val = tensor<fp16, []>(0.001953125)];
            tensor<fp16, [1, 512, 1, 4]> var_8087_cast = mul(x = x_zero_mean_163_cast, y = var_8086_to_fp16);
            tensor<fp16, [1, 512, 1, 4]> var_8088_cast = mul(x = var_8087_cast, y = x_zero_mean_163_cast);
            tensor<int32, [1]> var_8089 = const()[name = tensor<string, []>("op_8089"), val = tensor<int32, [1]>([1])];
            tensor<fp16, [1, 1, 1, 4]> x_var_163_cast = reduce_sum(axes = var_8089, keep_dims = var_7827, x = var_8088_cast);
            tensor<fp16, []> var_8091_to_fp16 = const()[name = tensor<string, []>("op_8091_to_fp16"), val = tensor<fp16, []>(1.00135803e-05)];
            tensor<fp16, [1, 1, 1, 4]> var_8092_cast = add(x = x_var_163_cast, y = var_8091_to_fp16);
            tensor<fp16, []> var_8093_epsilon_0_to_fp16 = const()[name = tensor<string, []>("op_8093_epsilon_0_to_fp16"), val = tensor<fp16, []>(5.96046448e-08)];
            tensor<fp16, [1, 1, 1, 4]> var_8093_cast = rsqrt(epsilon = var_8093_epsilon_0_to_fp16, x = var_8092_cast);
            tensor<fp16, [1, 512, 1, 4]> var_8094_cast = mul(x = x_zero_mean_163_cast, y = var_8093_cast);
            tensor<fp16, [512]> x_753_mean_0_to_fp16 = const()[name = tensor<string, []>("x_753_mean_0_to_fp16"), val = tensor<fp16, [512]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(82285824)))];
            tensor<fp16, [512]> x_753_variance_0_to_fp16 = const()[name = tensor<string, []>("x_753_variance_0_to_fp16"), val = tensor<fp16, [512]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(82286912)))];
            tensor<fp16, [512]> x_753_gamma_0_to_fp16 = const()[name = tensor<string, []>("x_753_gamma_0_to_fp16"), val = tensor<fp16, [512]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(82288000)))];
            tensor<fp16, [512]> x_753_beta_0_to_fp16 = const()[name = tensor<string, []>("x_753_beta_0_to_fp16"), val = tensor<fp16, [512]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(82289088)))];
            tensor<fp16, []> x_753_epsilon_0_to_fp16 = const()[name = tensor<string, []>("x_753_epsilon_0_to_fp16"), val = tensor<fp16, []>(1.00135803e-05)];
            tensor<fp16, [1, 512, 1, 4]> x_753_cast = batch_norm(beta = x_753_beta_0_to_fp16, epsilon = x_753_epsilon_0_to_fp16, gamma = x_753_gamma_0_to_fp16, mean = x_753_mean_0_to_fp16, variance = x_753_variance_0_to_fp16, x = var_8094_cast);
            tensor<bool, []> x_755_interleave_0 = const()[name = tensor<string, []>("x_755_interleave_0"), val = tensor<bool, []>(false)];
            tensor<fp16, [1, 512, 1, 36]> x_755_cast = concat(axis = var_7825, interleave = x_755_interleave_0, values = (var_301_cast_11, x_753_cast));
            tensor<int32, [4]> x_757_begin_0 = const()[name = tensor<string, []>("x_757_begin_0"), val = tensor<int32, [4]>([0, 0, 0, 12])];
            tensor<int32, [4]> x_757_end_0 = const()[name = tensor<string, []>("x_757_end_0"), val = tensor<int32, [4]>([1, 512, 1, 36])];
            tensor<bool, [4]> x_757_end_mask_0 = const()[name = tensor<string, []>("x_757_end_mask_0"), val = tensor<bool, [4]>([true, true, true, true])];
            tensor<fp16, [1, 512, 1, 24]> x_757_cast = slice_by_index(begin = x_757_begin_0, end = x_757_end_0, end_mask = x_757_end_mask_0, x = x_755_cast);
            tensor<int32, [4]> x_759_begin_0 = const()[name = tensor<string, []>("x_759_begin_0"), val = tensor<int32, [4]>([0, 0, 0, 12])];
            tensor<int32, [4]> x_759_end_0 = const()[name = tensor<string, []>("x_759_end_0"), val = tensor<int32, [4]>([1, 512, 1, 24])];
            tensor<bool, [4]> x_759_end_mask_0 = const()[name = tensor<string, []>("x_759_end_mask_0"), val = tensor<bool, [4]>([true, true, true, true])];
            tensor<fp16, [1, 512, 1, 12]> x_759_cast = slice_by_index(begin = x_759_begin_0, end = x_759_end_0, end_mask = x_759_end_mask_0, x = x_757_cast);
            tensor<int32, [4]> x_761_begin_0 = const()[name = tensor<string, []>("x_761_begin_0"), val = tensor<int32, [4]>([0, 0, 0, 1])];
            tensor<int32, [4]> x_761_end_0 = const()[name = tensor<string, []>("x_761_end_0"), val = tensor<int32, [4]>([1, 512, 1, 12])];
            tensor<bool, [4]> x_761_end_mask_0 = const()[name = tensor<string, []>("x_761_end_mask_0"), val = tensor<bool, [4]>([true, true, true, true])];
            tensor<fp16, [1, 512, 1, 11]> x_761_cast = slice_by_index(begin = x_761_begin_0, end = x_761_end_0, end_mask = x_761_end_mask_0, x = x_759_cast);
            tensor<int32, [4]> var_8134_begin_0 = const()[name = tensor<string, []>("op_8134_begin_0"), val = tensor<int32, [4]>([0, 0, 0, -7])];
            tensor<int32, [4]> var_8134_end_0 = const()[name = tensor<string, []>("op_8134_end_0"), val = tensor<int32, [4]>([1, 512, 1, 11])];
            tensor<bool, [4]> var_8134_end_mask_0 = const()[name = tensor<string, []>("op_8134_end_mask_0"), val = tensor<bool, [4]>([true, true, true, true])];
            tensor<fp16, [1, 512, 1, 7]> var_8134_cast = slice_by_index(begin = var_8134_begin_0, end = var_8134_end_0, end_mask = var_8134_end_mask_0, x = x_761_cast);
            tensor<int32, [2]> var_8136 = const()[name = tensor<string, []>("op_8136"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_8138 = const()[name = tensor<string, []>("op_8138"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> x_763_pad_type_0 = const()[name = tensor<string, []>("x_763_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> x_763_pad_0 = const()[name = tensor<string, []>("x_763_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [1024, 512, 1, 1]> op_8135_to_fp16_affine_quantized = constexpr_affine_dequantize()[axis = tensor<int32, []>(0), name = tensor<string, []>("op_8135_to_fp16_affine_quantized"), quantized_data = tensor<int8, [1024, 512, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(82290176))), scale = tensor<fp16, [1024]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(82815616))), zero_point = tensor<int8, [1024]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(82814528)))];
            tensor<fp16, [1024]> primary_encoder_encoders_11_conv_module_pointwise_conv1_bias_to_fp16 = const()[name = tensor<string, []>("primary_encoder_encoders_11_conv_module_pointwise_conv1_bias_to_fp16"), val = tensor<fp16, [1024]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(82817728)))];
            tensor<fp16, [1, 1024, 1, 11]> x_763_cast = conv(bias = primary_encoder_encoders_11_conv_module_pointwise_conv1_bias_to_fp16, dilations = var_8138, groups = var_7828, pad = x_763_pad_0, pad_type = x_763_pad_type_0, strides = var_8136, weight = op_8135_to_fp16_affine_quantized, x = x_761_cast);
            tensor<int32, [4]> var_8147_begin_0 = const()[name = tensor<string, []>("op_8147_begin_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<int32, [4]> var_8147_end_0 = const()[name = tensor<string, []>("op_8147_end_0"), val = tensor<int32, [4]>([1, 512, 1, 11])];
            tensor<bool, [4]> var_8147_end_mask_0 = const()[name = tensor<string, []>("op_8147_end_mask_0"), val = tensor<bool, [4]>([true, false, true, true])];
            tensor<fp16, [1, 512, 1, 11]> var_8147_cast = slice_by_index(begin = var_8147_begin_0, end = var_8147_end_0, end_mask = var_8147_end_mask_0, x = x_763_cast);
            tensor<int32, [4]> var_8151_begin_0 = const()[name = tensor<string, []>("op_8151_begin_0"), val = tensor<int32, [4]>([0, 512, 0, 0])];
            tensor<int32, [4]> var_8151_end_0 = const()[name = tensor<string, []>("op_8151_end_0"), val = tensor<int32, [4]>([1, 1024, 1, 11])];
            tensor<bool, [4]> var_8151_end_mask_0 = const()[name = tensor<string, []>("op_8151_end_mask_0"), val = tensor<bool, [4]>([true, true, true, true])];
            tensor<fp16, [1, 512, 1, 11]> var_8151_cast = slice_by_index(begin = var_8151_begin_0, end = var_8151_end_0, end_mask = var_8151_end_mask_0, x = x_763_cast);
            tensor<fp16, [1, 512, 1, 11]> var_8154_cast = sigmoid(x = var_8151_cast);
            tensor<fp16, [1, 512, 1, 11]> x_765_cast = mul(x = var_8147_cast, y = var_8154_cast);
            tensor<int32, [2]> var_8157 = const()[name = tensor<string, []>("op_8157"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_8159 = const()[name = tensor<string, []>("op_8159"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> x_767_pad_type_0 = const()[name = tensor<string, []>("x_767_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> x_767_pad_0 = const()[name = tensor<string, []>("x_767_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [512, 1, 1, 8]> op_8156_to_fp16_affine_quantized = constexpr_affine_dequantize()[axis = tensor<int32, []>(0), name = tensor<string, []>("op_8156_to_fp16_affine_quantized"), quantized_data = tensor<int8, [512, 1, 1, 8]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(82819840))), scale = tensor<fp16, [512]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(82824576))), zero_point = tensor<int8, [512]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(82824000)))];
            tensor<fp16, [512]> primary_encoder_encoders_11_conv_module_depthwise_conv_bias_to_fp16 = const()[name = tensor<string, []>("primary_encoder_encoders_11_conv_module_depthwise_conv_bias_to_fp16"), val = tensor<fp16, [512]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(82825664)))];
            tensor<fp16, [1, 512, 1, 4]> x_767_cast = conv(bias = primary_encoder_encoders_11_conv_module_depthwise_conv_bias_to_fp16, dilations = var_8159, groups = var_7816, pad = x_767_pad_0, pad_type = x_767_pad_type_0, strides = var_8157, weight = op_8156_to_fp16_affine_quantized, x = x_765_cast);
            tensor<fp16, [1, 512, 1, 4]> var_8162_cast = abs(x = x_767_cast);
            tensor<fp16, []> var_8163_to_fp16 = const()[name = tensor<string, []>("op_8163_to_fp16"), val = tensor<fp16, []>(0.001953125)];
            tensor<fp16, [1, 512, 1, 4]> var_8164_cast = mul(x = var_8162_cast, y = var_8163_to_fp16);
            tensor<int32, [1]> var_8165 = const()[name = tensor<string, []>("op_8165"), val = tensor<int32, [1]>([1])];
            tensor<fp16, [1, 1, 1, 4]> scale_493_cast = reduce_sum(axes = var_8165, keep_dims = var_7827, x = var_8164_cast);
            tensor<fp16, []> scale_495_epsilon_0_to_fp16 = const()[name = tensor<string, []>("scale_495_epsilon_0_to_fp16"), val = tensor<fp16, []>(5.96046448e-08)];
            tensor<fp16, [1, 1, 1, 4]> scale_495_cast = rsqrt(epsilon = scale_495_epsilon_0_to_fp16, x = scale_493_cast);
            tensor<fp16, [1, 1, 1, 4]> scale_497_cast = mul(x = scale_495_cast, y = scale_495_cast);
            tensor<fp16, [1, 512, 1, 4]> x_769_cast = mul(x = x_767_cast, y = scale_497_cast);
            tensor<fp16, []> var_8170_to_fp16 = const()[name = tensor<string, []>("op_8170_to_fp16"), val = tensor<fp16, []>(-0.001953125)];
            tensor<fp16, [1, 512, 1, 4]> var_8171_cast = mul(x = x_769_cast, y = var_8170_to_fp16);
            tensor<int32, [1]> var_8172 = const()[name = tensor<string, []>("op_8172"), val = tensor<int32, [1]>([1])];
            tensor<fp16, [1, 1, 1, 4]> x_mean_165_cast = reduce_sum(axes = var_8172, keep_dims = var_7827, x = var_8171_cast);
            tensor<fp16, [1, 512, 1, 4]> x_zero_mean_165_cast = add(x = x_769_cast, y = x_mean_165_cast);
            tensor<fp16, []> var_8175_to_fp16 = const()[name = tensor<string, []>("op_8175_to_fp16"), val = tensor<fp16, []>(0.001953125)];
            tensor<fp16, [1, 512, 1, 4]> var_8176_cast = mul(x = x_zero_mean_165_cast, y = var_8175_to_fp16);
            tensor<fp16, [1, 512, 1, 4]> var_8177_cast = mul(x = var_8176_cast, y = x_zero_mean_165_cast);
            tensor<int32, [1]> var_8178 = const()[name = tensor<string, []>("op_8178"), val = tensor<int32, [1]>([1])];
            tensor<fp16, [1, 1, 1, 4]> x_var_165_cast = reduce_sum(axes = var_8178, keep_dims = var_7827, x = var_8177_cast);
            tensor<fp16, []> var_8180_to_fp16 = const()[name = tensor<string, []>("op_8180_to_fp16"), val = tensor<fp16, []>(1.00135803e-05)];
            tensor<fp16, [1, 1, 1, 4]> var_8181_cast = add(x = x_var_165_cast, y = var_8180_to_fp16);
            tensor<fp16, []> var_8182_epsilon_0_to_fp16 = const()[name = tensor<string, []>("op_8182_epsilon_0_to_fp16"), val = tensor<fp16, []>(5.96046448e-08)];
            tensor<fp16, [1, 1, 1, 4]> var_8182_cast = rsqrt(epsilon = var_8182_epsilon_0_to_fp16, x = var_8181_cast);
            tensor<fp16, [1, 512, 1, 4]> var_8183_cast = mul(x = x_zero_mean_165_cast, y = var_8182_cast);
            tensor<fp16, [512]> input_313_mean_0_to_fp16 = const()[name = tensor<string, []>("input_313_mean_0_to_fp16"), val = tensor<fp16, [512]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(82826752)))];
            tensor<fp16, [512]> input_313_variance_0_to_fp16 = const()[name = tensor<string, []>("input_313_variance_0_to_fp16"), val = tensor<fp16, [512]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(82827840)))];
            tensor<fp16, [512]> input_313_gamma_0_to_fp16 = const()[name = tensor<string, []>("input_313_gamma_0_to_fp16"), val = tensor<fp16, [512]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(82828928)))];
            tensor<fp16, [512]> input_313_beta_0_to_fp16 = const()[name = tensor<string, []>("input_313_beta_0_to_fp16"), val = tensor<fp16, [512]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(82830016)))];
            tensor<fp16, []> input_313_epsilon_0_to_fp16 = const()[name = tensor<string, []>("input_313_epsilon_0_to_fp16"), val = tensor<fp16, []>(1.00135803e-05)];
            tensor<fp16, [1, 512, 1, 4]> input_313_cast = batch_norm(beta = input_313_beta_0_to_fp16, epsilon = input_313_epsilon_0_to_fp16, gamma = input_313_gamma_0_to_fp16, mean = input_313_mean_0_to_fp16, variance = input_313_variance_0_to_fp16, x = var_8183_cast);
            tensor<fp16, [1, 512, 1, 4]> x_771_cast = silu(x = input_313_cast);
            tensor<int32, [2]> var_8192 = const()[name = tensor<string, []>("op_8192"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_8194 = const()[name = tensor<string, []>("op_8194"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> input_315_pad_type_0 = const()[name = tensor<string, []>("input_315_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> input_315_pad_0 = const()[name = tensor<string, []>("input_315_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [512, 512, 1, 1]> op_8191_to_fp16_affine_quantized = constexpr_affine_dequantize()[axis = tensor<int32, []>(0), name = tensor<string, []>("op_8191_to_fp16_affine_quantized"), quantized_data = tensor<int8, [512, 512, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(82831104))), scale = tensor<fp16, [512]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(83093888))), zero_point = tensor<int8, [512]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(83093312)))];
            tensor<fp16, [512]> primary_encoder_encoders_11_conv_module_pointwise_conv2_bias_to_fp16 = const()[name = tensor<string, []>("primary_encoder_encoders_11_conv_module_pointwise_conv2_bias_to_fp16"), val = tensor<fp16, [512]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(83094976)))];
            tensor<fp16, [1, 512, 1, 4]> input_315_cast = conv(bias = primary_encoder_encoders_11_conv_module_pointwise_conv2_bias_to_fp16, dilations = var_8194, groups = var_7828, pad = input_315_pad_0, pad_type = input_315_pad_type_0, strides = var_8192, weight = op_8191_to_fp16_affine_quantized, x = x_771_cast);
            tensor<fp16, [1, 512, 1, 4]> x_775_cast = add(x = x_749_cast, y = input_315_cast);
            tensor<fp16, [1, 512, 1, 4]> var_8202_cast = abs(x = x_775_cast);
            tensor<fp16, []> var_8203_to_fp16 = const()[name = tensor<string, []>("op_8203_to_fp16"), val = tensor<fp16, []>(0.001953125)];
            tensor<fp16, [1, 512, 1, 4]> var_8204_cast = mul(x = var_8202_cast, y = var_8203_to_fp16);
            tensor<int32, [1]> var_8205 = const()[name = tensor<string, []>("op_8205"), val = tensor<int32, [1]>([1])];
            tensor<fp16, [1, 1, 1, 4]> scale_499_cast = reduce_sum(axes = var_8205, keep_dims = var_7827, x = var_8204_cast);
            tensor<fp16, []> scale_501_epsilon_0_to_fp16 = const()[name = tensor<string, []>("scale_501_epsilon_0_to_fp16"), val = tensor<fp16, []>(5.96046448e-08)];
            tensor<fp16, [1, 1, 1, 4]> scale_501_cast = rsqrt(epsilon = scale_501_epsilon_0_to_fp16, x = scale_499_cast);
            tensor<fp16, [1, 1, 1, 4]> scale_503_cast = mul(x = scale_501_cast, y = scale_501_cast);
            tensor<fp16, [1, 512, 1, 4]> x_777_cast = mul(x = x_775_cast, y = scale_503_cast);
            tensor<fp16, []> var_8210_to_fp16 = const()[name = tensor<string, []>("op_8210_to_fp16"), val = tensor<fp16, []>(-0.001953125)];
            tensor<fp16, [1, 512, 1, 4]> var_8211_cast = mul(x = x_777_cast, y = var_8210_to_fp16);
            tensor<int32, [1]> var_8212 = const()[name = tensor<string, []>("op_8212"), val = tensor<int32, [1]>([1])];
            tensor<fp16, [1, 1, 1, 4]> x_mean_167_cast = reduce_sum(axes = var_8212, keep_dims = var_7827, x = var_8211_cast);
            tensor<fp16, [1, 512, 1, 4]> x_zero_mean_167_cast = add(x = x_777_cast, y = x_mean_167_cast);
            tensor<fp16, []> var_8215_to_fp16 = const()[name = tensor<string, []>("op_8215_to_fp16"), val = tensor<fp16, []>(0.001953125)];
            tensor<fp16, [1, 512, 1, 4]> var_8216_cast = mul(x = x_zero_mean_167_cast, y = var_8215_to_fp16);
            tensor<fp16, [1, 512, 1, 4]> var_8217_cast = mul(x = var_8216_cast, y = x_zero_mean_167_cast);
            tensor<int32, [1]> var_8218 = const()[name = tensor<string, []>("op_8218"), val = tensor<int32, [1]>([1])];
            tensor<fp16, [1, 1, 1, 4]> x_var_167_cast = reduce_sum(axes = var_8218, keep_dims = var_7827, x = var_8217_cast);
            tensor<fp16, []> var_8220_to_fp16 = const()[name = tensor<string, []>("op_8220_to_fp16"), val = tensor<fp16, []>(1.00135803e-05)];
            tensor<fp16, [1, 1, 1, 4]> var_8221_cast = add(x = x_var_167_cast, y = var_8220_to_fp16);
            tensor<fp16, []> var_8222_epsilon_0_to_fp16 = const()[name = tensor<string, []>("op_8222_epsilon_0_to_fp16"), val = tensor<fp16, []>(5.96046448e-08)];
            tensor<fp16, [1, 1, 1, 4]> var_8222_cast = rsqrt(epsilon = var_8222_epsilon_0_to_fp16, x = var_8221_cast);
            tensor<fp16, [1, 512, 1, 4]> var_8223_cast = mul(x = x_zero_mean_167_cast, y = var_8222_cast);
            tensor<fp16, [512]> x_779_mean_0_to_fp16 = const()[name = tensor<string, []>("x_779_mean_0_to_fp16"), val = tensor<fp16, [512]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(83096064)))];
            tensor<fp16, [512]> x_779_variance_0_to_fp16 = const()[name = tensor<string, []>("x_779_variance_0_to_fp16"), val = tensor<fp16, [512]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(83097152)))];
            tensor<fp16, [512]> x_779_gamma_0_to_fp16 = const()[name = tensor<string, []>("x_779_gamma_0_to_fp16"), val = tensor<fp16, [512]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(83098240)))];
            tensor<fp16, [512]> x_779_beta_0_to_fp16 = const()[name = tensor<string, []>("x_779_beta_0_to_fp16"), val = tensor<fp16, [512]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(83099328)))];
            tensor<fp16, []> x_779_epsilon_0_to_fp16 = const()[name = tensor<string, []>("x_779_epsilon_0_to_fp16"), val = tensor<fp16, []>(1.00135803e-05)];
            tensor<fp16, [1, 512, 1, 4]> x_779_cast = batch_norm(beta = x_779_beta_0_to_fp16, epsilon = x_779_epsilon_0_to_fp16, gamma = x_779_gamma_0_to_fp16, mean = x_779_mean_0_to_fp16, variance = x_779_variance_0_to_fp16, x = var_8223_cast);
            tensor<int32, [2]> var_8234 = const()[name = tensor<string, []>("op_8234"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_8236 = const()[name = tensor<string, []>("op_8236"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> input_317_pad_type_0 = const()[name = tensor<string, []>("input_317_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> input_317_pad_0 = const()[name = tensor<string, []>("input_317_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [2048, 512, 1, 1]> op_8233_to_fp16_affine_quantized = constexpr_affine_dequantize()[axis = tensor<int32, []>(0), name = tensor<string, []>("op_8233_to_fp16_affine_quantized"), quantized_data = tensor<int8, [2048, 512, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(83100416))), scale = tensor<fp16, [2048]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(84151168))), zero_point = tensor<int8, [2048]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(84149056)))];
            tensor<fp16, [2048]> primary_encoder_encoders_11_feed_forward_w_1_bias_to_fp16 = const()[name = tensor<string, []>("primary_encoder_encoders_11_feed_forward_w_1_bias_to_fp16"), val = tensor<fp16, [2048]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(84155328)))];
            tensor<fp16, [1, 2048, 1, 4]> input_317_cast = conv(bias = primary_encoder_encoders_11_feed_forward_w_1_bias_to_fp16, dilations = var_8236, groups = var_7828, pad = input_317_pad_0, pad_type = input_317_pad_type_0, strides = var_8234, weight = op_8233_to_fp16_affine_quantized, x = x_779_cast);
            tensor<fp16, [1, 2048, 1, 4]> input_319_cast = silu(x = input_317_cast);
            tensor<int32, [2]> var_8245 = const()[name = tensor<string, []>("op_8245"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_8247 = const()[name = tensor<string, []>("op_8247"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> input_321_pad_type_0 = const()[name = tensor<string, []>("input_321_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> input_321_pad_0 = const()[name = tensor<string, []>("input_321_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [512, 2048, 1, 1]> op_8252_weight_0_to_fp16_affine_quantized = constexpr_affine_dequantize()[axis = tensor<int32, []>(0), name = tensor<string, []>("op_8252_weight_0_to_fp16_affine_quantized"), quantized_data = tensor<int8, [512, 2048, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(84159488))), scale = tensor<fp16, [512]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(85208704))), zero_point = tensor<int8, [512]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(85208128)))];
            tensor<fp16, [512]> var_8252_bias_0_to_fp16 = const()[name = tensor<string, []>("op_8252_bias_0_to_fp16"), val = tensor<fp16, [512]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(85209792)))];
            tensor<fp16, [1, 512, 1, 4]> var_8252_cast = conv(bias = var_8252_bias_0_to_fp16, dilations = var_8247, groups = var_7828, pad = input_321_pad_0, pad_type = input_321_pad_type_0, strides = var_8245, weight = op_8252_weight_0_to_fp16_affine_quantized, x = input_319_cast);
            tensor<fp16, [1, 512, 1, 4]> x_785_cast = add(x = x_775_cast, y = var_8252_cast);
            tensor<fp16, [1, 512, 1, 4]> var_8254_cast = abs(x = x_785_cast);
            tensor<fp16, []> var_8255_to_fp16 = const()[name = tensor<string, []>("op_8255_to_fp16"), val = tensor<fp16, []>(0.001953125)];
            tensor<fp16, [1, 512, 1, 4]> var_8256_cast = mul(x = var_8254_cast, y = var_8255_to_fp16);
            tensor<int32, [1]> var_8257 = const()[name = tensor<string, []>("op_8257"), val = tensor<int32, [1]>([1])];
            tensor<fp16, [1, 1, 1, 4]> scale_505_cast = reduce_sum(axes = var_8257, keep_dims = var_7827, x = var_8256_cast);
            tensor<fp16, []> scale_507_epsilon_0_to_fp16 = const()[name = tensor<string, []>("scale_507_epsilon_0_to_fp16"), val = tensor<fp16, []>(5.96046448e-08)];
            tensor<fp16, [1, 1, 1, 4]> scale_507_cast = rsqrt(epsilon = scale_507_epsilon_0_to_fp16, x = scale_505_cast);
            tensor<fp16, [1, 1, 1, 4]> scale_509_cast = mul(x = scale_507_cast, y = scale_507_cast);
            tensor<fp16, [1, 512, 1, 4]> x_787_cast = mul(x = x_785_cast, y = scale_509_cast);
            tensor<fp16, []> var_8262_to_fp16 = const()[name = tensor<string, []>("op_8262_to_fp16"), val = tensor<fp16, []>(-0.001953125)];
            tensor<fp16, [1, 512, 1, 4]> var_8263_cast = mul(x = x_787_cast, y = var_8262_to_fp16);
            tensor<int32, [1]> var_8264 = const()[name = tensor<string, []>("op_8264"), val = tensor<int32, [1]>([1])];
            tensor<fp16, [1, 1, 1, 4]> x_mean_169_cast = reduce_sum(axes = var_8264, keep_dims = var_7827, x = var_8263_cast);
            tensor<fp16, [1, 512, 1, 4]> x_zero_mean_169_cast = add(x = x_787_cast, y = x_mean_169_cast);
            tensor<fp16, []> var_8267_to_fp16 = const()[name = tensor<string, []>("op_8267_to_fp16"), val = tensor<fp16, []>(0.001953125)];
            tensor<fp16, [1, 512, 1, 4]> var_8268_cast = mul(x = x_zero_mean_169_cast, y = var_8267_to_fp16);
            tensor<fp16, [1, 512, 1, 4]> var_8269_cast = mul(x = var_8268_cast, y = x_zero_mean_169_cast);
            tensor<int32, [1]> var_8270 = const()[name = tensor<string, []>("op_8270"), val = tensor<int32, [1]>([1])];
            tensor<fp16, [1, 1, 1, 4]> x_var_169_cast = reduce_sum(axes = var_8270, keep_dims = var_7827, x = var_8269_cast);
            tensor<fp16, []> var_8272_to_fp16 = const()[name = tensor<string, []>("op_8272_to_fp16"), val = tensor<fp16, []>(1.00135803e-05)];
            tensor<fp16, [1, 1, 1, 4]> var_8273_cast = add(x = x_var_169_cast, y = var_8272_to_fp16);
            tensor<fp16, []> var_8274_epsilon_0_to_fp16 = const()[name = tensor<string, []>("op_8274_epsilon_0_to_fp16"), val = tensor<fp16, []>(5.96046448e-08)];
            tensor<fp16, [1, 1, 1, 4]> var_8274_cast = rsqrt(epsilon = var_8274_epsilon_0_to_fp16, x = var_8273_cast);
            tensor<fp16, [1, 512, 1, 4]> var_8275_cast = mul(x = x_zero_mean_169_cast, y = var_8274_cast);
            tensor<fp16, [512]> x_789_mean_0_to_fp16 = const()[name = tensor<string, []>("x_789_mean_0_to_fp16"), val = tensor<fp16, [512]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(85210880)))];
            tensor<fp16, [512]> x_789_variance_0_to_fp16 = const()[name = tensor<string, []>("x_789_variance_0_to_fp16"), val = tensor<fp16, [512]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(85211968)))];
            tensor<fp16, [512]> x_789_gamma_0_to_fp16 = const()[name = tensor<string, []>("x_789_gamma_0_to_fp16"), val = tensor<fp16, [512]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(85213056)))];
            tensor<fp16, [512]> x_789_beta_0_to_fp16 = const()[name = tensor<string, []>("x_789_beta_0_to_fp16"), val = tensor<fp16, [512]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(85214144)))];
            tensor<fp16, []> x_789_epsilon_0_to_fp16 = const()[name = tensor<string, []>("x_789_epsilon_0_to_fp16"), val = tensor<fp16, []>(1.00135803e-05)];
            tensor<fp16, [1, 512, 1, 4]> x_789_cast = batch_norm(beta = x_789_beta_0_to_fp16, epsilon = x_789_epsilon_0_to_fp16, gamma = x_789_gamma_0_to_fp16, mean = x_789_mean_0_to_fp16, variance = x_789_variance_0_to_fp16, x = var_8275_cast);
            tensor<fp16, [1, 512, 1, 4]> var_8286_cast = abs(x = x_789_cast);
            tensor<fp16, []> var_8287_to_fp16 = const()[name = tensor<string, []>("op_8287_to_fp16"), val = tensor<fp16, []>(0.001953125)];
            tensor<fp16, [1, 512, 1, 4]> var_8288_cast = mul(x = var_8286_cast, y = var_8287_to_fp16);
            tensor<int32, [1]> var_8290 = const()[name = tensor<string, []>("op_8290"), val = tensor<int32, [1]>([1])];
            tensor<bool, []> var_8291 = const()[name = tensor<string, []>("op_8291"), val = tensor<bool, []>(true)];
            tensor<fp16, [1, 1, 1, 4]> scale_511_cast = reduce_sum(axes = var_8290, keep_dims = var_8291, x = var_8288_cast);
            tensor<fp16, []> scale_513_epsilon_0_to_fp16 = const()[name = tensor<string, []>("scale_513_epsilon_0_to_fp16"), val = tensor<fp16, []>(5.96046448e-08)];
            tensor<fp16, [1, 1, 1, 4]> scale_513_cast = rsqrt(epsilon = scale_513_epsilon_0_to_fp16, x = scale_511_cast);
            tensor<fp16, [1, 1, 1, 4]> scale_cast = mul(x = scale_513_cast, y = scale_513_cast);
            tensor<fp16, [1, 512, 1, 4]> x_791_cast = mul(x = x_789_cast, y = scale_cast);
            tensor<fp16, []> var_8297_to_fp16 = const()[name = tensor<string, []>("op_8297_to_fp16"), val = tensor<fp16, []>(-0.001953125)];
            tensor<fp16, [1, 512, 1, 4]> var_8298_cast = mul(x = x_791_cast, y = var_8297_to_fp16);
            tensor<int32, [1]> var_8300 = const()[name = tensor<string, []>("op_8300"), val = tensor<int32, [1]>([1])];
            tensor<bool, []> var_8301 = const()[name = tensor<string, []>("op_8301"), val = tensor<bool, []>(true)];
            tensor<fp16, [1, 1, 1, 4]> x_mean_cast = reduce_sum(axes = var_8300, keep_dims = var_8301, x = var_8298_cast);
            tensor<fp16, [1, 512, 1, 4]> x_zero_mean_cast = add(x = x_791_cast, y = x_mean_cast);
            tensor<fp16, []> var_8306_to_fp16 = const()[name = tensor<string, []>("op_8306_to_fp16"), val = tensor<fp16, []>(0.001953125)];
            tensor<fp16, [1, 512, 1, 4]> var_8307_cast = mul(x = x_zero_mean_cast, y = var_8306_to_fp16);
            tensor<fp16, [1, 512, 1, 4]> var_8308_cast = mul(x = var_8307_cast, y = x_zero_mean_cast);
            tensor<int32, [1]> var_8310 = const()[name = tensor<string, []>("op_8310"), val = tensor<int32, [1]>([1])];
            tensor<bool, []> var_8311 = const()[name = tensor<string, []>("op_8311"), val = tensor<bool, []>(true)];
            tensor<fp16, [1, 1, 1, 4]> x_var_cast = reduce_sum(axes = var_8310, keep_dims = var_8311, x = var_8308_cast);
            tensor<fp16, []> var_8315_to_fp16 = const()[name = tensor<string, []>("op_8315_to_fp16"), val = tensor<fp16, []>(1.00135803e-05)];
            tensor<fp16, [1, 1, 1, 4]> var_8316_cast = add(x = x_var_cast, y = var_8315_to_fp16);
            tensor<fp16, []> var_8317_epsilon_0_to_fp16 = const()[name = tensor<string, []>("op_8317_epsilon_0_to_fp16"), val = tensor<fp16, []>(5.96046448e-08)];
            tensor<fp16, [1, 1, 1, 4]> var_8317_cast = rsqrt(epsilon = var_8317_epsilon_0_to_fp16, x = var_8316_cast);
            tensor<fp16, [1, 512, 1, 4]> var_8318_cast = mul(x = x_zero_mean_cast, y = var_8317_cast);
            tensor<fp16, [512]> x_793_mean_0_to_fp16 = const()[name = tensor<string, []>("x_793_mean_0_to_fp16"), val = tensor<fp16, [512]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(85215232)))];
            tensor<fp16, [512]> x_793_variance_0_to_fp16 = const()[name = tensor<string, []>("x_793_variance_0_to_fp16"), val = tensor<fp16, [512]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(85216320)))];
            tensor<fp16, [512]> x_793_gamma_0_to_fp16 = const()[name = tensor<string, []>("x_793_gamma_0_to_fp16"), val = tensor<fp16, [512]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(85217408)))];
            tensor<fp16, [512]> x_793_beta_0_to_fp16 = const()[name = tensor<string, []>("x_793_beta_0_to_fp16"), val = tensor<fp16, [512]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(85218496)))];
            tensor<fp16, []> x_793_epsilon_0_to_fp16 = const()[name = tensor<string, []>("x_793_epsilon_0_to_fp16"), val = tensor<fp16, []>(1.00135803e-05)];
            tensor<fp16, [1, 512, 1, 4]> x_793_cast = batch_norm(beta = x_793_beta_0_to_fp16, epsilon = x_793_epsilon_0_to_fp16, gamma = x_793_gamma_0_to_fp16, mean = x_793_mean_0_to_fp16, variance = x_793_variance_0_to_fp16, x = var_8318_cast);
            tensor<int32, []> var_8351 = const()[name = tensor<string, []>("op_8351"), val = tensor<int32, []>(1)];
            tensor<int32, [2]> var_8383 = const()[name = tensor<string, []>("op_8383"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_8385 = const()[name = tensor<string, []>("op_8385"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> gating_weights_1_pad_type_0 = const()[name = tensor<string, []>("gating_weights_1_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> gating_weights_1_pad_0 = const()[name = tensor<string, []>("gating_weights_1_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [128, 512, 1, 1]> op_8382_to_fp16_affine_quantized = constexpr_affine_dequantize()[axis = tensor<int32, []>(0), name = tensor<string, []>("op_8382_to_fp16_affine_quantized"), quantized_data = tensor<int8, [128, 512, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(85219584))), scale = tensor<fp16, [128]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(85285376))), zero_point = tensor<int8, [128]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(85285184)))];
            tensor<fp16, [128]> primary_biasing_module_ba_acoustic_gating_op_0_bias_to_fp16 = const()[name = tensor<string, []>("primary_biasing_module_ba_acoustic_gating_op_0_bias_to_fp16"), val = tensor<fp16, [128]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(85285696)))];
            tensor<fp16, [1, 128, 1, 4]> gating_weights_1_cast = conv(bias = primary_biasing_module_ba_acoustic_gating_op_0_bias_to_fp16, dilations = var_8385, groups = var_8351, pad = gating_weights_1_pad_0, pad_type = gating_weights_1_pad_type_0, strides = var_8383, weight = op_8382_to_fp16_affine_quantized, x = x_793_cast);
            tensor<fp16, [1, 128, 1, 4]> x_795_cast = tanh(x = gating_weights_1_cast);
            tensor<int32, [2]> var_8393 = const()[name = tensor<string, []>("op_8393"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_8395 = const()[name = tensor<string, []>("op_8395"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> gating_weights_3_pad_type_0 = const()[name = tensor<string, []>("gating_weights_3_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> gating_weights_3_pad_0 = const()[name = tensor<string, []>("gating_weights_3_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [1, 128, 1, 1]> var_8392_to_fp16 = const()[name = tensor<string, []>("op_8392_to_fp16"), val = tensor<fp16, [1, 128, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(85286016)))];
            tensor<fp16, [1]> primary_biasing_module_ba_acoustic_gating_op_2_bias_to_fp16 = const()[name = tensor<string, []>("primary_biasing_module_ba_acoustic_gating_op_2_bias_to_fp16"), val = tensor<fp16, [1]>([0])];
            tensor<fp16, [1, 1, 1, 4]> gating_weights_3_cast = conv(bias = primary_biasing_module_ba_acoustic_gating_op_2_bias_to_fp16, dilations = var_8395, groups = var_8351, pad = gating_weights_3_pad_0, pad_type = gating_weights_3_pad_type_0, strides = var_8393, weight = var_8392_to_fp16, x = x_795_cast);
            tensor<fp16, [1, 1, 1, 4]> gating_weights_cast = sigmoid(x = gating_weights_3_cast);
            tensor<int32, [2]> var_8403 = const()[name = tensor<string, []>("op_8403"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_8405 = const()[name = tensor<string, []>("op_8405"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> x_799_pad_type_0 = const()[name = tensor<string, []>("x_799_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> x_799_pad_0 = const()[name = tensor<string, []>("x_799_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [256, 512, 1, 1]> op_8402_to_fp16_affine_quantized = constexpr_affine_dequantize()[axis = tensor<int32, []>(0), name = tensor<string, []>("op_8402_to_fp16_affine_quantized"), quantized_data = tensor<int8, [256, 512, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(85286336))), scale = tensor<fp16, [256]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(85417792))), zero_point = tensor<int8, [256]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(85417472)))];
            tensor<fp16, [256]> primary_biasing_module_ba_acoustic_encoding2xatt_projection_bias_to_fp16 = const()[name = tensor<string, []>("primary_biasing_module_ba_acoustic_encoding2xatt_projection_bias_to_fp16"), val = tensor<fp16, [256]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(85418368)))];
            tensor<fp16, [1, 256, 1, 4]> x_799_cast = conv(bias = primary_biasing_module_ba_acoustic_encoding2xatt_projection_bias_to_fp16, dilations = var_8405, groups = var_8351, pad = x_799_pad_0, pad_type = x_799_pad_type_0, strides = var_8403, weight = op_8402_to_fp16_affine_quantized, x = x_793_cast);
            tensor<int32, [2]> var_8412 = const()[name = tensor<string, []>("op_8412"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_8414 = const()[name = tensor<string, []>("op_8414"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> x_801_pad_type_0 = const()[name = tensor<string, []>("x_801_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> x_801_pad_0 = const()[name = tensor<string, []>("x_801_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [256, 64, 1, 1]> op_8411_to_fp16_affine_quantized = constexpr_affine_dequantize()[axis = tensor<int32, []>(0), name = tensor<string, []>("op_8411_to_fp16_affine_quantized"), quantized_data = tensor<int8, [256, 64, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(85418944))), scale = tensor<fp16, [256]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(85435712))), zero_point = tensor<int8, [256]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(85435392)))];
            tensor<fp16, [256]> primary_biasing_module_ba_acoustic_context2xatt_projection_bias_to_fp16 = const()[name = tensor<string, []>("primary_biasing_module_ba_acoustic_context2xatt_projection_bias_to_fp16"), val = tensor<fp16, [256]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(85436288)))];
            tensor<fp16, [1, 256, 1, 1000]> x_801_cast = conv(bias = primary_biasing_module_ba_acoustic_context2xatt_projection_bias_to_fp16, dilations = var_8414, groups = var_8351, pad = x_801_pad_0, pad_type = x_801_pad_type_0, strides = var_8412, weight = op_8411_to_fp16_affine_quantized, x = x_797_cast);
            tensor<int32, [2]> var_8437 = const()[name = tensor<string, []>("op_8437"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_8439 = const()[name = tensor<string, []>("op_8439"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> y_37_pad_type_0 = const()[name = tensor<string, []>("y_37_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> y_37_pad_0 = const()[name = tensor<string, []>("y_37_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [256, 256, 1, 1]> op_8443_weight_0_to_fp16_affine_quantized = constexpr_affine_dequantize()[axis = tensor<int32, []>(0), name = tensor<string, []>("op_8443_weight_0_to_fp16_affine_quantized"), quantized_data = tensor<int8, [256, 256, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(85436864))), scale = tensor<fp16, [256]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(85502784))), zero_point = tensor<int8, [256]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(85502464)))];
            tensor<fp16, [256]> var_8443_bias_0_to_fp16 = const()[name = tensor<string, []>("op_8443_bias_0_to_fp16"), val = tensor<fp16, [256]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(85503360)))];
            tensor<fp16, [1, 256, 1, 4]> var_8443_cast = conv(bias = var_8443_bias_0_to_fp16, dilations = var_8439, groups = var_8351, pad = y_37_pad_0, pad_type = y_37_pad_type_0, strides = var_8437, weight = op_8443_weight_0_to_fp16_affine_quantized, x = x_799_cast);
            tensor<int32, [8]> tile_52 = const()[name = tensor<string, []>("tile_52"), val = tensor<int32, [8]>([32, 32, 32, 32, 32, 32, 32, 32])];
            tensor<int32, []> var_8444_axis_0 = const()[name = tensor<string, []>("op_8444_axis_0"), val = tensor<int32, []>(1)];
            tensor<fp16, [1, 32, 1, 4]> var_8444_cast_0, tensor<fp16, [1, 32, 1, 4]> var_8444_cast_1, tensor<fp16, [1, 32, 1, 4]> var_8444_cast_2, tensor<fp16, [1, 32, 1, 4]> var_8444_cast_3, tensor<fp16, [1, 32, 1, 4]> var_8444_cast_4, tensor<fp16, [1, 32, 1, 4]> var_8444_cast_5, tensor<fp16, [1, 32, 1, 4]> var_8444_cast_6, tensor<fp16, [1, 32, 1, 4]> var_8444_cast_7 = split(axis = var_8444_axis_0, split_sizes = tile_52, x = var_8443_cast);
            tensor<int32, [2]> var_8457 = const()[name = tensor<string, []>("op_8457"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_8459 = const()[name = tensor<string, []>("op_8459"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> var_8461_pad_type_0 = const()[name = tensor<string, []>("op_8461_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> var_8461_pad_0 = const()[name = tensor<string, []>("op_8461_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [256, 256, 1, 1]> op_8456_to_fp16_affine_quantized = constexpr_affine_dequantize()[axis = tensor<int32, []>(0), name = tensor<string, []>("op_8456_to_fp16_affine_quantized"), quantized_data = tensor<int8, [256, 256, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(85503936))), scale = tensor<fp16, [256]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(85569856))), zero_point = tensor<int8, [256]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(85569536)))];
            tensor<fp16, [256]> primary_biasing_module_ba_acoustic_mha_linear_v_bias_to_fp16 = const()[name = tensor<string, []>("primary_biasing_module_ba_acoustic_mha_linear_v_bias_to_fp16"), val = tensor<fp16, [256]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(85570432)))];
            tensor<fp16, [1, 256, 1, 1000]> var_8461_cast = conv(bias = primary_biasing_module_ba_acoustic_mha_linear_v_bias_to_fp16, dilations = var_8459, groups = var_8351, pad = var_8461_pad_0, pad_type = var_8461_pad_type_0, strides = var_8457, weight = op_8456_to_fp16_affine_quantized, x = x_801_cast);
            tensor<int32, [8]> tile_53 = const()[name = tensor<string, []>("tile_53"), val = tensor<int32, [8]>([32, 32, 32, 32, 32, 32, 32, 32])];
            tensor<int32, []> var_8462_axis_0 = const()[name = tensor<string, []>("op_8462_axis_0"), val = tensor<int32, []>(1)];
            tensor<fp16, [1, 32, 1, 1000]> var_8462_cast_0, tensor<fp16, [1, 32, 1, 1000]> var_8462_cast_1, tensor<fp16, [1, 32, 1, 1000]> var_8462_cast_2, tensor<fp16, [1, 32, 1, 1000]> var_8462_cast_3, tensor<fp16, [1, 32, 1, 1000]> var_8462_cast_4, tensor<fp16, [1, 32, 1, 1000]> var_8462_cast_5, tensor<fp16, [1, 32, 1, 1000]> var_8462_cast_6, tensor<fp16, [1, 32, 1, 1000]> var_8462_cast_7 = split(axis = var_8462_axis_0, split_sizes = tile_53, x = var_8461_cast);
            tensor<int32, [4]> var_8471_perm_0 = const()[name = tensor<string, []>("op_8471_perm_0"), val = tensor<int32, [4]>([0, 3, 2, 1])];
            tensor<string, []> var_8478_equation_0 = const()[name = tensor<string, []>("op_8478_equation_0"), val = tensor<string, []>("bnhd,bdhm->bnhm")];
            tensor<fp16, [1, 256, 1, 256]> op_8475_to_fp16_affine_quantized = constexpr_affine_dequantize()[axis = tensor<int32, []>(0), name = tensor<string, []>("op_8475_to_fp16_affine_quantized"), quantized_data = tensor<int8, [1, 256, 1, 256]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(85571008))), scale = tensor<fp16, []>(0.0031375885), zero_point = tensor<int8, []>(0)];
            tensor<fp16, [1, 1000, 1, 256]> transpose_17 = transpose(perm = var_8471_perm_0, x = x_801_cast);
            tensor<fp16, [1, 1000, 1, 256]> var_8478_cast = einsum(equation = var_8478_equation_0, values = (transpose_17, op_8475_to_fp16_affine_quantized));
            tensor<fp16, [256]> primary_biasing_module_ba_acoustic_mha_linear_k_bias_to_fp16 = const()[name = tensor<string, []>("primary_biasing_module_ba_acoustic_mha_linear_k_bias_to_fp16"), val = tensor<fp16, [256]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(85636608)))];
            tensor<fp16, [1, 1000, 1, 256]> var_8479_cast = add(x = var_8478_cast, y = primary_biasing_module_ba_acoustic_mha_linear_k_bias_to_fp16);
            tensor<int32, [8]> tile_54 = const()[name = tensor<string, []>("tile_54"), val = tensor<int32, [8]>([32, 32, 32, 32, 32, 32, 32, 32])];
            tensor<int32, []> var_8480_axis_0 = const()[name = tensor<string, []>("op_8480_axis_0"), val = tensor<int32, []>(-1)];
            tensor<fp16, [1, 1000, 1, 32]> var_8480_cast_0, tensor<fp16, [1, 1000, 1, 32]> var_8480_cast_1, tensor<fp16, [1, 1000, 1, 32]> var_8480_cast_2, tensor<fp16, [1, 1000, 1, 32]> var_8480_cast_3, tensor<fp16, [1, 1000, 1, 32]> var_8480_cast_4, tensor<fp16, [1, 1000, 1, 32]> var_8480_cast_5, tensor<fp16, [1, 1000, 1, 32]> var_8480_cast_6, tensor<fp16, [1, 1000, 1, 32]> var_8480_cast_7 = split(axis = var_8480_axis_0, split_sizes = tile_54, x = var_8479_cast);
            tensor<string, []> s_129_equation_0 = const()[name = tensor<string, []>("s_129_equation_0"), val = tensor<string, []>("bnhd,bdhm->bnhm")];
            tensor<fp16, [1, 1000, 1, 4]> s_129_cast = einsum(equation = s_129_equation_0, values = (var_8480_cast_0, var_8444_cast_0));
            tensor<string, []> s_131_equation_0 = const()[name = tensor<string, []>("s_131_equation_0"), val = tensor<string, []>("bnhd,bdhm->bnhm")];
            tensor<fp16, [1, 1000, 1, 4]> s_131_cast = einsum(equation = s_131_equation_0, values = (var_8480_cast_1, var_8444_cast_1));
            tensor<string, []> s_133_equation_0 = const()[name = tensor<string, []>("s_133_equation_0"), val = tensor<string, []>("bnhd,bdhm->bnhm")];
            tensor<fp16, [1, 1000, 1, 4]> s_133_cast = einsum(equation = s_133_equation_0, values = (var_8480_cast_2, var_8444_cast_2));
            tensor<string, []> s_135_equation_0 = const()[name = tensor<string, []>("s_135_equation_0"), val = tensor<string, []>("bnhd,bdhm->bnhm")];
            tensor<fp16, [1, 1000, 1, 4]> s_135_cast = einsum(equation = s_135_equation_0, values = (var_8480_cast_3, var_8444_cast_3));
            tensor<string, []> s_137_equation_0 = const()[name = tensor<string, []>("s_137_equation_0"), val = tensor<string, []>("bnhd,bdhm->bnhm")];
            tensor<fp16, [1, 1000, 1, 4]> s_137_cast = einsum(equation = s_137_equation_0, values = (var_8480_cast_4, var_8444_cast_4));
            tensor<string, []> s_139_equation_0 = const()[name = tensor<string, []>("s_139_equation_0"), val = tensor<string, []>("bnhd,bdhm->bnhm")];
            tensor<fp16, [1, 1000, 1, 4]> s_139_cast = einsum(equation = s_139_equation_0, values = (var_8480_cast_5, var_8444_cast_5));
            tensor<string, []> s_141_equation_0 = const()[name = tensor<string, []>("s_141_equation_0"), val = tensor<string, []>("bnhd,bdhm->bnhm")];
            tensor<fp16, [1, 1000, 1, 4]> s_141_cast = einsum(equation = s_141_equation_0, values = (var_8480_cast_6, var_8444_cast_6));
            tensor<string, []> s_143_equation_0 = const()[name = tensor<string, []>("s_143_equation_0"), val = tensor<string, []>("bnhd,bdhm->bnhm")];
            tensor<fp16, [1, 1000, 1, 4]> s_143_cast = einsum(equation = s_143_equation_0, values = (var_8480_cast_7, var_8444_cast_7));
            tensor<fp16, []> var_8505_promoted_to_fp16 = const()[name = tensor<string, []>("op_8505_promoted_to_fp16"), val = tensor<fp16, []>(1)];
            tensor<fp16, [1, 1000, 1, 1]> var_8506_cast = sub(x = mask_cast, y = var_8505_promoted_to_fp16);
            tensor<fp16, []> var_8507_to_fp16 = const()[name = tensor<string, []>("op_8507_to_fp16"), val = tensor<fp16, []>(32096)];
            tensor<fp16, [1, 1000, 1, 1]> inf_mask_cast = mul(x = var_8506_cast, y = var_8507_to_fp16);
            tensor<fp16, [1, 1000, 1, 4]> s_145_cast = add(x = inf_mask_cast, y = s_129_cast);
            tensor<fp16, [1, 1000, 1, 4]> s_147_cast = add(x = inf_mask_cast, y = s_131_cast);
            tensor<fp16, [1, 1000, 1, 4]> s_149_cast = add(x = inf_mask_cast, y = s_133_cast);
            tensor<fp16, [1, 1000, 1, 4]> s_151_cast = add(x = inf_mask_cast, y = s_135_cast);
            tensor<fp16, [1, 1000, 1, 4]> s_153_cast = add(x = inf_mask_cast, y = s_137_cast);
            tensor<fp16, [1, 1000, 1, 4]> s_155_cast = add(x = inf_mask_cast, y = s_139_cast);
            tensor<fp16, [1, 1000, 1, 4]> s_157_cast = add(x = inf_mask_cast, y = s_141_cast);
            tensor<fp16, [1, 1000, 1, 4]> s_cast = add(x = inf_mask_cast, y = s_143_cast);
            tensor<fp16, [1, 1000, 1, 4]> input_323_cast = softmax(axis = var_8351, x = s_145_cast);
            tensor<fp16, [1, 1000, 1, 4]> input_325_cast = softmax(axis = var_8351, x = s_147_cast);
            tensor<fp16, [1, 1000, 1, 4]> input_327_cast = softmax(axis = var_8351, x = s_149_cast);
            tensor<fp16, [1, 1000, 1, 4]> input_329_cast = softmax(axis = var_8351, x = s_151_cast);
            tensor<fp16, [1, 1000, 1, 4]> input_331_cast = softmax(axis = var_8351, x = s_153_cast);
            tensor<fp16, [1, 1000, 1, 4]> input_333_cast = softmax(axis = var_8351, x = s_155_cast);
            tensor<fp16, [1, 1000, 1, 4]> input_335_cast = softmax(axis = var_8351, x = s_157_cast);
            tensor<fp16, [1, 1000, 1, 4]> input_337_cast = softmax(axis = var_8351, x = s_cast);
            tensor<string, []> var_8534_equation_0 = const()[name = tensor<string, []>("op_8534_equation_0"), val = tensor<string, []>("bnhd,bdhm->bnhm")];
            tensor<fp16, [1, 32, 1, 4]> var_8534_cast = einsum(equation = var_8534_equation_0, values = (var_8462_cast_0, input_323_cast));
            tensor<string, []> var_8536_equation_0 = const()[name = tensor<string, []>("op_8536_equation_0"), val = tensor<string, []>("bnhd,bdhm->bnhm")];
            tensor<fp16, [1, 32, 1, 4]> var_8536_cast = einsum(equation = var_8536_equation_0, values = (var_8462_cast_1, input_325_cast));
            tensor<string, []> var_8538_equation_0 = const()[name = tensor<string, []>("op_8538_equation_0"), val = tensor<string, []>("bnhd,bdhm->bnhm")];
            tensor<fp16, [1, 32, 1, 4]> var_8538_cast = einsum(equation = var_8538_equation_0, values = (var_8462_cast_2, input_327_cast));
            tensor<string, []> var_8540_equation_0 = const()[name = tensor<string, []>("op_8540_equation_0"), val = tensor<string, []>("bnhd,bdhm->bnhm")];
            tensor<fp16, [1, 32, 1, 4]> var_8540_cast = einsum(equation = var_8540_equation_0, values = (var_8462_cast_3, input_329_cast));
            tensor<string, []> var_8542_equation_0 = const()[name = tensor<string, []>("op_8542_equation_0"), val = tensor<string, []>("bnhd,bdhm->bnhm")];
            tensor<fp16, [1, 32, 1, 4]> var_8542_cast = einsum(equation = var_8542_equation_0, values = (var_8462_cast_4, input_331_cast));
            tensor<string, []> var_8544_equation_0 = const()[name = tensor<string, []>("op_8544_equation_0"), val = tensor<string, []>("bnhd,bdhm->bnhm")];
            tensor<fp16, [1, 32, 1, 4]> var_8544_cast = einsum(equation = var_8544_equation_0, values = (var_8462_cast_5, input_333_cast));
            tensor<string, []> var_8546_equation_0 = const()[name = tensor<string, []>("op_8546_equation_0"), val = tensor<string, []>("bnhd,bdhm->bnhm")];
            tensor<fp16, [1, 32, 1, 4]> var_8546_cast = einsum(equation = var_8546_equation_0, values = (var_8462_cast_6, input_335_cast));
            tensor<string, []> var_8548_equation_0 = const()[name = tensor<string, []>("op_8548_equation_0"), val = tensor<string, []>("bnhd,bdhm->bnhm")];
            tensor<fp16, [1, 32, 1, 4]> var_8548_cast = einsum(equation = var_8548_equation_0, values = (var_8462_cast_7, input_337_cast));
            tensor<bool, []> y_interleave_0 = const()[name = tensor<string, []>("y_interleave_0"), val = tensor<bool, []>(false)];
            tensor<fp16, [1, 256, 1, 4]> y_cast = concat(axis = var_8351, interleave = y_interleave_0, values = (var_8534_cast, var_8536_cast, var_8538_cast, var_8540_cast, var_8542_cast, var_8544_cast, var_8546_cast, var_8548_cast));
            tensor<int32, [2]> var_8555 = const()[name = tensor<string, []>("op_8555"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_8557 = const()[name = tensor<string, []>("op_8557"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> x_803_pad_type_0 = const()[name = tensor<string, []>("x_803_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> x_803_pad_0 = const()[name = tensor<string, []>("x_803_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [256, 256, 1, 1]> op_8554_to_fp16_affine_quantized = constexpr_affine_dequantize()[axis = tensor<int32, []>(0), name = tensor<string, []>("op_8554_to_fp16_affine_quantized"), quantized_data = tensor<int8, [256, 256, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(85637184))), scale = tensor<fp16, [256]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(85703104))), zero_point = tensor<int8, [256]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(85702784)))];
            tensor<fp16, [256]> primary_biasing_module_ba_acoustic_mha_linear_out_bias_to_fp16 = const()[name = tensor<string, []>("primary_biasing_module_ba_acoustic_mha_linear_out_bias_to_fp16"), val = tensor<fp16, [256]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(85703680)))];
            tensor<fp16, [1, 256, 1, 4]> x_803_cast = conv(bias = primary_biasing_module_ba_acoustic_mha_linear_out_bias_to_fp16, dilations = var_8557, groups = var_8351, pad = x_803_pad_0, pad_type = x_803_pad_type_0, strides = var_8555, weight = op_8554_to_fp16_affine_quantized, x = y_cast);
            tensor<int32, [2]> var_8564 = const()[name = tensor<string, []>("op_8564"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_8566 = const()[name = tensor<string, []>("op_8566"), val = tensor<int32, [2]>([1, 1])];
            tensor<string, []> attn_output_pad_type_0 = const()[name = tensor<string, []>("attn_output_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> attn_output_pad_0 = const()[name = tensor<string, []>("attn_output_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [512, 256, 1, 1]> op_8563_to_fp16_affine_quantized = constexpr_affine_dequantize()[axis = tensor<int32, []>(0), name = tensor<string, []>("op_8563_to_fp16_affine_quantized"), quantized_data = tensor<int8, [512, 256, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(85704256))), scale = tensor<fp16, [512]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(85835968))), zero_point = tensor<int8, [512]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(85835392)))];
            tensor<fp16, [512]> primary_biasing_module_ba_acoustic_xatt2encoding_projection_bias_to_fp16 = const()[name = tensor<string, []>("primary_biasing_module_ba_acoustic_xatt2encoding_projection_bias_to_fp16"), val = tensor<fp16, [512]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(85837056)))];
            tensor<fp16, [1, 512, 1, 4]> attn_output_cast = conv(bias = primary_biasing_module_ba_acoustic_xatt2encoding_projection_bias_to_fp16, dilations = var_8566, groups = var_8351, pad = attn_output_pad_0, pad_type = attn_output_pad_type_0, strides = var_8564, weight = op_8563_to_fp16_affine_quantized, x = x_803_cast);
            tensor<fp16, []> var_175_to_fp16 = const()[name = tensor<string, []>("op_175_to_fp16"), val = tensor<fp16, []>(0)];
            tensor<bool, [1, 1, 1, 4]> var_8569_cast = greater_equal(x = gating_weights_cast, y = var_175_to_fp16);
            tensor<fp16, []> var_8340_to_fp16 = const()[name = tensor<string, []>("op_8340_to_fp16"), val = tensor<fp16, []>(0.5)];
            tensor<string, []> var_8569_promoted_to_fp16_dtype_0 = const()[name = tensor<string, []>("op_8569_promoted_to_fp16_dtype_0"), val = tensor<string, []>("fp16")];
            tensor<fp16, [1, 1, 1, 4]> cast_48 = cast(dtype = var_8569_promoted_to_fp16_dtype_0, x = var_8569_cast);
            tensor<fp16, [1, 1, 1, 4]> var_8570_cast = mul(x = var_8340_to_fp16, y = cast_48);
            tensor<fp16, [1, 512, 1, 4]> var_8571_cast = mul(x = var_8570_cast, y = attn_output_cast);
            tensor<fp16, [1, 512, 1, 4]> xs_7_cast = add(x = x_793_cast, y = var_8571_cast);
            tensor<int32, [2]> var_8589 = const()[name = tensor<string, []>("op_8589"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_8595 = const()[name = tensor<string, []>("op_8595"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, []> var_8600 = const()[name = tensor<string, []>("op_8600"), val = tensor<int32, []>(1)];
            tensor<string, []> input_pad_type_0 = const()[name = tensor<string, []>("input_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> input_pad_0 = const()[name = tensor<string, []>("input_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [128, 512, 1, 1]> op_8586_to_fp16_affine_quantized = constexpr_affine_dequantize()[axis = tensor<int32, []>(0), name = tensor<string, []>("op_8586_to_fp16_affine_quantized"), quantized_data = tensor<int8, [128, 512, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(85838144))), scale = tensor<fp16, [128]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(85903936))), zero_point = tensor<int8, [128]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(85903744)))];
            tensor<fp16, [128]> primary_ep_encoder_linear_bias_to_fp16 = const()[name = tensor<string, []>("primary_ep_encoder_linear_bias_to_fp16"), val = tensor<fp16, [128]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(85904256)))];
            tensor<fp16, [1, 128, 1, 4]> input_cast = conv(bias = primary_ep_encoder_linear_bias_to_fp16, dilations = var_8595, groups = var_8600, pad = input_pad_0, pad_type = input_pad_type_0, strides = var_8589, weight = op_8586_to_fp16_affine_quantized, x = xs_7_cast);
            tensor<fp16, [1, 128, 1, 4]> xs_cast = relu(x = input_cast);
            tensor<int32, [4]> x_t_1_begin_0 = const()[name = tensor<string, []>("x_t_1_begin_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<int32, [4]> x_t_1_end_0 = const()[name = tensor<string, []>("x_t_1_end_0"), val = tensor<int32, [4]>([1, 128, 1, 1])];
            tensor<bool, [4]> x_t_1_end_mask_0 = const()[name = tensor<string, []>("x_t_1_end_mask_0"), val = tensor<bool, [4]>([true, true, true, false])];
            tensor<fp16, [1, 128, 1, 1]> x_t_1_cast = slice_by_index(begin = x_t_1_begin_0, end = x_t_1_end_0, end_mask = x_t_1_end_mask_0, x = xs_cast);
            tensor<int32, [2]> var_8643 = const()[name = tensor<string, []>("op_8643"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_8649 = const()[name = tensor<string, []>("op_8649"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, []> var_8654 = const()[name = tensor<string, []>("op_8654"), val = tensor<int32, []>(1)];
            tensor<string, []> X_1_pad_type_0 = const()[name = tensor<string, []>("X_1_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> X_1_pad_0 = const()[name = tensor<string, []>("X_1_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [512, 128, 1, 1]> op_8640_to_fp16_affine_quantized = constexpr_affine_dequantize()[axis = tensor<int32, []>(0), name = tensor<string, []>("op_8640_to_fp16_affine_quantized"), quantized_data = tensor<int8, [512, 128, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(85904576))), scale = tensor<fp16, [512]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(85970752))), zero_point = tensor<int8, [512]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(85970176)))];
            tensor<fp16, [512]> primary_ep_encoder_lstm_bias_ih_l0_to_fp16 = const()[name = tensor<string, []>("primary_ep_encoder_lstm_bias_ih_l0_to_fp16"), val = tensor<fp16, [512]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(85971840)))];
            tensor<fp16, [1, 512, 1, 1]> X_1_cast = conv(bias = primary_ep_encoder_lstm_bias_ih_l0_to_fp16, dilations = var_8649, groups = var_8654, pad = X_1_pad_0, pad_type = X_1_pad_type_0, strides = var_8643, weight = op_8640_to_fp16_affine_quantized, x = x_t_1_cast);
            tensor<int32, [2]> var_8676 = const()[name = tensor<string, []>("op_8676"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_8682 = const()[name = tensor<string, []>("op_8682"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, []> var_8687 = const()[name = tensor<string, []>("op_8687"), val = tensor<int32, []>(1)];
            tensor<string, []> H_1_pad_type_0 = const()[name = tensor<string, []>("H_1_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> H_1_pad_0 = const()[name = tensor<string, []>("H_1_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [512, 128, 1, 1]> op_8673_to_fp16_affine_quantized = constexpr_affine_dequantize()[axis = tensor<int32, []>(0), name = tensor<string, []>("op_8673_to_fp16_affine_quantized"), quantized_data = tensor<int8, [512, 128, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(85972928))), scale = tensor<fp16, [512]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(86039104))), zero_point = tensor<int8, [512]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(86038528)))];
            tensor<fp16, [512]> primary_ep_encoder_lstm_bias_hh_l0_to_fp16 = const()[name = tensor<string, []>("primary_ep_encoder_lstm_bias_hh_l0_to_fp16"), val = tensor<fp16, [512]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(86040192)))];
            tensor<fp16, [1, 512, 1, 1]> H_1_cast = conv(bias = primary_ep_encoder_lstm_bias_hh_l0_to_fp16, dilations = var_8682, groups = var_8687, pad = H_1_pad_0, pad_type = H_1_pad_type_0, strides = var_8676, weight = op_8673_to_fp16_affine_quantized, x = var_366_cast_0);
            tensor<fp16, [1, 512, 1, 1]> var_8694_cast = add(x = X_1_cast, y = H_1_cast);
            tensor<int32, [4]> tile_55 = const()[name = tensor<string, []>("tile_55"), val = tensor<int32, [4]>([128, 128, 128, 128])];
            tensor<int32, []> var_8697_axis_0 = const()[name = tensor<string, []>("op_8697_axis_0"), val = tensor<int32, []>(1)];
            tensor<fp16, [1, 128, 1, 1]> var_8697_cast_0, tensor<fp16, [1, 128, 1, 1]> var_8697_cast_1, tensor<fp16, [1, 128, 1, 1]> var_8697_cast_2, tensor<fp16, [1, 128, 1, 1]> var_8697_cast_3 = split(axis = var_8697_axis_0, split_sizes = tile_55, x = var_8694_cast);
            tensor<fp16, [1, 128, 1, 1]> i_t_3_cast = sigmoid(x = var_8697_cast_0);
            tensor<fp16, [1, 128, 1, 1]> f_t_3_cast = sigmoid(x = var_8697_cast_1);
            tensor<fp16, [1, 128, 1, 1]> g_t_3_cast = tanh(x = var_8697_cast_2);
            tensor<fp16, [1, 128, 1, 1]> o_t_3_cast = sigmoid(x = var_8697_cast_3);
            tensor<fp16, [1, 128, 1, 1]> var_8706_cast = mul(x = f_t_3_cast, y = var_385_cast_0);
            tensor<fp16, [1, 128, 1, 1]> var_8707_cast = mul(x = i_t_3_cast, y = g_t_3_cast);
            tensor<fp16, [1, 128, 1, 1]> var_8709_cast = add(x = var_8706_cast, y = var_8707_cast);
            tensor<fp16, [1, 128, 1, 1]> var_8710_cast = tanh(x = var_8709_cast);
            tensor<fp16, [1, 128, 1, 1]> x_t_3_cast = mul(x = o_t_3_cast, y = var_8710_cast);
            tensor<int32, [2]> var_8728 = const()[name = tensor<string, []>("op_8728"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_8734 = const()[name = tensor<string, []>("op_8734"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, []> var_8739 = const()[name = tensor<string, []>("op_8739"), val = tensor<int32, []>(1)];
            tensor<string, []> X_3_pad_type_0 = const()[name = tensor<string, []>("X_3_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> X_3_pad_0 = const()[name = tensor<string, []>("X_3_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [512, 128, 1, 1]> op_8725_to_fp16_affine_quantized = constexpr_affine_dequantize()[axis = tensor<int32, []>(0), name = tensor<string, []>("op_8725_to_fp16_affine_quantized"), quantized_data = tensor<int8, [512, 128, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(86041280))), scale = tensor<fp16, [512]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(86107456))), zero_point = tensor<int8, [512]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(86106880)))];
            tensor<fp16, [512]> primary_ep_encoder_lstm_bias_ih_l1_to_fp16 = const()[name = tensor<string, []>("primary_ep_encoder_lstm_bias_ih_l1_to_fp16"), val = tensor<fp16, [512]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(86108544)))];
            tensor<fp16, [1, 512, 1, 1]> X_3_cast = conv(bias = primary_ep_encoder_lstm_bias_ih_l1_to_fp16, dilations = var_8734, groups = var_8739, pad = X_3_pad_0, pad_type = X_3_pad_type_0, strides = var_8728, weight = op_8725_to_fp16_affine_quantized, x = x_t_3_cast);
            tensor<int32, [2]> var_8761 = const()[name = tensor<string, []>("op_8761"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_8767 = const()[name = tensor<string, []>("op_8767"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, []> var_8772 = const()[name = tensor<string, []>("op_8772"), val = tensor<int32, []>(1)];
            tensor<string, []> H_3_pad_type_0 = const()[name = tensor<string, []>("H_3_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> H_3_pad_0 = const()[name = tensor<string, []>("H_3_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [512, 128, 1, 1]> op_8758_to_fp16_affine_quantized = constexpr_affine_dequantize()[axis = tensor<int32, []>(0), name = tensor<string, []>("op_8758_to_fp16_affine_quantized"), quantized_data = tensor<int8, [512, 128, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(86109632))), scale = tensor<fp16, [512]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(86175808))), zero_point = tensor<int8, [512]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(86175232)))];
            tensor<fp16, [512]> primary_ep_encoder_lstm_bias_hh_l1_to_fp16 = const()[name = tensor<string, []>("primary_ep_encoder_lstm_bias_hh_l1_to_fp16"), val = tensor<fp16, [512]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(86176896)))];
            tensor<fp16, [1, 512, 1, 1]> H_3_cast = conv(bias = primary_ep_encoder_lstm_bias_hh_l1_to_fp16, dilations = var_8767, groups = var_8772, pad = H_3_pad_0, pad_type = H_3_pad_type_0, strides = var_8761, weight = op_8758_to_fp16_affine_quantized, x = var_366_cast_1);
            tensor<fp16, [1, 512, 1, 1]> var_8779_cast = add(x = X_3_cast, y = H_3_cast);
            tensor<int32, [4]> tile_56 = const()[name = tensor<string, []>("tile_56"), val = tensor<int32, [4]>([128, 128, 128, 128])];
            tensor<int32, []> var_8782_axis_0 = const()[name = tensor<string, []>("op_8782_axis_0"), val = tensor<int32, []>(1)];
            tensor<fp16, [1, 128, 1, 1]> var_8782_cast_0, tensor<fp16, [1, 128, 1, 1]> var_8782_cast_1, tensor<fp16, [1, 128, 1, 1]> var_8782_cast_2, tensor<fp16, [1, 128, 1, 1]> var_8782_cast_3 = split(axis = var_8782_axis_0, split_sizes = tile_56, x = var_8779_cast);
            tensor<fp16, [1, 128, 1, 1]> i_t_7_cast = sigmoid(x = var_8782_cast_0);
            tensor<fp16, [1, 128, 1, 1]> f_t_7_cast = sigmoid(x = var_8782_cast_1);
            tensor<fp16, [1, 128, 1, 1]> g_t_7_cast = tanh(x = var_8782_cast_2);
            tensor<fp16, [1, 128, 1, 1]> o_t_7_cast = sigmoid(x = var_8782_cast_3);
            tensor<fp16, [1, 128, 1, 1]> var_8791_cast = mul(x = f_t_7_cast, y = var_385_cast_1);
            tensor<fp16, [1, 128, 1, 1]> var_8792_cast = mul(x = i_t_7_cast, y = g_t_7_cast);
            tensor<fp16, [1, 128, 1, 1]> var_8794_cast = add(x = var_8791_cast, y = var_8792_cast);
            tensor<fp16, [1, 128, 1, 1]> var_8795_cast = tanh(x = var_8794_cast);
            tensor<fp16, [1, 128, 1, 1]> x_805_cast = mul(x = o_t_7_cast, y = var_8795_cast);
            tensor<int32, [4]> x_t_5_begin_0 = const()[name = tensor<string, []>("x_t_5_begin_0"), val = tensor<int32, [4]>([0, 0, 0, 1])];
            tensor<int32, [4]> x_t_5_end_0 = const()[name = tensor<string, []>("x_t_5_end_0"), val = tensor<int32, [4]>([1, 128, 1, 2])];
            tensor<bool, [4]> x_t_5_end_mask_0 = const()[name = tensor<string, []>("x_t_5_end_mask_0"), val = tensor<bool, [4]>([true, true, true, false])];
            tensor<fp16, [1, 128, 1, 1]> x_t_5_cast = slice_by_index(begin = x_t_5_begin_0, end = x_t_5_end_0, end_mask = x_t_5_end_mask_0, x = xs_cast);
            tensor<int32, [2]> var_8833 = const()[name = tensor<string, []>("op_8833"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_8839 = const()[name = tensor<string, []>("op_8839"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, []> var_8844 = const()[name = tensor<string, []>("op_8844"), val = tensor<int32, []>(1)];
            tensor<string, []> X_5_pad_type_0 = const()[name = tensor<string, []>("X_5_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> X_5_pad_0 = const()[name = tensor<string, []>("X_5_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [512, 128, 1, 1]> op_8830_to_fp16_affine_quantized = constexpr_affine_dequantize()[axis = tensor<int32, []>(0), name = tensor<string, []>("op_8830_to_fp16_affine_quantized"), quantized_data = tensor<int8, [512, 128, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(86177984))), scale = tensor<fp16, [512]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(86244160))), zero_point = tensor<int8, [512]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(86243584)))];
            tensor<fp16, [1, 512, 1, 1]> X_5_cast = conv(bias = primary_ep_encoder_lstm_bias_ih_l0_to_fp16, dilations = var_8839, groups = var_8844, pad = X_5_pad_0, pad_type = X_5_pad_type_0, strides = var_8833, weight = op_8830_to_fp16_affine_quantized, x = x_t_5_cast);
            tensor<int32, [2]> var_8866 = const()[name = tensor<string, []>("op_8866"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_8872 = const()[name = tensor<string, []>("op_8872"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, []> var_8877 = const()[name = tensor<string, []>("op_8877"), val = tensor<int32, []>(1)];
            tensor<string, []> H_5_pad_type_0 = const()[name = tensor<string, []>("H_5_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> H_5_pad_0 = const()[name = tensor<string, []>("H_5_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [512, 128, 1, 1]> op_8863_to_fp16_affine_quantized = constexpr_affine_dequantize()[axis = tensor<int32, []>(0), name = tensor<string, []>("op_8863_to_fp16_affine_quantized"), quantized_data = tensor<int8, [512, 128, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(86245248))), scale = tensor<fp16, [512]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(86311424))), zero_point = tensor<int8, [512]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(86310848)))];
            tensor<fp16, [1, 512, 1, 1]> H_5_cast = conv(bias = primary_ep_encoder_lstm_bias_hh_l0_to_fp16, dilations = var_8872, groups = var_8877, pad = H_5_pad_0, pad_type = H_5_pad_type_0, strides = var_8866, weight = op_8863_to_fp16_affine_quantized, x = x_t_3_cast);
            tensor<fp16, [1, 512, 1, 1]> var_8884_cast = add(x = X_5_cast, y = H_5_cast);
            tensor<int32, [4]> tile_57 = const()[name = tensor<string, []>("tile_57"), val = tensor<int32, [4]>([128, 128, 128, 128])];
            tensor<int32, []> var_8887_axis_0 = const()[name = tensor<string, []>("op_8887_axis_0"), val = tensor<int32, []>(1)];
            tensor<fp16, [1, 128, 1, 1]> var_8887_cast_0, tensor<fp16, [1, 128, 1, 1]> var_8887_cast_1, tensor<fp16, [1, 128, 1, 1]> var_8887_cast_2, tensor<fp16, [1, 128, 1, 1]> var_8887_cast_3 = split(axis = var_8887_axis_0, split_sizes = tile_57, x = var_8884_cast);
            tensor<fp16, [1, 128, 1, 1]> i_t_11_cast = sigmoid(x = var_8887_cast_0);
            tensor<fp16, [1, 128, 1, 1]> f_t_11_cast = sigmoid(x = var_8887_cast_1);
            tensor<fp16, [1, 128, 1, 1]> g_t_11_cast = tanh(x = var_8887_cast_2);
            tensor<fp16, [1, 128, 1, 1]> o_t_11_cast = sigmoid(x = var_8887_cast_3);
            tensor<fp16, [1, 128, 1, 1]> var_8896_cast = mul(x = f_t_11_cast, y = var_8709_cast);
            tensor<fp16, [1, 128, 1, 1]> var_8897_cast = mul(x = i_t_11_cast, y = g_t_11_cast);
            tensor<fp16, [1, 128, 1, 1]> var_8899_cast = add(x = var_8896_cast, y = var_8897_cast);
            tensor<fp16, [1, 128, 1, 1]> var_8900_cast = tanh(x = var_8899_cast);
            tensor<fp16, [1, 128, 1, 1]> x_t_7_cast = mul(x = o_t_11_cast, y = var_8900_cast);
            tensor<int32, [2]> var_8918 = const()[name = tensor<string, []>("op_8918"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_8924 = const()[name = tensor<string, []>("op_8924"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, []> var_8929 = const()[name = tensor<string, []>("op_8929"), val = tensor<int32, []>(1)];
            tensor<string, []> X_7_pad_type_0 = const()[name = tensor<string, []>("X_7_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> X_7_pad_0 = const()[name = tensor<string, []>("X_7_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [512, 128, 1, 1]> op_8915_to_fp16_affine_quantized = constexpr_affine_dequantize()[axis = tensor<int32, []>(0), name = tensor<string, []>("op_8915_to_fp16_affine_quantized"), quantized_data = tensor<int8, [512, 128, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(86312512))), scale = tensor<fp16, [512]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(86378688))), zero_point = tensor<int8, [512]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(86378112)))];
            tensor<fp16, [1, 512, 1, 1]> X_7_cast = conv(bias = primary_ep_encoder_lstm_bias_ih_l1_to_fp16, dilations = var_8924, groups = var_8929, pad = X_7_pad_0, pad_type = X_7_pad_type_0, strides = var_8918, weight = op_8915_to_fp16_affine_quantized, x = x_t_7_cast);
            tensor<int32, [2]> var_8951 = const()[name = tensor<string, []>("op_8951"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_8957 = const()[name = tensor<string, []>("op_8957"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, []> var_8962 = const()[name = tensor<string, []>("op_8962"), val = tensor<int32, []>(1)];
            tensor<string, []> H_7_pad_type_0 = const()[name = tensor<string, []>("H_7_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> H_7_pad_0 = const()[name = tensor<string, []>("H_7_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [512, 128, 1, 1]> op_8948_to_fp16_affine_quantized = constexpr_affine_dequantize()[axis = tensor<int32, []>(0), name = tensor<string, []>("op_8948_to_fp16_affine_quantized"), quantized_data = tensor<int8, [512, 128, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(86379776))), scale = tensor<fp16, [512]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(86445952))), zero_point = tensor<int8, [512]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(86445376)))];
            tensor<fp16, [1, 512, 1, 1]> H_7_cast = conv(bias = primary_ep_encoder_lstm_bias_hh_l1_to_fp16, dilations = var_8957, groups = var_8962, pad = H_7_pad_0, pad_type = H_7_pad_type_0, strides = var_8951, weight = op_8948_to_fp16_affine_quantized, x = x_805_cast);
            tensor<fp16, [1, 512, 1, 1]> var_8969_cast = add(x = X_7_cast, y = H_7_cast);
            tensor<int32, [4]> tile_58 = const()[name = tensor<string, []>("tile_58"), val = tensor<int32, [4]>([128, 128, 128, 128])];
            tensor<int32, []> var_8972_axis_0 = const()[name = tensor<string, []>("op_8972_axis_0"), val = tensor<int32, []>(1)];
            tensor<fp16, [1, 128, 1, 1]> var_8972_cast_0, tensor<fp16, [1, 128, 1, 1]> var_8972_cast_1, tensor<fp16, [1, 128, 1, 1]> var_8972_cast_2, tensor<fp16, [1, 128, 1, 1]> var_8972_cast_3 = split(axis = var_8972_axis_0, split_sizes = tile_58, x = var_8969_cast);
            tensor<fp16, [1, 128, 1, 1]> i_t_15_cast = sigmoid(x = var_8972_cast_0);
            tensor<fp16, [1, 128, 1, 1]> f_t_15_cast = sigmoid(x = var_8972_cast_1);
            tensor<fp16, [1, 128, 1, 1]> g_t_15_cast = tanh(x = var_8972_cast_2);
            tensor<fp16, [1, 128, 1, 1]> o_t_15_cast = sigmoid(x = var_8972_cast_3);
            tensor<fp16, [1, 128, 1, 1]> var_8981_cast = mul(x = f_t_15_cast, y = var_8794_cast);
            tensor<fp16, [1, 128, 1, 1]> var_8982_cast = mul(x = i_t_15_cast, y = g_t_15_cast);
            tensor<fp16, [1, 128, 1, 1]> var_8984_cast = add(x = var_8981_cast, y = var_8982_cast);
            tensor<fp16, [1, 128, 1, 1]> var_8985_cast = tanh(x = var_8984_cast);
            tensor<fp16, [1, 128, 1, 1]> x_807_cast = mul(x = o_t_15_cast, y = var_8985_cast);
            tensor<int32, [4]> x_t_9_begin_0 = const()[name = tensor<string, []>("x_t_9_begin_0"), val = tensor<int32, [4]>([0, 0, 0, 2])];
            tensor<int32, [4]> x_t_9_end_0 = const()[name = tensor<string, []>("x_t_9_end_0"), val = tensor<int32, [4]>([1, 128, 1, 3])];
            tensor<bool, [4]> x_t_9_end_mask_0 = const()[name = tensor<string, []>("x_t_9_end_mask_0"), val = tensor<bool, [4]>([true, true, true, false])];
            tensor<fp16, [1, 128, 1, 1]> x_t_9_cast = slice_by_index(begin = x_t_9_begin_0, end = x_t_9_end_0, end_mask = x_t_9_end_mask_0, x = xs_cast);
            tensor<int32, [2]> var_9023 = const()[name = tensor<string, []>("op_9023"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_9029 = const()[name = tensor<string, []>("op_9029"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, []> var_9034 = const()[name = tensor<string, []>("op_9034"), val = tensor<int32, []>(1)];
            tensor<string, []> X_9_pad_type_0 = const()[name = tensor<string, []>("X_9_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> X_9_pad_0 = const()[name = tensor<string, []>("X_9_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [512, 128, 1, 1]> op_9020_to_fp16_affine_quantized = constexpr_affine_dequantize()[axis = tensor<int32, []>(0), name = tensor<string, []>("op_9020_to_fp16_affine_quantized"), quantized_data = tensor<int8, [512, 128, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(86447040))), scale = tensor<fp16, [512]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(86513216))), zero_point = tensor<int8, [512]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(86512640)))];
            tensor<fp16, [1, 512, 1, 1]> X_9_cast = conv(bias = primary_ep_encoder_lstm_bias_ih_l0_to_fp16, dilations = var_9029, groups = var_9034, pad = X_9_pad_0, pad_type = X_9_pad_type_0, strides = var_9023, weight = op_9020_to_fp16_affine_quantized, x = x_t_9_cast);
            tensor<int32, [2]> var_9056 = const()[name = tensor<string, []>("op_9056"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_9062 = const()[name = tensor<string, []>("op_9062"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, []> var_9067 = const()[name = tensor<string, []>("op_9067"), val = tensor<int32, []>(1)];
            tensor<string, []> H_9_pad_type_0 = const()[name = tensor<string, []>("H_9_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> H_9_pad_0 = const()[name = tensor<string, []>("H_9_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [512, 128, 1, 1]> op_9053_to_fp16_affine_quantized = constexpr_affine_dequantize()[axis = tensor<int32, []>(0), name = tensor<string, []>("op_9053_to_fp16_affine_quantized"), quantized_data = tensor<int8, [512, 128, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(86514304))), scale = tensor<fp16, [512]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(86580480))), zero_point = tensor<int8, [512]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(86579904)))];
            tensor<fp16, [1, 512, 1, 1]> H_9_cast = conv(bias = primary_ep_encoder_lstm_bias_hh_l0_to_fp16, dilations = var_9062, groups = var_9067, pad = H_9_pad_0, pad_type = H_9_pad_type_0, strides = var_9056, weight = op_9053_to_fp16_affine_quantized, x = x_t_7_cast);
            tensor<fp16, [1, 512, 1, 1]> var_9074_cast = add(x = X_9_cast, y = H_9_cast);
            tensor<int32, [4]> tile_59 = const()[name = tensor<string, []>("tile_59"), val = tensor<int32, [4]>([128, 128, 128, 128])];
            tensor<int32, []> var_9077_axis_0 = const()[name = tensor<string, []>("op_9077_axis_0"), val = tensor<int32, []>(1)];
            tensor<fp16, [1, 128, 1, 1]> var_9077_cast_0, tensor<fp16, [1, 128, 1, 1]> var_9077_cast_1, tensor<fp16, [1, 128, 1, 1]> var_9077_cast_2, tensor<fp16, [1, 128, 1, 1]> var_9077_cast_3 = split(axis = var_9077_axis_0, split_sizes = tile_59, x = var_9074_cast);
            tensor<fp16, [1, 128, 1, 1]> i_t_19_cast = sigmoid(x = var_9077_cast_0);
            tensor<fp16, [1, 128, 1, 1]> f_t_19_cast = sigmoid(x = var_9077_cast_1);
            tensor<fp16, [1, 128, 1, 1]> g_t_19_cast = tanh(x = var_9077_cast_2);
            tensor<fp16, [1, 128, 1, 1]> o_t_19_cast = sigmoid(x = var_9077_cast_3);
            tensor<fp16, [1, 128, 1, 1]> var_9086_cast = mul(x = f_t_19_cast, y = var_8899_cast);
            tensor<fp16, [1, 128, 1, 1]> var_9087_cast = mul(x = i_t_19_cast, y = g_t_19_cast);
            tensor<fp16, [1, 128, 1, 1]> var_9089_cast = add(x = var_9086_cast, y = var_9087_cast);
            tensor<fp16, [1, 128, 1, 1]> var_9090_cast = tanh(x = var_9089_cast);
            tensor<fp16, [1, 128, 1, 1]> x_t_11_cast = mul(x = o_t_19_cast, y = var_9090_cast);
            tensor<int32, [2]> var_9108 = const()[name = tensor<string, []>("op_9108"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_9114 = const()[name = tensor<string, []>("op_9114"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, []> var_9119 = const()[name = tensor<string, []>("op_9119"), val = tensor<int32, []>(1)];
            tensor<string, []> X_11_pad_type_0 = const()[name = tensor<string, []>("X_11_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> X_11_pad_0 = const()[name = tensor<string, []>("X_11_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [512, 128, 1, 1]> op_9105_to_fp16_affine_quantized = constexpr_affine_dequantize()[axis = tensor<int32, []>(0), name = tensor<string, []>("op_9105_to_fp16_affine_quantized"), quantized_data = tensor<int8, [512, 128, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(86581568))), scale = tensor<fp16, [512]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(86647744))), zero_point = tensor<int8, [512]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(86647168)))];
            tensor<fp16, [1, 512, 1, 1]> X_11_cast = conv(bias = primary_ep_encoder_lstm_bias_ih_l1_to_fp16, dilations = var_9114, groups = var_9119, pad = X_11_pad_0, pad_type = X_11_pad_type_0, strides = var_9108, weight = op_9105_to_fp16_affine_quantized, x = x_t_11_cast);
            tensor<int32, [2]> var_9141 = const()[name = tensor<string, []>("op_9141"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_9147 = const()[name = tensor<string, []>("op_9147"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, []> var_9152 = const()[name = tensor<string, []>("op_9152"), val = tensor<int32, []>(1)];
            tensor<string, []> H_11_pad_type_0 = const()[name = tensor<string, []>("H_11_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> H_11_pad_0 = const()[name = tensor<string, []>("H_11_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [512, 128, 1, 1]> op_9138_to_fp16_affine_quantized = constexpr_affine_dequantize()[axis = tensor<int32, []>(0), name = tensor<string, []>("op_9138_to_fp16_affine_quantized"), quantized_data = tensor<int8, [512, 128, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(86648832))), scale = tensor<fp16, [512]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(86715008))), zero_point = tensor<int8, [512]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(86714432)))];
            tensor<fp16, [1, 512, 1, 1]> H_11_cast = conv(bias = primary_ep_encoder_lstm_bias_hh_l1_to_fp16, dilations = var_9147, groups = var_9152, pad = H_11_pad_0, pad_type = H_11_pad_type_0, strides = var_9141, weight = op_9138_to_fp16_affine_quantized, x = x_807_cast);
            tensor<fp16, [1, 512, 1, 1]> var_9159_cast = add(x = X_11_cast, y = H_11_cast);
            tensor<int32, [4]> tile_60 = const()[name = tensor<string, []>("tile_60"), val = tensor<int32, [4]>([128, 128, 128, 128])];
            tensor<int32, []> var_9162_axis_0 = const()[name = tensor<string, []>("op_9162_axis_0"), val = tensor<int32, []>(1)];
            tensor<fp16, [1, 128, 1, 1]> var_9162_cast_0, tensor<fp16, [1, 128, 1, 1]> var_9162_cast_1, tensor<fp16, [1, 128, 1, 1]> var_9162_cast_2, tensor<fp16, [1, 128, 1, 1]> var_9162_cast_3 = split(axis = var_9162_axis_0, split_sizes = tile_60, x = var_9159_cast);
            tensor<fp16, [1, 128, 1, 1]> i_t_23_cast = sigmoid(x = var_9162_cast_0);
            tensor<fp16, [1, 128, 1, 1]> f_t_23_cast = sigmoid(x = var_9162_cast_1);
            tensor<fp16, [1, 128, 1, 1]> g_t_23_cast = tanh(x = var_9162_cast_2);
            tensor<fp16, [1, 128, 1, 1]> o_t_23_cast = sigmoid(x = var_9162_cast_3);
            tensor<fp16, [1, 128, 1, 1]> var_9171_cast = mul(x = f_t_23_cast, y = var_8984_cast);
            tensor<fp16, [1, 128, 1, 1]> var_9172_cast = mul(x = i_t_23_cast, y = g_t_23_cast);
            tensor<fp16, [1, 128, 1, 1]> var_9174_cast = add(x = var_9171_cast, y = var_9172_cast);
            tensor<fp16, [1, 128, 1, 1]> var_9175_cast = tanh(x = var_9174_cast);
            tensor<fp16, [1, 128, 1, 1]> x_809_cast = mul(x = o_t_23_cast, y = var_9175_cast);
            tensor<int32, [4]> x_t_13_begin_0 = const()[name = tensor<string, []>("x_t_13_begin_0"), val = tensor<int32, [4]>([0, 0, 0, 3])];
            tensor<int32, [4]> x_t_13_end_0 = const()[name = tensor<string, []>("x_t_13_end_0"), val = tensor<int32, [4]>([1, 128, 1, 4])];
            tensor<bool, [4]> x_t_13_end_mask_0 = const()[name = tensor<string, []>("x_t_13_end_mask_0"), val = tensor<bool, [4]>([true, true, true, false])];
            tensor<fp16, [1, 128, 1, 1]> x_t_13_cast = slice_by_index(begin = x_t_13_begin_0, end = x_t_13_end_0, end_mask = x_t_13_end_mask_0, x = xs_cast);
            tensor<int32, [2]> var_9213 = const()[name = tensor<string, []>("op_9213"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_9219 = const()[name = tensor<string, []>("op_9219"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, []> var_9224 = const()[name = tensor<string, []>("op_9224"), val = tensor<int32, []>(1)];
            tensor<string, []> X_13_pad_type_0 = const()[name = tensor<string, []>("X_13_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> X_13_pad_0 = const()[name = tensor<string, []>("X_13_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [512, 128, 1, 1]> op_9210_to_fp16_affine_quantized = constexpr_affine_dequantize()[axis = tensor<int32, []>(0), name = tensor<string, []>("op_9210_to_fp16_affine_quantized"), quantized_data = tensor<int8, [512, 128, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(86716096))), scale = tensor<fp16, [512]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(86782272))), zero_point = tensor<int8, [512]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(86781696)))];
            tensor<fp16, [1, 512, 1, 1]> X_13_cast = conv(bias = primary_ep_encoder_lstm_bias_ih_l0_to_fp16, dilations = var_9219, groups = var_9224, pad = X_13_pad_0, pad_type = X_13_pad_type_0, strides = var_9213, weight = op_9210_to_fp16_affine_quantized, x = x_t_13_cast);
            tensor<int32, [2]> var_9246 = const()[name = tensor<string, []>("op_9246"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_9252 = const()[name = tensor<string, []>("op_9252"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, []> var_9257 = const()[name = tensor<string, []>("op_9257"), val = tensor<int32, []>(1)];
            tensor<string, []> H_13_pad_type_0 = const()[name = tensor<string, []>("H_13_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> H_13_pad_0 = const()[name = tensor<string, []>("H_13_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [512, 128, 1, 1]> op_9243_to_fp16_affine_quantized = constexpr_affine_dequantize()[axis = tensor<int32, []>(0), name = tensor<string, []>("op_9243_to_fp16_affine_quantized"), quantized_data = tensor<int8, [512, 128, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(86783360))), scale = tensor<fp16, [512]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(86849536))), zero_point = tensor<int8, [512]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(86848960)))];
            tensor<fp16, [1, 512, 1, 1]> H_13_cast = conv(bias = primary_ep_encoder_lstm_bias_hh_l0_to_fp16, dilations = var_9252, groups = var_9257, pad = H_13_pad_0, pad_type = H_13_pad_type_0, strides = var_9246, weight = op_9243_to_fp16_affine_quantized, x = x_t_11_cast);
            tensor<fp16, [1, 512, 1, 1]> var_9264_cast = add(x = X_13_cast, y = H_13_cast);
            tensor<int32, [4]> tile_61 = const()[name = tensor<string, []>("tile_61"), val = tensor<int32, [4]>([128, 128, 128, 128])];
            tensor<int32, []> var_9267_axis_0 = const()[name = tensor<string, []>("op_9267_axis_0"), val = tensor<int32, []>(1)];
            tensor<fp16, [1, 128, 1, 1]> var_9267_cast_0, tensor<fp16, [1, 128, 1, 1]> var_9267_cast_1, tensor<fp16, [1, 128, 1, 1]> var_9267_cast_2, tensor<fp16, [1, 128, 1, 1]> var_9267_cast_3 = split(axis = var_9267_axis_0, split_sizes = tile_61, x = var_9264_cast);
            tensor<fp16, [1, 128, 1, 1]> i_t_27_cast = sigmoid(x = var_9267_cast_0);
            tensor<fp16, [1, 128, 1, 1]> f_t_27_cast = sigmoid(x = var_9267_cast_1);
            tensor<fp16, [1, 128, 1, 1]> g_t_27_cast = tanh(x = var_9267_cast_2);
            tensor<fp16, [1, 128, 1, 1]> o_t_27_cast = sigmoid(x = var_9267_cast_3);
            tensor<fp16, [1, 128, 1, 1]> var_9276_cast = mul(x = f_t_27_cast, y = var_9089_cast);
            tensor<fp16, [1, 128, 1, 1]> var_9277_cast = mul(x = i_t_27_cast, y = g_t_27_cast);
            tensor<fp16, [1, 128, 1, 1]> var_9279_cast = add(x = var_9276_cast, y = var_9277_cast);
            tensor<fp16, [1, 128, 1, 1]> var_9280_cast = tanh(x = var_9279_cast);
            tensor<fp16, [1, 128, 1, 1]> x_t_cast = mul(x = o_t_27_cast, y = var_9280_cast);
            tensor<int32, [2]> var_9298 = const()[name = tensor<string, []>("op_9298"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_9304 = const()[name = tensor<string, []>("op_9304"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, []> var_9309 = const()[name = tensor<string, []>("op_9309"), val = tensor<int32, []>(1)];
            tensor<string, []> X_pad_type_0 = const()[name = tensor<string, []>("X_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> X_pad_0 = const()[name = tensor<string, []>("X_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [512, 128, 1, 1]> op_9295_to_fp16_affine_quantized = constexpr_affine_dequantize()[axis = tensor<int32, []>(0), name = tensor<string, []>("op_9295_to_fp16_affine_quantized"), quantized_data = tensor<int8, [512, 128, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(86850624))), scale = tensor<fp16, [512]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(86916800))), zero_point = tensor<int8, [512]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(86916224)))];
            tensor<fp16, [1, 512, 1, 1]> X_cast = conv(bias = primary_ep_encoder_lstm_bias_ih_l1_to_fp16, dilations = var_9304, groups = var_9309, pad = X_pad_0, pad_type = X_pad_type_0, strides = var_9298, weight = op_9295_to_fp16_affine_quantized, x = x_t_cast);
            tensor<int32, [2]> var_9331 = const()[name = tensor<string, []>("op_9331"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_9337 = const()[name = tensor<string, []>("op_9337"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, []> var_9342 = const()[name = tensor<string, []>("op_9342"), val = tensor<int32, []>(1)];
            tensor<string, []> H_pad_type_0 = const()[name = tensor<string, []>("H_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> H_pad_0 = const()[name = tensor<string, []>("H_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [512, 128, 1, 1]> op_9328_to_fp16_affine_quantized = constexpr_affine_dequantize()[axis = tensor<int32, []>(0), name = tensor<string, []>("op_9328_to_fp16_affine_quantized"), quantized_data = tensor<int8, [512, 128, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(86917888))), scale = tensor<fp16, [512]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(86984064))), zero_point = tensor<int8, [512]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(86983488)))];
            tensor<fp16, [1, 512, 1, 1]> H_cast = conv(bias = primary_ep_encoder_lstm_bias_hh_l1_to_fp16, dilations = var_9337, groups = var_9342, pad = H_pad_0, pad_type = H_pad_type_0, strides = var_9331, weight = op_9328_to_fp16_affine_quantized, x = x_809_cast);
            tensor<fp16, [1, 512, 1, 1]> var_9349_cast = add(x = X_cast, y = H_cast);
            tensor<int32, [4]> tile_62 = const()[name = tensor<string, []>("tile_62"), val = tensor<int32, [4]>([128, 128, 128, 128])];
            tensor<int32, []> var_9352_axis_0 = const()[name = tensor<string, []>("op_9352_axis_0"), val = tensor<int32, []>(1)];
            tensor<fp16, [1, 128, 1, 1]> var_9352_cast_0, tensor<fp16, [1, 128, 1, 1]> var_9352_cast_1, tensor<fp16, [1, 128, 1, 1]> var_9352_cast_2, tensor<fp16, [1, 128, 1, 1]> var_9352_cast_3 = split(axis = var_9352_axis_0, split_sizes = tile_62, x = var_9349_cast);
            tensor<fp16, [1, 128, 1, 1]> i_t_cast = sigmoid(x = var_9352_cast_0);
            tensor<fp16, [1, 128, 1, 1]> f_t_cast = sigmoid(x = var_9352_cast_1);
            tensor<fp16, [1, 128, 1, 1]> g_t_cast = tanh(x = var_9352_cast_2);
            tensor<fp16, [1, 128, 1, 1]> o_t_cast = sigmoid(x = var_9352_cast_3);
            tensor<fp16, [1, 128, 1, 1]> var_9361_cast = mul(x = f_t_cast, y = var_9174_cast);
            tensor<fp16, [1, 128, 1, 1]> var_9362_cast = mul(x = i_t_cast, y = g_t_cast);
            tensor<fp16, [1, 128, 1, 1]> var_9364_cast = add(x = var_9361_cast, y = var_9362_cast);
            tensor<fp16, [1, 128, 1, 1]> var_9365_cast = tanh(x = var_9364_cast);
            tensor<fp16, [1, 128, 1, 1]> x_cast = mul(x = o_t_cast, y = var_9365_cast);
            tensor<int32, [2]> var_9383 = const()[name = tensor<string, []>("op_9383"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_9389 = const()[name = tensor<string, []>("op_9389"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, []> var_9394 = const()[name = tensor<string, []>("op_9394"), val = tensor<int32, []>(1)];
            tensor<string, []> var_9399_pad_type_0 = const()[name = tensor<string, []>("op_9399_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> var_9399_pad_0 = const()[name = tensor<string, []>("op_9399_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [4, 128, 1, 1]> var_9380_to_fp16 = const()[name = tensor<string, []>("op_9380_to_fp16"), val = tensor<fp16, [4, 128, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(86985152)))];
            tensor<fp16, [4]> primary_ep_output_layer_bias_to_fp16 = const()[name = tensor<string, []>("primary_ep_output_layer_bias_to_fp16"), val = tensor<fp16, [4]>([0.161865234, -0.175415039, -0.220825195, 0.0963745117])];
            tensor<fp16, [1, 4, 1, 1]> var_9399_cast = conv(bias = primary_ep_output_layer_bias_to_fp16, dilations = var_9389, groups = var_9394, pad = var_9399_pad_0, pad_type = var_9399_pad_type_0, strides = var_9383, weight = var_9380_to_fp16, x = x_805_cast);
            tensor<int32, [2]> var_9416 = const()[name = tensor<string, []>("op_9416"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_9422 = const()[name = tensor<string, []>("op_9422"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, []> var_9427 = const()[name = tensor<string, []>("op_9427"), val = tensor<int32, []>(1)];
            tensor<string, []> var_9432_pad_type_0 = const()[name = tensor<string, []>("op_9432_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> var_9432_pad_0 = const()[name = tensor<string, []>("op_9432_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [4, 128, 1, 1]> var_9413_to_fp16 = const()[name = tensor<string, []>("op_9413_to_fp16"), val = tensor<fp16, [4, 128, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(86986240)))];
            tensor<fp16, [1, 4, 1, 1]> var_9432_cast = conv(bias = primary_ep_output_layer_bias_to_fp16, dilations = var_9422, groups = var_9427, pad = var_9432_pad_0, pad_type = var_9432_pad_type_0, strides = var_9416, weight = var_9413_to_fp16, x = x_807_cast);
            tensor<int32, [2]> var_9449 = const()[name = tensor<string, []>("op_9449"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_9455 = const()[name = tensor<string, []>("op_9455"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, []> var_9460 = const()[name = tensor<string, []>("op_9460"), val = tensor<int32, []>(1)];
            tensor<string, []> var_9465_pad_type_0 = const()[name = tensor<string, []>("op_9465_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> var_9465_pad_0 = const()[name = tensor<string, []>("op_9465_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [4, 128, 1, 1]> var_9446_to_fp16 = const()[name = tensor<string, []>("op_9446_to_fp16"), val = tensor<fp16, [4, 128, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(86987328)))];
            tensor<fp16, [1, 4, 1, 1]> var_9465_cast = conv(bias = primary_ep_output_layer_bias_to_fp16, dilations = var_9455, groups = var_9460, pad = var_9465_pad_0, pad_type = var_9465_pad_type_0, strides = var_9449, weight = var_9446_to_fp16, x = x_809_cast);
            tensor<int32, [2]> var_9482 = const()[name = tensor<string, []>("op_9482"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_9488 = const()[name = tensor<string, []>("op_9488"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, []> var_9493 = const()[name = tensor<string, []>("op_9493"), val = tensor<int32, []>(1)];
            tensor<string, []> var_9498_pad_type_0 = const()[name = tensor<string, []>("op_9498_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> var_9498_pad_0 = const()[name = tensor<string, []>("op_9498_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [4, 128, 1, 1]> var_9479_to_fp16 = const()[name = tensor<string, []>("op_9479_to_fp16"), val = tensor<fp16, [4, 128, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(86988416)))];
            tensor<fp16, [1, 4, 1, 1]> var_9498_cast = conv(bias = primary_ep_output_layer_bias_to_fp16, dilations = var_9488, groups = var_9493, pad = var_9498_pad_0, pad_type = var_9498_pad_type_0, strides = var_9482, weight = var_9479_to_fp16, x = x_cast);
            tensor<int32, [2]> var_9515 = const()[name = tensor<string, []>("op_9515"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> var_9521 = const()[name = tensor<string, []>("op_9521"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, []> var_9526 = const()[name = tensor<string, []>("op_9526"), val = tensor<int32, []>(1)];
            tensor<string, []> ret_pad_type_0 = const()[name = tensor<string, []>("ret_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> ret_pad_0 = const()[name = tensor<string, []>("ret_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<fp16, [6000, 512, 1, 1]> op_9512_to_fp16_affine_quantized = constexpr_affine_dequantize()[axis = tensor<int32, []>(0), name = tensor<string, []>("op_9512_to_fp16_affine_quantized"), quantized_data = tensor<int8, [6000, 512, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(86989504))), scale = tensor<fp16, [6000]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(90067648))), zero_point = tensor<int8, [6000]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(90061568)))];
            tensor<fp16, [6000]> primary_ctc_ctc_lo_bias_to_fp16_affine_quantized = constexpr_affine_dequantize()[axis = tensor<int32, []>(0), name = tensor<string, []>("primary_ctc_ctc_lo_bias_to_fp16_affine_quantized"), quantized_data = tensor<int8, [6000]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(90079744))), scale = tensor<fp16, [6000]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(90091904))), zero_point = tensor<int8, [6000]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(90085824)))];
            tensor<fp16, [1, 6000, 1, 4]> ret_cast = conv(bias = primary_ctc_ctc_lo_bias_to_fp16_affine_quantized, dilations = var_9521, groups = var_9526, pad = ret_pad_0, pad_type = ret_pad_type_0, strides = var_9515, weight = op_9512_to_fp16_affine_quantized, x = xs_7_cast);
            tensor<int32, []> var_9532 = const()[name = tensor<string, []>("op_9532"), val = tensor<int32, []>(1)];
            tensor<fp16, [1, 6000, 1, 4]> ctc_act_1_cast = softmax(axis = var_9532, x = ret_cast);
            tensor<int32, []> var_9536 = const()[name = tensor<string, []>("op_9536"), val = tensor<int32, []>(-1)];
            tensor<bool, []> ep_output_1_interleave_0 = const()[name = tensor<string, []>("ep_output_1_interleave_0"), val = tensor<bool, []>(false)];
            tensor<fp16, [1, 4, 1, 4]> ep_output_1_cast = concat(axis = var_9536, interleave = ep_output_1_interleave_0, values = (var_9399_cast, var_9432_cast, var_9465_cast, var_9498_cast));
            tensor<int32, []> var_9538 = const()[name = tensor<string, []>("op_9538"), val = tensor<int32, []>(1)];
            tensor<fp16, [1, 4, 1, 4]> ep_output_cast = softmax(axis = var_9538, x = ep_output_1_cast);
            tensor<int32, [4]> var_9543_perm_0 = const()[name = tensor<string, []>("op_9543_perm_0"), val = tensor<int32, [4]>([0, 3, 2, 1])];
            tensor<int32, [1]> var_9545_axes_0 = const()[name = tensor<string, []>("op_9545_axes_0"), val = tensor<int32, [1]>([2])];
            tensor<fp16, [1, 4, 1, 4]> transpose_16 = transpose(perm = var_9543_perm_0, x = ep_output_cast);
            tensor<fp16, [1, 4, 4]> var_9545_cast = squeeze(axes = var_9545_axes_0, x = transpose_16);
            tensor<string, []> var_9545_cast_to_fp32_dtype_0 = const()[name = tensor<string, []>("op_9545_cast_to_fp32_dtype_0"), val = tensor<string, []>("fp32")];
            tensor<int32, []> var_9547 = const()[name = tensor<string, []>("op_9547"), val = tensor<int32, []>(0)];
            tensor<bool, []> var_9548_interleave_0 = const()[name = tensor<string, []>("op_9548_interleave_0"), val = tensor<bool, []>(false)];
            tensor<fp16, [2, 128, 1, 1]> var_9548_cast = concat(axis = var_9547, interleave = var_9548_interleave_0, values = (x_t_cast, x_cast));
            tensor<int32, [1]> var_9550_axes_0 = const()[name = tensor<string, []>("op_9550_axes_0"), val = tensor<int32, [1]>([2])];
            tensor<fp16, [2, 128, 1]> var_9550_cast = squeeze(axes = var_9550_axes_0, x = var_9548_cast);
            tensor<int32, [1]> var_9552_axes_0 = const()[name = tensor<string, []>("op_9552_axes_0"), val = tensor<int32, [1]>([2])];
            tensor<fp16, [2, 128]> var_9552_cast = squeeze(axes = var_9552_axes_0, x = var_9550_cast);
            tensor<string, []> var_9552_cast_to_fp32_dtype_0 = const()[name = tensor<string, []>("op_9552_cast_to_fp32_dtype_0"), val = tensor<string, []>("fp32")];
            tensor<int32, []> var_9554 = const()[name = tensor<string, []>("op_9554"), val = tensor<int32, []>(0)];
            tensor<bool, []> var_9555_interleave_0 = const()[name = tensor<string, []>("op_9555_interleave_0"), val = tensor<bool, []>(false)];
            tensor<fp16, [2, 128, 1, 1]> var_9555_cast = concat(axis = var_9554, interleave = var_9555_interleave_0, values = (var_9279_cast, var_9364_cast));
            tensor<int32, [1]> var_9557_axes_0 = const()[name = tensor<string, []>("op_9557_axes_0"), val = tensor<int32, [1]>([2])];
            tensor<fp16, [2, 128, 1]> var_9557_cast = squeeze(axes = var_9557_axes_0, x = var_9555_cast);
            tensor<int32, [1]> var_9559_axes_0 = const()[name = tensor<string, []>("op_9559_axes_0"), val = tensor<int32, [1]>([2])];
            tensor<fp16, [2, 128]> var_9559_cast = squeeze(axes = var_9559_axes_0, x = var_9557_cast);
            tensor<string, []> var_9559_cast_to_fp32_dtype_0 = const()[name = tensor<string, []>("op_9559_cast_to_fp32_dtype_0"), val = tensor<string, []>("fp32")];
            tensor<fp16, [1]> chunk_size_1_promoted_to_fp16 = const()[name = tensor<string, []>("chunk_size_1_promoted_to_fp16"), val = tensor<fp16, [1]>([4])];
            tensor<fp16, [128]> var_9566_cast = add(x = cast_57, y = chunk_size_1_promoted_to_fp16);
            tensor<string, []> var_9566_cast_to_fp32_dtype_0 = const()[name = tensor<string, []>("op_9566_cast_to_fp32_dtype_0"), val = tensor<string, []>("fp32")];
            tensor<int32, [4]> var_9569_perm_0 = const()[name = tensor<string, []>("op_9569_perm_0"), val = tensor<int32, [4]>([0, 3, 2, 1])];
            tensor<int32, [1]> var_9571_axes_0 = const()[name = tensor<string, []>("op_9571_axes_0"), val = tensor<int32, [1]>([2])];
            tensor<fp16, [1, 4, 1, 512]> transpose_15 = transpose(perm = var_9569_perm_0, x = xs_7_cast);
            tensor<fp16, [1, 4, 512]> var_9571_cast = squeeze(axes = var_9571_axes_0, x = transpose_15);
            tensor<string, []> var_9571_cast_to_fp32_dtype_0 = const()[name = tensor<string, []>("op_9571_cast_to_fp32_dtype_0"), val = tensor<string, []>("fp32")];
            tensor<fp16, []> var_9572_epsilon_0_to_fp16 = const()[name = tensor<string, []>("op_9572_epsilon_0_to_fp16"), val = tensor<fp16, []>(0)];
            tensor<fp16, [1, 6000, 1, 4]> var_9572_cast = log(epsilon = var_9572_epsilon_0_to_fp16, x = ctc_act_1_cast);
            tensor<int32, [4]> var_9575_perm_0 = const()[name = tensor<string, []>("op_9575_perm_0"), val = tensor<int32, [4]>([0, 3, 2, 1])];
            tensor<int32, [1]> ctc_act_3_axes_0 = const()[name = tensor<string, []>("ctc_act_3_axes_0"), val = tensor<int32, [1]>([2])];
            tensor<fp16, [1, 4, 1, 6000]> transpose_14 = transpose(perm = var_9575_perm_0, x = var_9572_cast);
            tensor<fp16, [1, 4, 6000]> ctc_act_3_cast = squeeze(axes = ctc_act_3_axes_0, x = transpose_14);
            tensor<fp16, []> var_9578_promoted_to_fp16 = const()[name = tensor<string, []>("op_9578_promoted_to_fp16"), val = tensor<fp16, []>(-12344)];
            tensor<fp16, []> var_9579_promoted_to_fp16 = const()[name = tensor<string, []>("op_9579_promoted_to_fp16"), val = tensor<fp16, []>(12344)];
            tensor<fp16, [1, 4, 6000]> var_9580_cast = clip(alpha = var_9578_promoted_to_fp16, beta = var_9579_promoted_to_fp16, x = ctc_act_3_cast);
            tensor<string, []> var_9580_cast_to_fp32_dtype_0 = const()[name = tensor<string, []>("op_9580_cast_to_fp32_dtype_0"), val = tensor<string, []>("fp32")];
            tensor<int32, []> var_9582 = const()[name = tensor<string, []>("op_9582"), val = tensor<int32, []>(0)];
            tensor<bool, []> var_9583_interleave_0 = const()[name = tensor<string, []>("op_9583_interleave_0"), val = tensor<bool, []>(false)];
            tensor<fp16, [2, 128, 8, 64]> var_9583_cast = concat(axis = var_9582, interleave = var_9583_interleave_0, values = (var_2370_cast, var_5496_cast));
            tensor<string, []> var_9583_cast_to_fp32_dtype_0 = const()[name = tensor<string, []>("op_9583_cast_to_fp32_dtype_0"), val = tensor<string, []>("fp32")];
            tensor<int32, []> var_9585 = const()[name = tensor<string, []>("op_9585"), val = tensor<int32, []>(0)];
            tensor<bool, []> var_9586_interleave_0 = const()[name = tensor<string, []>("op_9586_interleave_0"), val = tensor<bool, []>(false)];
            tensor<fp16, [12, 64, 8, 128]> var_9586_cast = concat(axis = var_9585, interleave = var_9586_interleave_0, values = (var_2372_cast, var_3018_cast, var_3492_cast, var_3966_cast, var_4440_cast, var_4914_cast, var_5498_cast, var_6144_cast, var_6618_cast, var_7092_cast, var_7566_cast, var_8040_cast));
            tensor<string, []> var_9586_cast_to_fp32_dtype_0 = const()[name = tensor<string, []>("op_9586_cast_to_fp32_dtype_0"), val = tensor<string, []>("fp32")];
            tensor<int32, []> var_9588 = const()[name = tensor<string, []>("op_9588"), val = tensor<int32, []>(0)];
            tensor<bool, []> var_9589_interleave_0 = const()[name = tensor<string, []>("op_9589_interleave_0"), val = tensor<bool, []>(false)];
            tensor<fp16, [12, 512, 1, 7]> var_9589_cast = concat(axis = var_9588, interleave = var_9589_interleave_0, values = (var_2629_cast, var_3112_cast, var_3586_cast, var_4060_cast, var_4534_cast, var_5008_cast, var_5755_cast, var_6238_cast, var_6712_cast, var_7186_cast, var_7660_cast, var_8134_cast));
            tensor<string, []> var_9589_cast_to_fp32_dtype_0 = const()[name = tensor<string, []>("op_9589_cast_to_fp32_dtype_0"), val = tensor<string, []>("fp32")];
            tensor<int32, []> var_9599 = const()[name = tensor<string, []>("op_9599"), val = tensor<int32, []>(2)];
            tensor<bool, []> var_9600_interleave_0 = const()[name = tensor<string, []>("op_9600_interleave_0"), val = tensor<bool, []>(false)];
            tensor<fp16, [1, 1, 4]> ones_1_to_fp16 = const()[name = tensor<string, []>("ones_1_to_fp16"), val = tensor<fp16, [1, 1, 4]>([[[1, 1, 1, 1]]])];
            tensor<fp16, [1, 1, 132]> var_9600_cast = concat(axis = var_9599, interleave = var_9600_interleave_0, values = (cast_56, ones_1_to_fp16));
            tensor<int32, [3]> var_9614_begin_0 = const()[name = tensor<string, []>("op_9614_begin_0"), val = tensor<int32, [3]>([0, 0, 4])];
            tensor<int32, [3]> var_9614_end_0 = const()[name = tensor<string, []>("op_9614_end_0"), val = tensor<int32, [3]>([1, 1, 132])];
            tensor<bool, [3]> var_9614_end_mask_0 = const()[name = tensor<string, []>("op_9614_end_mask_0"), val = tensor<bool, [3]>([true, true, true])];
            tensor<fp16, [1, 1, 128]> var_9614_cast = slice_by_index(begin = var_9614_begin_0, end = var_9614_end_0, end_mask = var_9614_end_mask_0, x = var_9600_cast);
            tensor<string, []> var_9614_cast_to_fp32_dtype_0 = const()[name = tensor<string, []>("op_9614_cast_to_fp32_dtype_0"), val = tensor<string, []>("fp32")];
            tensor<fp16, [1]> chunk_size_promoted_to_fp16 = const()[name = tensor<string, []>("chunk_size_promoted_to_fp16"), val = tensor<fp16, [1]>([8])];
            tensor<fp16, [128]> var_9621_cast = add(x = cast_63, y = chunk_size_promoted_to_fp16);
            tensor<string, []> var_9621_cast_to_fp32_dtype_0 = const()[name = tensor<string, []>("op_9621_cast_to_fp32_dtype_0"), val = tensor<string, []>("fp32")];
            tensor<fp16, []> var_9622_epsilon_0_to_fp16 = const()[name = tensor<string, []>("op_9622_epsilon_0_to_fp16"), val = tensor<fp16, []>(0)];
            tensor<fp16, [1, 51, 1, 8]> var_9622_cast = log(epsilon = var_9622_epsilon_0_to_fp16, x = ctc_act_5_cast);
            tensor<int32, [4]> var_9625_perm_0 = const()[name = tensor<string, []>("op_9625_perm_0"), val = tensor<int32, [4]>([0, 3, 2, 1])];
            tensor<int32, [1]> ctc_act_axes_0 = const()[name = tensor<string, []>("ctc_act_axes_0"), val = tensor<int32, [1]>([2])];
            tensor<fp16, [1, 8, 1, 51]> transpose_13 = transpose(perm = var_9625_perm_0, x = var_9622_cast);
            tensor<fp16, [1, 8, 51]> ctc_act_cast = squeeze(axes = ctc_act_axes_0, x = transpose_13);
            tensor<fp16, []> var_9628_promoted_to_fp16 = const()[name = tensor<string, []>("op_9628_promoted_to_fp16"), val = tensor<fp16, []>(-12344)];
            tensor<fp16, []> var_9629_promoted_to_fp16 = const()[name = tensor<string, []>("op_9629_promoted_to_fp16"), val = tensor<fp16, []>(12344)];
            tensor<fp16, [1, 8, 51]> var_9630_cast = clip(alpha = var_9628_promoted_to_fp16, beta = var_9629_promoted_to_fp16, x = ctc_act_cast);
            tensor<string, []> var_9630_cast_to_fp32_dtype_0 = const()[name = tensor<string, []>("op_9630_cast_to_fp32_dtype_0"), val = tensor<string, []>("fp32")];
            tensor<int32, []> var_9632 = const()[name = tensor<string, []>("op_9632"), val = tensor<int32, []>(0)];
            tensor<bool, []> var_9633_interleave_0 = const()[name = tensor<string, []>("op_9633_interleave_0"), val = tensor<bool, []>(false)];
            tensor<fp16, [2, 128, 8, 64]> var_9633_cast = concat(axis = var_9632, interleave = var_9633_interleave_0, values = (var_740_cast, var_1482_cast));
            tensor<string, []> var_9633_cast_to_fp32_dtype_0 = const()[name = tensor<string, []>("op_9633_cast_to_fp32_dtype_0"), val = tensor<string, []>("fp32")];
            tensor<int32, []> var_9635 = const()[name = tensor<string, []>("op_9635"), val = tensor<int32, []>(0)];
            tensor<bool, []> var_9636_interleave_0 = const()[name = tensor<string, []>("op_9636_interleave_0"), val = tensor<bool, []>(false)];
            tensor<fp16, [2, 64, 8, 128]> var_9636_cast = concat(axis = var_9635, interleave = var_9636_interleave_0, values = (var_742_cast, var_1484_cast));
            tensor<string, []> var_9636_cast_to_fp32_dtype_0 = const()[name = tensor<string, []>("op_9636_cast_to_fp32_dtype_0"), val = tensor<string, []>("fp32")];
            tensor<int32, []> var_9638 = const()[name = tensor<string, []>("op_9638"), val = tensor<int32, []>(0)];
            tensor<bool, []> var_9639_interleave_0 = const()[name = tensor<string, []>("op_9639_interleave_0"), val = tensor<bool, []>(false)];
            tensor<fp16, [2, 512, 1, 7]> var_9639_cast = concat(axis = var_9638, interleave = var_9639_interleave_0, values = (var_991_cast, var_1733_cast));
            tensor<string, []> var_9639_cast_to_fp32_dtype_0 = const()[name = tensor<string, []>("op_9639_cast_to_fp32_dtype_0"), val = tensor<string, []>("fp32")];
            tensor<int32, []> var_9649 = const()[name = tensor<string, []>("op_9649"), val = tensor<int32, []>(2)];
            tensor<bool, []> var_9650_interleave_0 = const()[name = tensor<string, []>("op_9650_interleave_0"), val = tensor<bool, []>(false)];
            tensor<fp16, [1, 1, 8]> ones_to_fp16 = const()[name = tensor<string, []>("ones_to_fp16"), val = tensor<fp16, [1, 1, 8]>([[[1, 1, 1, 1, 1, 1, 1, 1]]])];
            tensor<fp16, [1, 1, 136]> var_9650_cast = concat(axis = var_9649, interleave = var_9650_interleave_0, values = (cast_61, ones_to_fp16));
            tensor<int32, [3]> var_9664_begin_0 = const()[name = tensor<string, []>("op_9664_begin_0"), val = tensor<int32, [3]>([0, 0, 8])];
            tensor<int32, [3]> var_9664_end_0 = const()[name = tensor<string, []>("op_9664_end_0"), val = tensor<int32, [3]>([1, 1, 136])];
            tensor<bool, [3]> var_9664_end_mask_0 = const()[name = tensor<string, []>("op_9664_end_mask_0"), val = tensor<bool, [3]>([true, true, true])];
            tensor<fp16, [1, 1, 128]> var_9664_cast = slice_by_index(begin = var_9664_begin_0, end = var_9664_end_0, end_mask = var_9664_end_mask_0, x = var_9650_cast);
            tensor<string, []> var_9664_cast_to_fp32_dtype_0 = const()[name = tensor<string, []>("op_9664_cast_to_fp32_dtype_0"), val = tensor<string, []>("fp32")];
            tensor<fp32, [1, 4, 4]> ep_act = cast(dtype = var_9545_cast_to_fp32_dtype_0, x = var_9545_cast);
            tensor<fp32, [2, 128]> wp_h_cache_out = cast(dtype = var_9552_cast_to_fp32_dtype_0, x = var_9552_cast);
            tensor<fp32, [2, 128]> wp_c_cache_out = cast(dtype = var_9559_cast_to_fp32_dtype_0, x = var_9559_cast);
            tensor<fp32, [128]> wp_offset_out = cast(dtype = var_9566_cast_to_fp32_dtype_0, x = var_9566_cast);
            tensor<fp32, [1, 4, 512]> encoder_out = cast(dtype = var_9571_cast_to_fp32_dtype_0, x = var_9571_cast);
            tensor<fp32, [1, 4, 6000]> wordpiece_act = cast(dtype = var_9580_cast_to_fp32_dtype_0, x = var_9580_cast);
            tensor<fp32, [2, 128, 8, 64]> wp_att_key_cache_out = cast(dtype = var_9583_cast_to_fp32_dtype_0, x = var_9583_cast);
            tensor<fp32, [12, 64, 8, 128]> wp_att_value_cache_out = cast(dtype = var_9586_cast_to_fp32_dtype_0, x = var_9586_cast);
            tensor<fp32, [12, 512, 1, 7]> wp_cnn_cache_out = cast(dtype = var_9589_cast_to_fp32_dtype_0, x = var_9589_cast);
            tensor<fp32, [1, 1, 128]> wp_masks_out = cast(dtype = var_9614_cast_to_fp32_dtype_0, x = var_9614_cast);
            tensor<fp32, [128]> ph_offset_out = cast(dtype = var_9621_cast_to_fp32_dtype_0, x = var_9621_cast);
            tensor<fp32, [1, 8, 51]> phone_act = cast(dtype = var_9630_cast_to_fp32_dtype_0, x = var_9630_cast);
            tensor<fp32, [2, 128, 8, 64]> ph_att_key_cache_out = cast(dtype = var_9633_cast_to_fp32_dtype_0, x = var_9633_cast);
            tensor<fp32, [2, 64, 8, 128]> ph_att_value_cache_out = cast(dtype = var_9636_cast_to_fp32_dtype_0, x = var_9636_cast);
            tensor<fp32, [2, 512, 1, 7]> ph_cnn_cache_out = cast(dtype = var_9639_cast_to_fp32_dtype_0, x = var_9639_cast);
            tensor<fp32, [1, 1, 128]> ph_masks_out = cast(dtype = var_9664_cast_to_fp32_dtype_0, x = var_9664_cast);
        } -> (wp_att_key_cache_out, wp_att_value_cache_out, wp_cnn_cache_out, wp_masks_out, wp_offset_out, wp_h_cache_out, wp_c_cache_out, ph_att_key_cache_out, ph_att_value_cache_out, ph_cnn_cache_out, ph_masks_out, ph_offset_out, wordpiece_act, encoder_out, phone_act, ep_act);
}
